
# Natural Language Question
# =======================
Retrieve the UniProtKB proteins, their catalyzed Rhea reactions, their encoding genes (Ensembl) and the anatomic entities where the genes are expressed (UBERON anatomic entites from Bgee expression data resource).

# Target Endpoint
# ===============
https://sparql.uniprot.org/sparql/

# Ground Truth Query
# =================
PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>
PREFIX genex: <http://purl.org/genex#>
PREFIX lscr: <http://purl.org/lscr#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rh: <http://rdf.rhea-db.org/>
PREFIX taxon: <http://purl.uniprot.org/taxonomy/>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT DISTINCT ?protein ?ensemblGene ?reaction ?anatomicEntityLabel ?anatomicEntity
WHERE {
  # federated query to Rhea enadpoint
  {
    SELECT DISTINCT ?reaction WHERE {
      SERVICE <https://sparql.rhea-db.org/sparql> {
        ?reaction rdfs:subClassOf rh:Reaction ;
          rh:equation ?reactionEquation ;
          rh:side ?reactionSide .
        ?reactionSide rh:contains ?participant .
        ?participant rh:compound ?compound .
        # compound constraint (CHEBI:16113 == cholesterol)
        ?compound rh:chebi CHEBI:16113 .
      }
    }
  }
  # taxonomy constraint (taxon:9606 == Homo sapiens)
  ?protein up:organism taxon:9606 ;
    up:annotation ?a ;
    rdfs:seeAlso / up:transcribedFrom ?ensemblGene .
  ?a a up:Catalytic_Activity_Annotation ;
    up:catalyticActivity ?ca .
  ?ca up:catalyzedReaction ?reaction .
  # federated query to Bgee (expression data)
  BIND(IRI(REPLACE(STR(?ensemblGene), "\\.[0-9]+$", "")) AS ?ensemblGeneNoVersion)
  SERVICE <https://www.bgee.org/sparql/> {
    ?gene lscr:xrefEnsemblGene ?ensemblGeneNoVersion ;
      genex:isExpressedIn ?anatomicEntity .
    ?anatomicEntity rdfs:label ?anatomicEntityLabel .
  }
}

# Predicted Query
# ==============
# https://sparql.uniprot.org/sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT DISTINCT ?protein ?reaction ?gene ?anatomicalEntity
WHERE {
  # Query UniProt for proteins and their associated Rhea reactions
  SERVICE <https://sparql.uniprot.org/sparql> {
    ?protein a up:Protein .
    ?protein up:annotation ?annotation .
    ?annotation rdf:type <http://purl.uniprot.org/core/Reaction> .
    ?annotation rdfs:seeAlso ?reaction .
    FILTER (REGEX(STR(?reaction), "rhea-db.org")) # Filter to ensure the reaction is from Rhea
  }

  # Query Rhea for the reaction identifiers (not strictly necessary, but included for clarity/example)
  # SERVICE <https://sparql.rhea-db.org/sparql> {
  #   ?rheaReaction rdfs:about ?reaction .
  # }
  
  # Assuming there's a link from UniProt proteins to Ensembl genes (hypothetical example)
  SERVICE <https://sparql.uniprot.org/sparql> {
     OPTIONAL {
        ?protein up:encodedBy ?gene . # Replace up:encodedBy with the actual predicate if it exists
     }
  }

  # Hypothetically, query Bgee or another endpoint for anatomical entities where the gene is expressed
  # This is a placeholder as Bgee does not have a public SPARQL endpoint and the link between Ensembl and UBERON is not directly available in UniProt.
  # Replace the following with the appropriate endpoint and predicates if available
  # SERVICE <BGEE_SPARQL_ENDPOINT> {
  #   ?gene bgee:expressedIn ?anatomicalEntity .
  #   ?anatomicalEntity rdf:type <http://purl.obolibrary.org/obo/UBERON_0001062> . # Example UBERON class for anatomical entity
  # }
  BIND("No BGEE SPARQL endpoint available" AS ?anatomicalEntity) # Placeholder
}
