
# Natural Language Question
# =======================
Find the orthologous proteins for UniProtKB entry P05067 using the <a href="http://www.orthod.org">OrthoDB database</a>

# Target Endpoint
# ===============
https://sparql.uniprot.org/sparql/

# Ground Truth Query
# =================
PREFIX orthodb: <http://purl.orthodb.org/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT
  ?protein
  ?orthoGroup
  ?scientificName
  ?functionComment
  ?prefferedGeneName
  ((STRLEN(?value) - ?medianLength) as ?deviationFromMedianLength)
WHERE
{
  uniprotkb:P05067 a up:Protein ;
        up:organism/up:scientificName ?scientificName ;
        rdfs:seeAlso ?orthoGroup ;
        up:encodedBy/skos:prefLabel ?prefferedGeneName ;
          up:sequence/rdf:value ?value .
  OPTIONAL {
    ?protein up:annotation ?functionAnnotation .
    ?functionAnnotation a up:Function_Annotation ;
      rdfs:comment ?functionComment .
  }
  SERVICE <https://sparql.orthodb.org/sparql>{
    ?orthoGroup orthodb:ogMedianProteinLength ?medianLength .
    ?orthoGroup orthodb:hasMember ?xref .
    ?xref orthodb:xref/orthodb:xrefResource uniprotkb:P05067 .
  }
}
LIMIT 985915

# Predicted Query
# ==============
# https://sparql.uniprot.org/sparql
PREFIX up: <http://purl.uniprot.org/core/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# This query retrieves cross-references from the UniProt entry P05067.
# While OrthoDB does not have a dedicated SPARQL endpoint provided in the context,
# UniProt often includes cross-references to external orthology databases like OrthoDB
# via properties like up:dbxref. This query fetches all such cross-references
# for the specified protein, among which links to OrthoDB might be present if they exist
# in the UniProt RDF model.
SELECT ?xref
WHERE {
  # Specify the UniProt protein entry of interest
  # The URI for P05067 is http://purl.uniprot.org/uniprot/P05067
  SERVICE <https://sparql.uniprot.org/sparql> {
    <http://purl.uniprot.org/uniprot/P05067> up:dbxref ?xref .
    # Filter for specific types of cross-references if needed,
    # but fetching all dbxref is the best approach without a specific OrthoDB property.
    # Example: FILTER(contains(str(?xref), "OrthoDB")) # Uncomment if you specifically want to filter based on URI string
  }
}
