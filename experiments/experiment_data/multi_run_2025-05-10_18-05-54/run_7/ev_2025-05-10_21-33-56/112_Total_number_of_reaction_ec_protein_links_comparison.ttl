
# Natural Language Question
# =======================
Total number of <reaction> <ec> <protein> links

# Target Endpoint
# ===============
https://sparql.rhea-db.org/sparql

# Ground Truth Query
# =================
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rh:<http://rdf.rhea-db.org/>
PREFIX ec:<http://purl.uniprot.org/enzyme/>
PREFIX up:<http://purl.uniprot.org/core/>

SELECT
  (count(?reaction) as ?reactionEcProteinLinkCount)
WHERE {
  ?reaction rdfs:subClassOf rh:Reaction .
  ?reaction rh:ec ?enzyme
  SERVICE <http://sparql.uniprot.org/sparql> {
    ?protein up:reviewed true .
    ?protein up:enzyme ?enzyme.
  }
}

# Predicted Query
# ==============
# https://sparql.rhea-db.org/sparql
PREFIX rhea: <http://rdf.rhea-db.org/>
PREFIX uniprot: <http://purl.uniprot.org/core/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT (COUNT(DISTINCT ?reaction) AS ?totalLinks)
WHERE {
  # Get reactions from RheaDB that have EC number annotations
  SERVICE <https://sparql.rhea-db.org/sparql> {
    ?reaction a rhea:Reaction .
    OPTIONAL { ?reaction rhea:ec ?ec . }  # Reactions might have EC numbers
  }

  # If an EC number is found, query UniProt for proteins associated with that EC number
  OPTIONAL {
    SERVICE <https://sparql.uniprot.org/sparql> {
      ?protein uniprot:enzyme ?ec . # Find proteins in UniProt with the same EC number
      ?protein a uniprot:Protein .
    }
  }
  
  # Consider cases where there is a reaction and potentially a related protein via EC number
  FILTER (BOUND(?reaction))
}
