
# Natural Language Question
# =======================
Connect patents cited in UniProtKB with those in the patent database at EPO via publication number.

# Target Endpoint
# ===============
https://sparql.uniprot.org/sparql/

# Ground Truth Query
# =================
PREFIX patent: <http://data.epo.org/linked-data/def/patent/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT ?citation ?patent ?application ?applicationNo
WHERE
{
  ?citation a up:Patent_Citation ;
    skos:exactMatch ?patent .
  FILTER(CONTAINS(STR(?patent), 'EP'))
  BIND(SUBSTR(STR(?patent), 35) AS ?applicationNo)
  SERVICE <https://data.epo.org/linked-data/query>{
    ?application patent:publicationNumber ?applicationNo
  }
}

# Predicted Query
# ==============
# https://sparql.uniprot.org/sparql
# This query attempts to find patent identifiers in UniProtKB
# and link them to a hypothetical patent database (e.g., at EPO)
# using publication numbers.  Since the actual schema of the
# external patent database is unknown, the query uses a placeholder.
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT DISTINCT ?uniprotEntry ?patentIdentifier ?patent
WHERE {
  # Find UniProt entries that have patent identifiers.
  SERVICE <https://sparql.uniprot.org/sparql> {
    ?uniprotEntry a up:Protein ;
      rdfs:seeAlso ?patentIdentifier . # Assuming rdfs:seeAlso links to external resources

    # Filter for patent identifiers (this might need adjustment based on actual data)
    FILTER (CONTAINS(STR(?patentIdentifier), "patent") || CONTAINS(STR(?patentIdentifier), "Patent"))
  }

  # Hypothetical service for a patent database (e.g., at EPO).
  # Replace with the actual endpoint and property if available.
  SERVICE <http://example.org/patent-database-sparql> {
    ?patent <http://example.org/patent/publicationNumber> ?patentIdentifier . # Replace with actual property
  }
}
