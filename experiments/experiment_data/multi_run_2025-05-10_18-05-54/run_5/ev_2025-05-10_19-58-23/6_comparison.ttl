
# Natural Language Question
# =======================
For a given lipid (SWISSLIPID:000399814, Ceramide), return a list of all corresponding reactions (Rhea IDs and equation), as well as their enzymes as annotated in UniProtKB/Swiss-Prot) enzymes themselves (ID and protein name).
This query does not consider the hierarchy: it looks for reactions and enzymes only for the specified lipid.

# Target Endpoint
# ===============
https://sparql.swisslipids.org/sparql/

# Ground Truth Query
# =================
PREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rh: <http://rdf.rhea-db.org/>
PREFIX up: <http://purl.uniprot.org/core/>

# Example 6
SELECT ?startId ?startName ?chebi ?rhea ?rheaEquation ?uniprot ?uniprotName
WHERE
{
  # SwissLipids query (list of) identifier(s)
  VALUES ?startId { SWISSLIPID:000399814 }
  # name
  ?startId rdfs:label ?startName .
  # ChEBI x-ref
  ?startId owl:equivalentClass ?chebi .
  # federated query to Rhea
  SERVICE <https://sparql.rhea-db.org/sparql> {
  	?rhea rh:equation ?rheaEquation .
  	?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .
  }    
  # federated query to UniProt
  SERVICE <https://sparql.uniprot.org/sparql> {
    ?uniprot up:reviewed true .
    ?uniprot up:recommendedName/up:fullName ?uniprotName .
    ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .
  }
} 
ORDER BY ?startId

# Predicted Query
# ==============
# https://sparql.swisslipids.org/sparql/
# Federated SPARQL query to find reactions and enzymes associated with a specific lipid (SWISSLIPID:000399814, Ceramide)
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX sl: <http://www.swisslipids.org/rdf#>

SELECT DISTINCT ?rheaID ?equation ?enzymeID ?proteinName
WHERE {
  # Find reactions associated with the given lipid in SwissLipids
  SERVICE <https://sparql.swisslipids.org/sparql/> {
    VALUES ?lipid { <http://www.swisslipids.org/rdf/SL_000399814> } # SWISSLIPID:000399814
    ?reaction sl:refersToLipid ?lipid .
    ?reaction rdf:type sl:Reaction .
    ?reaction sl:rheaId ?rheaID .
  }

  # Get the equation for the reaction from Rhea
  SERVICE <https://sparql.rhea-db.org/sparql/> {
    BIND(STR(?rheaID) AS ?rheaIDString)
    FILTER (REGEX(?rheaIDString, "^[0-9]+$")) # Filter to ensure rheaID is a number
    BIND(URI(CONCAT("http://rdf.rhea-db.org/", ?rheaIDString)) AS ?rheaURI)
    ?rheaURI rdfs:comment ?equation .
  }

  # Find enzymes associated with the reactions in UniProt
  SERVICE <https://sparql.uniprot.org/sparql> {
    ?enzyme uniprot:catalyticActivity ?rheaURI . # Link enzyme to reaction via catalytic activity
    ?enzyme rdf:type <http://purl.uniprot.org/core/Protein> . # Ensure it's a protein
    ?enzyme rdfs:label ?proteinName . # Get the protein name
    BIND(SUBSTR(STR(?enzyme), 38) AS ?enzymeID) # Extract the UniProt ID from the URI
  }
}
