
# Natural Language Question
# =======================
Search for Chemical names starting in Japanese, translated to english using allie

# Target Endpoint
# ===============
https://sparql.rhea-db.org/sparql/

# Ground Truth Query
# =================
PREFIX oboInOwl: <http://www.geneontology.org/formats/oboInOwl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT
*
WHERE {
SERVICE <https://data.allie.dbcls.jp/sparql>{
        ?x rdfs:label "1,2,4-トリクロロベンゼン"@ja ;
            rdfs:label ?englishLabel .
        FILTER(lang(?englishLabel) = "en")
    }
  BIND(STR(?englishLabel) AS ?englishLabelStr)
  ?chebi rdfs:label|oboInOwl:hasSynonym ?englishLabelStr .
}

# Predicted Query
# ==============
# https://sparql.uniprot.org/sparql
# Federated query to search for chemical names related to "Japanese" and translate them to English using ALLIE.
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>

SELECT DISTINCT ?chemicalNameEn
WHERE {
  # Subquery to find ChEBI IDs related to "Japanese" chemicals.
  SERVICE <https://sparql.rhea-db.org/sparql> {
    SELECT DISTINCT ?chebiID WHERE {
      ?reaction rdfs:comment ?comment .
      FILTER (CONTAINS(LCASE(?comment), "japanese")) # Filter reactions related to "Japanese".
      ?reaction rhea:has_participant ?participant .
      ?participant chebi:CHEBI ?chebiID .
    }
  }

  # Use the found ChEBI IDs to retrieve chemical names and translate them to English.
  SERVICE <https://sparql.uniprot.org/sparql> {
    BIND(IRI(CONCAT("http://purl.obolibrary.org/obo/CHEBI_", ?chebiID)) AS ?chemical)
    ?chemical rdfs:label ?chemicalName .
    
    # Attempt to translate the chemical name to English using ALLIE.
    SERVICE <http://translator.allie.dbcls.jp/sparql> {
      OPTIONAL {
        ?translation a <http://purl.org/dbcls/allie/Translation> ;
                     <http://purl.org/dbcls/allie/source> ?chemicalName ;
                     <http://purl.org/dbcls/allie/target> ?chemicalNameEn .
        FILTER (LANG(?chemicalNameEn) = "en")
      }
    }
    FILTER (REGEX(?chemicalName, "^Japanese", "i")) # Filter chemical names starting with "Japanese" (case-insensitive).
  }
}
