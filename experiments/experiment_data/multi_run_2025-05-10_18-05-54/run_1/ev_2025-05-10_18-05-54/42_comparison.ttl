
# Natural Language Question
# =======================
Connect patents cited in UniProtKB with those in the patent database at EPO via publication number.

# Target Endpoint
# ===============
https://sparql.uniprot.org/sparql/

# Ground Truth Query
# =================
PREFIX patent: <http://data.epo.org/linked-data/def/patent/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT ?citation ?patent ?application ?applicationNo
WHERE
{
  ?citation a up:Patent_Citation ;
    skos:exactMatch ?patent .
  FILTER(CONTAINS(STR(?patent), 'EP'))
  BIND(SUBSTR(STR(?patent), 35) AS ?applicationNo)
  SERVICE <https://data.epo.org/linked-data/query>{
    ?application patent:publicationNumber ?applicationNo
  }
}

# Predicted Query
# ==============
# https://sparql.uniprot.org/sparql
PREFIX up: <http://purl.uniprot.org/core/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?uniprotEntry ?patentPublicationNumber
WHERE {
  # Query UniProt for entries related to a gene
  SERVICE <https://sparql.uniprot.org/sparql> {
    ?uniprotEntry a up:Protein .
    ?uniprotEntry rdfs:label ?geneName . # Assuming UniProt entries have a gene name label
  }
  
  # Query EPO patent database for patents related to the same gene
  SERVICE <https://ops.epo.org/3.2/rest-services/sparql> { # Hypothetical EPO SPARQL endpoint
    ?patent a <http://www.epo.org/rdf/ontology/patent> . # Hypothetical patent class
    ?patent <http://www.epo.org/rdf/ontology/title> ?patentTitle . # Hypothetical patent title
    FILTER (CONTAINS(LCASE(?patentTitle), LCASE(?geneName))) # Filter patents by gene name in title
    ?patent <http://www.epo.org/rdf/ontology/publicationNumber> ?patentPublicationNumber . # Hypothetical patent publication number
  }
}
