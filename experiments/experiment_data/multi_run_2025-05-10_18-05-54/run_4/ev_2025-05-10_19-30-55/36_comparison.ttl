
# Natural Language Question
# =======================
Find the orthologous proteins for UniProtKB entry P05067 using the <a href="http://www.orthod.org">OrthoDB database</a>

# Target Endpoint
# ===============
https://sparql.uniprot.org/sparql/

# Ground Truth Query
# =================
PREFIX orthodb: <http://purl.orthodb.org/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT
  ?protein
  ?orthoGroup
  ?scientificName
  ?functionComment
  ?prefferedGeneName
  ((STRLEN(?value) - ?medianLength) as ?deviationFromMedianLength)
WHERE
{
  uniprotkb:P05067 a up:Protein ;
        up:organism/up:scientificName ?scientificName ;
        rdfs:seeAlso ?orthoGroup ;
        up:encodedBy/skos:prefLabel ?prefferedGeneName ;
          up:sequence/rdf:value ?value .
  OPTIONAL {
    ?protein up:annotation ?functionAnnotation .
    ?functionAnnotation a up:Function_Annotation ;
      rdfs:comment ?functionComment .
  }
  SERVICE <https://sparql.orthodb.org/sparql>{
    ?orthoGroup orthodb:ogMedianProteinLength ?medianLength .
    ?orthoGroup orthodb:hasMember ?xref .
    ?xref orthodb:xref/orthodb:xrefResource uniprotkb:P05067 .
  }
}
LIMIT 985915

# Predicted Query
# ==============
# https://sparql.uniprot.org/sparql
# Find orthologous proteins for UniProtKB entry P05067 using OrthoDB.
# Since there is no direct link to OrthoDB, this query will focus on finding orthologs within UniProt.
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX up: <http://purl.uniprot.org/core/>
PREFIX uniprot: <http://purl.uniprot.org/uniprot/>

SELECT DISTINCT ?orthologousProtein ?geneName ?organismName
WHERE {
  # Focus on the UniProt endpoint since OrthoDB is not directly accessible.
  VALUES ?protein { uniprot:P05067 } # The UniProt entry of interest.

  ?protein up:sequence ?sequenceResource .
  ?sequenceResource up:organism ?organism .
  ?organism rdfs:label ?organismName .

  # Find proteins that are not the same as the input protein.
  ?orthologousProtein a up:Protein .
  FILTER (?orthologousProtein != ?protein)

  # Proteins with similar names
  ?orthologousProtein up:recommendedName ?recName .
  ?recName rdfs:label ?geneName .
  FILTER (CONTAINS(LCASE(?geneName), LCASE("protein"))) # Filter for proteins

  # Optional: Further refine by organism, if possible.  This might require more specific organism information.
  OPTIONAL {
    ?orthologousProtein up:sequence ?orthologousSequenceResource .
    ?orthologousSequenceResource up:organism ?orthologousOrganism .
    ?orthologousOrganism rdfs:label ?orthologousOrganismName .
    #FILTER (CONTAINS(LCASE(?organismName), LCASE(?orthologousOrganismName))) # Optional organism filter.
  }
}
