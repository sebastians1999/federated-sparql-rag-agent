
# Natural Language Question
# =======================
Generate a draft human metabolome

# Target Endpoint
# ===============
https://sparql.uniprot.org/sparql/

# Ground Truth Query
# =================
PREFIX chebislash: <http://purl.obolibrary.org/obo/chebi/>
PREFIX rh: <http://rdf.rhea-db.org/>
PREFIX taxon: <http://purl.uniprot.org/taxonomy/>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT
?uniprot ?mnemonic ?rhea ?chebi ?smiles ?inchiKey
WHERE
{
  ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea ;
        up:organism taxon:9606 ;
        up:mnemonic ?mnemonic .
  SERVICE <https://sparql.rhea-db.org/sparql> {
	?rhea rh:side/rh:contains/rh:compound ?compound .
    ?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?chebi .
   }
   ?chebi chebislash:smiles ?smiles ;
          chebislash:inchikey ?inchiKey .
}

# Predicted Query
# ==============
# https://sparql.uniprot.org/sparql
# This query is a draft and may not be fully executable due to the complexity of defining and querying the entire human metabolome across SPARQL endpoints.
# It provides a starting point by querying UniProt for proteins associated with human and potentially involved in metabolic processes.
# Further refinement would require integrating data from other metabolome-specific databases like HMDB, KEGG, or ChEBI, which are not directly available in the provided endpoint list.

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX up: <http://purl.uniprot.org/core/>
PREFIX taxon: <http://purl.uniprot.org/taxonomy/>

SELECT DISTINCT ?protein ?proteinName
WHERE {
  # Find proteins associated with Homo sapiens (Human)
  ?protein a up:Protein .
  ?protein up:organism taxon:9606 . # 9606 is the NCBI Taxonomy ID for Homo sapiens
  ?protein rdfs:label ?proteinName .

  # Attempt to filter for proteins potentially involved in metabolic processes.
  # This is a broad filter and may require more specific annotation properties if available in UniProt.
  # Consider using GO annotations related to metabolism if available via UniProt SPARQL.
  # FILTER CONTAINS(LCASE(?proteinName), "metabolic")  #This is too broad and might not be accurate

  #SERVICE <other_metabolome_endpoint> {
  #  # Query other metabolome databases (e.g., HMDB, KEGG) for metabolites and related proteins.
  #  # This requires knowing the specific schema and properties of those endpoints.
  #  # Example (replace with actual properties):
  #  # ?metabolite <related_protein_property> ?protein .
  #}
}
#LIMIT 10 # Limiting the results for demonstration purposes. Remove to get all results.
