
# Natural Language Question
# =======================
Connect patents cited in UniProtKB with those in the patent database at EPO via publication number.

# Target Endpoint
# ===============
https://sparql.uniprot.org/sparql/

# Ground Truth Query
# =================
PREFIX patent: <http://data.epo.org/linked-data/def/patent/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT ?citation ?patent ?application ?applicationNo
WHERE
{
  ?citation a up:Patent_Citation ;
    skos:exactMatch ?patent .
  FILTER(CONTAINS(STR(?patent), 'EP'))
  BIND(SUBSTR(STR(?patent), 35) AS ?applicationNo)
  SERVICE <https://data.epo.org/linked-data/query>{
    ?application patent:publicationNumber ?applicationNo
  }
}

# Predicted Query
# ==============
# https://sparql.uniprot.org/sparql
# Retrieve UniProtKB entries and their associated patent identifiers.
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT ?uniprotEntry ?patentIdentifier
WHERE {
  ?uniprotEntry a up:Protein .  # Select UniProt entries that are proteins.
  
  # Look for potential patent identifiers.  This might need adjustment based on the actual property used in UniProt.
  OPTIONAL { ?uniprotEntry up:citation ?citation .  # Check for citations
             ?citation rdfs:comment ?patentIdentifier . # Assuming patent ID is in the comment.  This is an assumption.
             FILTER CONTAINS(LCASE(?patentIdentifier), "patent")  # Filter for comments containing "patent"
           }
  
  #Alternative way to look for patent identifiers using database cross-references
  OPTIONAL {
    ?uniprotEntry up:database ?dbReference .
    ?dbReference rdfs:label ?dbName .
    ?dbReference up:identifier ?patentIdentifier .
    FILTER CONTAINS(LCASE(?dbName), "patent") #Filter for database names containing "patent"
  }
}
#The query retrieves UniProt entries and attempts to extract patent identifiers from citation comments or database cross-references.
#Since there is no direct EPO endpoint, the patent identifiers retrieved here can be used in a separate query against the EPO database.
