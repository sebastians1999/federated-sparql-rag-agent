
# Natural Language Question
# =======================
For a given lipid (SWISSLIPID:000399814, Ceramide), return a list of all corresponding reactions (Rhea IDs and equation), as well as their enzymes as annotated in UniProtKB/Swiss-Prot) enzymes themselves (ID and protein name).
This query does not consider the hierarchy: it looks for reactions and enzymes only for the specified lipid.

# Target Endpoint
# ===============
https://sparql.swisslipids.org/sparql/

# Ground Truth Query
# =================
PREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rh: <http://rdf.rhea-db.org/>
PREFIX up: <http://purl.uniprot.org/core/>

# Example 6
SELECT ?startId ?startName ?chebi ?rhea ?rheaEquation ?uniprot ?uniprotName
WHERE
{
  # SwissLipids query (list of) identifier(s)
  VALUES ?startId { SWISSLIPID:000399814 }
  # name
  ?startId rdfs:label ?startName .
  # ChEBI x-ref
  ?startId owl:equivalentClass ?chebi .
  # federated query to Rhea
  SERVICE <https://sparql.rhea-db.org/sparql> {
  	?rhea rh:equation ?rheaEquation .
  	?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .
  }    
  # federated query to UniProt
  SERVICE <https://sparql.uniprot.org/sparql> {
    ?uniprot up:reviewed true .
    ?uniprot up:recommendedName/up:fullName ?uniprotName .
    ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .
  }
} 
ORDER BY ?startId

# Predicted Query
# ==============
# https://sparql.swisslipids.org/sparql/
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX swisslipids: <http://www.swisslipids.org/rdf#>
PREFIX dc: <http://purl.org/dc/elements/1.1/>

SELECT DISTINCT ?rheaID ?equation ?uniprotID ?proteinName
WHERE {
  # Query SwissLipids for reactions associated with the given lipid
  SERVICE <https://sparql.swisslipids.org/sparql/> {
    VALUES ?lipidID { <http://www.swisslipids.org/rdf/SWISSLIPID:000399814> } #SWISSLIPID:000399814
    ?lipidID swisslipids:reaction ?reaction .
    ?reaction dc:identifier ?rheaID . # Get Rhea ID from SwissLipids
  }

  # Query Rhea for the reaction equation based on the Rhea ID
  SERVICE <https://sparql.rhea-db.org/sparql> {
    ?rhea rdf:type <http://rdf.rhea-db.org/Reaction>;
          rdfs:label ?equation ;
          dc:identifier ?rheaID .
  }
  
  # Query UniProt for enzymes associated with the Rhea reaction
  SERVICE <https://sparql.uniprot.org/sparql> {
    ?protein rdf:type <http://purl.uniprot.org/core/Protein> ;
             rdfs:seeAlso ?rhea ;
             rdfs:label ?proteinName .
    ?protein uniprot:database ?dbRef .
    ?dbRef rdf:type <http://purl.uniprot.org/core/DatabaseReference> .
    ?dbRef rdfs:label " Rhea" .
    BIND(STRAFTER(STR(?protein), "http://purl.uniprot.org/uniprot/") AS ?uniprotID) # Extract UniProt ID
    FILTER (STRSTARTS(str(?rhea), "http://rdf.rhea-db.org/"))
    BIND(IRI(CONCAT("http://rdf.rhea-db.org/rhea/", ?rheaID)) AS ?rhea) #Reconstruct rhea URI
  }
}
