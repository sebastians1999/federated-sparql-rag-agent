
# Natural Language Question
# =======================
Search for Chemical names starting in Japanese, translated to english using allie

# Target Endpoint
# ===============
https://sparql.rhea-db.org/sparql/

# Ground Truth Query
# =================
PREFIX oboInOwl: <http://www.geneontology.org/formats/oboInOwl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT
*
WHERE {
SERVICE <https://data.allie.dbcls.jp/sparql>{
        ?x rdfs:label "1,2,4-トリクロロベンゼン"@ja ;
            rdfs:label ?englishLabel .
        FILTER(lang(?englishLabel) = "en")
    }
  BIND(STR(?englishLabel) AS ?englishLabelStr)
  ?chebi rdfs:label|oboInOwl:hasSynonym ?englishLabelStr .
}

# Predicted Query
# ==============
# https://sparql.rhea-db.org/sparql
PREFIX rhea: <http://rdf.rhea-db.org/>
PREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?chebi_name
WHERE {
  # Search for reactions involving ChEBI entities
  ?reaction rhea:has_reactant ?entity .
  
  # The reactant must be a ChEBI entity
  ?entity rdf:type chebi:CHEBI_24431 . # Use CHEBI_24431 for chemical entity

  # Get the ChEBI identifier for the chemical
  ?entity rhea:chebi ?chebi_id .

  # Construct the ChEBI URI
  BIND(URI(CONCAT(str(chebi:), ?chebi_id)) AS ?chebi_uri)

  # Get the name of the ChEBI entity
  ?chebi_uri rdfs:label ?chebi_name .
  
  # Filter for chemical names starting with "Japanese"
  FILTER regex(?chebi_name, "^Japanese", "i")  # "i" for case-insensitive matching
}
