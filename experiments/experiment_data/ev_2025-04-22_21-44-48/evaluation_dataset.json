[
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/16",
    "natural_language_question": "For a given lipid (SWISSLIPID:000399814, Ceramide), return a list of all enzymes in UniProtKB/Swiss-Prot annotated to catalyze reactions involving that lipid.\nThis query does not consider the hierarchy: it looks for reactions and enzymes only for the specified lipid.",
    "ground_truth_query": "PREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n# Example 16\nSELECT ?startId ?startName ?uniprot\nWHERE\n{\n  # SwissLipids query (list of) identifier(s)\n  VALUES ?startId { SWISSLIPID:000399814 }\n  # name\n  ?startId rdfs:label ?startName .\n  # ChEBI x-ref\n  ?startId owl:equivalentClass ?chebi .\n  # federated query to Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n  \t?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n  }    \n  # federated query to UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?uniprot up:reviewed true .\n    ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  }\n} \nORDER BY ?startId",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/16.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?enzyme ?enzymeName\nWHERE {\n  # Subquery to find reactions associated with the given lipid in SwissLipids\n  SERVICE <https://sparql.swisslipids.org/sparql/> {\n    PREFIX sl: <http://swisslipids.org/rdf/>\n    PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n\n    # Filter for the specific lipid (SWISSLIPID:000399814)\n    BIND(IRI(\"http://swisslipids.org/rdf/SWISSLIPID:000399814\") AS ?lipid)\n    \n    # Find reactions in SwissLipids associated with the lipid\n    ?reaction sl:participatesIn ?lipid .\n  }\n\n  # Find UniProt entries (enzymes) that catalyze these reactions\n  SERVICE <https://sparql.uniprot.org/sparql/> {\n    ?enzyme a up:Protein .  # Assuming enzymes are instances of the Protein class\n\n    # Link enzymes to the reactions found in SwissLipids\n    ?enzyme up:catalyticActivity ?reaction .\n    ?enzyme rdfs:label ?enzymeName .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "dce2981b-e7a4-4fb6-b56b-4fa3543fee65",
    "evaluation_timestamp": "2025-04-22T21:45:07.896615",
    "question_understanding_tokens": 297,
    "question_understanding_completion_tokens": 49,
    "question_understanding_total_tokens": 346,
    "sparql_construction_prompt_tokens": 2846,
    "sparql_construction_completion_tokens": 0,
    "sparql_construction_total_tokens": 2846,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Encountered \" \"prefix\" \"PREFIX \"\" at line 9, column 5.\nWas expecting one of:\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n    \"select\" ...\n    \"values\" ...\n    \"graph\" ...\n    \"optional\" ...\n    \"minus\" ...\n    \"bind\" ...\n    \"service\" ...\n    \"filter\" ...\n    \"true\" ...\n    \"false\" ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n    \"(\" ...\n     ...\n    \"{\" ...\n    \"}\" ...\n    \"[\" ...\n     ...\n    \"<<\" ...",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "Encountered \" \"prefix\" \"PREFIX \"\" at line 9, column 5.\nWas expecting one of:\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n    \"select\" ...\n    \"values\" ...\n    \"graph\" ...\n    \"optional\" ...\n    \"minus\" ...\n    \"bind\" ...\n    \"service\" ...\n    \"filter\" ...\n    \"true\" ...\n    \"false\" ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n    \"(\" ...\n     ...\n    \"{\" ...\n    \"}\" ...\n    \"[\" ...\n     ...\n    \"<<\" ..."
  },
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/6",
    "natural_language_question": "For a given lipid (SWISSLIPID:000399814, Ceramide), return a list of all corresponding reactions (Rhea IDs and equation), as well as their enzymes as annotated in UniProtKB/Swiss-Prot) enzymes themselves (ID and protein name).\nThis query does not consider the hierarchy: it looks for reactions and enzymes only for the specified lipid.",
    "ground_truth_query": "PREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n# Example 6\nSELECT ?startId ?startName ?chebi ?rhea ?rheaEquation ?uniprot ?uniprotName\nWHERE\n{\n  # SwissLipids query (list of) identifier(s)\n  VALUES ?startId { SWISSLIPID:000399814 }\n  # name\n  ?startId rdfs:label ?startName .\n  # ChEBI x-ref\n  ?startId owl:equivalentClass ?chebi .\n  # federated query to Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n  \t?rhea rh:equation ?rheaEquation .\n  \t?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n  }    \n  # federated query to UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?uniprot up:reviewed true .\n    ?uniprot up:recommendedName/up:fullName ?uniprotName .\n    ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  }\n} \nORDER BY ?startId",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/6.ttl",
    "predicted_query": "# https://sparql.swisslipids.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX swisslipids: <http://www.swisslipids.org/rdf#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\n\nSELECT DISTINCT ?rheaID ?equation ?uniprotID ?proteinName\nWHERE {\n  # Query SwissLipids for reactions associated with the given lipid\n  SERVICE <https://sparql.swisslipids.org/sparql/> {\n    VALUES ?lipidID { <http://www.swisslipids.org/rdf/SWISSLIPID:000399814> } #SWISSLIPID:000399814\n    ?lipidID swisslipids:reaction ?reaction .\n    ?reaction dc:identifier ?rheaID . # Get Rhea ID from SwissLipids\n  }\n\n  # Query Rhea for the reaction equation based on the Rhea ID\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rdf:type <http://rdf.rhea-db.org/Reaction>;\n          rdfs:label ?equation ;\n          dc:identifier ?rheaID .\n  }\n  \n  # Query UniProt for enzymes associated with the Rhea reaction\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein rdf:type <http://purl.uniprot.org/core/Protein> ;\n             rdfs:seeAlso ?rhea ;\n             rdfs:label ?proteinName .\n    ?protein uniprot:database ?dbRef .\n    ?dbRef rdf:type <http://purl.uniprot.org/core/DatabaseReference> .\n    ?dbRef rdfs:label \" Rhea\" .\n    BIND(STRAFTER(STR(?protein), \"http://purl.uniprot.org/uniprot/\") AS ?uniprotID) # Extract UniProt ID\n    FILTER (STRSTARTS(str(?rhea), \"http://rdf.rhea-db.org/\"))\n    BIND(IRI(CONCAT(\"http://rdf.rhea-db.org/rhea/\", ?rheaID)) AS ?rhea) #Reconstruct rhea URI\n  }\n}",
    "predicted_endpoint": "https://sparql.swisslipids.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "158b5863-de5d-49af-811d-fa4f988e8b40",
    "evaluation_timestamp": "2025-04-22T21:45:22.047608",
    "question_understanding_tokens": 314,
    "question_understanding_completion_tokens": 94,
    "question_understanding_total_tokens": 408,
    "sparql_construction_prompt_tokens": 2860,
    "sparql_construction_completion_tokens": 0,
    "sparql_construction_total_tokens": 2860,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Line 17, column 11: Unresolved prefixed name: rdf:type",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "Line 17, column 11: Unresolved prefixed name: rdf:type"
  },
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/5",
    "natural_language_question": "For a given lipid (SWISSLIPID:000399814, Ceramide), return a list of all corresponding reactions (Rhea IDs and equation).\nThis query does consider the hierarchy: it looks for reactions involving the specified lipid and/or its more specific forms.",
    "ground_truth_query": "PREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\n\n# Example 5\nSELECT ?startId ?startName ?id ?name ?chebi ?rhea ?rheaEquation \nWHERE\n{\n  # SwissLipids query (list of) identifier(s)\n  VALUES ?startId { SWISSLIPID:000399814 }\n  # name\n  ?startId rdfs:label ?startName .\n  # Retrieve children lipids \n  ?id rdfs:subClassOf* ?startId .\n  ?id rdfs:label ?name .\n  # ChEBI x-ref\n  ?id owl:equivalentClass ?chebi .\n  # federated query to Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n  \t?rhea rh:equation ?rheaEquation .\n  \t?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n  }    \n} \nORDER BY  ?startId ?id",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/5.ttl",
    "predicted_query": "# https://sparql.swisslipids.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX swlipid: <http://www.swisslipids.org/rdf/terms#>\n\nSELECT DISTINCT ?rheaId ?equation\nWHERE {\n  # Find subclasses of the given lipid in SwissLipids\n  {\n    SELECT DISTINCT ?lipidOrSubclass WHERE {\n      VALUES ?lipid { <http://www.swisslipids.org/rdf/SWISSLIPID:000399814> } # SWISSLIPID:000399814 = Ceramide\n      ?lipid rdfs:subClassOf* ?lipidOrSubclass .\n    }\n  }\n\n  # Find reactions in Rhea involving the lipid or its subclasses\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    PREFIX rhea: <http://rdf.rhea-db.org/>\n    PREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\n\n    ?reaction rhea:equation ?equation .\n    ?reaction rhea:id ?rheaId .\n    VALUES ?chebiEntity { <http://purl.obolibrary.org/obo/CHEBI_17761> } #CHEBI_17761 = ceramide.\n    ?reaction rhea:hasParticipant ?participant .\n    ?participant rdfs:seeAlso ?chebiEntity .\n\n    # Filter reactions where the participant is a subclass of the lipid (or the lipid itself)\n    FILTER (STRSTARTS(STR(?chebiEntity), \"http://purl.obolibrary.org/obo/CHEBI_\"))\n\n  }\n}",
    "predicted_endpoint": "https://sparql.swisslipids.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "ec783fec-d565-4fce-a4c5-d68857a0f6fa",
    "evaluation_timestamp": "2025-04-22T21:45:34.383234",
    "question_understanding_tokens": 292,
    "question_understanding_completion_tokens": 55,
    "question_understanding_total_tokens": 347,
    "sparql_construction_prompt_tokens": 2032,
    "sparql_construction_completion_tokens": 613,
    "sparql_construction_total_tokens": 2645,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Encountered \" \"prefix\" \"PREFIX \"\" at line 18, column 5.\nWas expecting one of:\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n    \"select\" ...\n    \"values\" ...\n    \"graph\" ...\n    \"optional\" ...\n    \"minus\" ...\n    \"bind\" ...\n    \"service\" ...\n    \"filter\" ...\n    \"true\" ...\n    \"false\" ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n    \"(\" ...\n     ...\n    \"{\" ...\n    \"}\" ...\n    \"[\" ...\n     ...\n    \"<<\" ...",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "Encountered \" \"prefix\" \"PREFIX \"\" at line 18, column 5.\nWas expecting one of:\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n    \"select\" ...\n    \"values\" ...\n    \"graph\" ...\n    \"optional\" ...\n    \"minus\" ...\n    \"bind\" ...\n    \"service\" ...\n    \"filter\" ...\n    \"true\" ...\n    \"false\" ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n    \"(\" ...\n     ...\n    \"{\" ...\n    \"}\" ...\n    \"[\" ...\n     ...\n    \"<<\" ..."
  },
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/34",
    "natural_language_question": "Lipids affected by human enzymes",
    "ground_truth_query": "PREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?swisslipid  {\n  ?swisslipid owl:equivalentClass ?chebi .\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n\t?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?metabolite . \n  }\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?catalyticActivityAnnotation up:catalyticActivity/up:catalyzedReaction ?rhea .\n    ?protein up:annotation ?catalyticActivityAnnotation ;\n             up:organism taxon:9606 .\n  }\n}\nLIMIT 1",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/34.ttl",
    "predicted_query": "# https://sparql.swisslipids.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX sl: <http://swisslipids.org/rdf#>\n\nSELECT DISTINCT ?lipidName ?enzymeName\nWHERE {\n  # Find human enzymes in UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    SELECT DISTINCT ?enzyme ?enzymeName WHERE {\n      ?enzyme a up:Protein .\n      ?enzyme up:organism taxon:9606 .  # Homo sapiens (Human)\n      ?enzyme rdfs:label ?enzymeName .\n    }\n  }\n\n  # Find lipids associated with these enzymes in SwissLipids\n  SERVICE <https://sparql.swisslipids.org/sparql/> {\n    ?enzyme sl:enzyme ?enzymeUri .  # Link to enzyme\n    ?reaction sl:enzyme ?enzymeUri . #reaction involving enzyme\n    ?reaction sl:product ?lipid . #reaction product is a lipid\n    ?lipid rdfs:label ?lipidName . #get the lipid name\n  }\n}",
    "predicted_endpoint": "https://sparql.swisslipids.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "9a5ff888-186a-48b0-8b71-ea8272a89c65",
    "evaluation_timestamp": "2025-04-22T21:45:49.943923",
    "question_understanding_tokens": 236,
    "question_understanding_completion_tokens": 22,
    "question_understanding_total_tokens": 258,
    "sparql_construction_prompt_tokens": 1915,
    "sparql_construction_completion_tokens": 482,
    "sparql_construction_total_tokens": 2397,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "The read operation timed out"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/118_biosodafrontend_rat_brain_human_cancer",
    "natural_language_question": "What are the Homo sapiens genes associated with cancer and their orthologs expressed in the Rattus norvegicus brain?",
    "ground_truth_query": "PREFIX up:<http://purl.uniprot.org/core/>\nPREFIX taxon:<http://purl.uniprot.org/taxonomy/>\nPREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>\nPREFIX orth:<http://purl.org/net/orth#>\nPREFIX dcterms:<http://purl.org/dc/terms/>\nPREFIX obo:<http://purl.obolibrary.org/obo/>\nPREFIX lscr:<http://purl.org/lscr#>\nPREFIX genex:<http://purl.org/genex#>\nPREFIX sio: <http://semanticscience.org/resource/>\nSELECT ?gene ?orthologous_protein2 WHERE {\n  {\n    SELECT ?protein1 WHERE {\n      ?protein1 a up:Protein;\n        up:organism/up:scientificName 'Homo sapiens' ;\n        up:annotation ?annotation .\n      ?annotation rdfs:comment ?annotation_text.\n      ?annotation a up:Disease_Annotation .\n      FILTER CONTAINS (?annotation_text, \"cancer\")\n    }\n  }\n  SERVICE <https://sparql.omabrowser.org/sparql/> {\n    SELECT ?orthologous_protein2 ?protein1 ?gene WHERE {\n      ?protein_OMA a orth:Protein .\n      ?orthologous_protein2 a orth:Protein .\n      ?cluster a orth:OrthologsCluster .\n      ?cluster orth:hasHomologousMember ?node1 .\n      ?cluster orth:hasHomologousMember ?node2 .\n      ?node2 orth:hasHomologousMember* ?protein_OMA .\n      ?node1 orth:hasHomologousMember* ?orthologous_protein2 \n      .?orthologous_protein2 orth:organism/obo:RO_0002162/up:scientificName 'Rattus norvegicus' .\n      ?orthologous_protein2 sio:SIO_010079 ?gene .\n      ?protein_OMA lscr:xrefUniprot ?protein1 .\n      FILTER(?node1 != ?node2)\n    }\n  }\n  SERVICE <https://www.bgee.org/sparql/> {\n    ?gene genex:isExpressedIn ?anatEntity .\n    ?anatEntity rdfs:label 'brain' .\n    ?gene orth:organism ?org . \n    ?org obo:RO_0002162 taxon:10116 .\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql",
    "federates_with": [
      "https://sparql.omabrowser.org/sparql/",
      "https://www.bgee.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/118_biosodafrontend_rat_brain_human_cancer.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\n\nSELECT ?gene ?geneName ?ortholog ?orthologName\nWHERE {\n  # Find Homo sapiens genes associated with cancer\n  ?gene a up:Protein .\n  ?gene up:organism taxon:9606 .  # Homo sapiens\n  ?gene up:annotation ?diseaseAnnotation .\n  ?diseaseAnnotation a up:Disease_Annotation .\n  ?diseaseAnnotation up:disease <http://purl.uniprot.org/diseases/2602> . # Breast cancer.  We can expand this as needed\n\n  ?gene rdfs:label ?geneName .\n\n  # Find orthologs in Rattus norvegicus\n  ?orthologAnnotation a up:Ortholog_Annotation .\n  ?orthologAnnotation up:protein ?gene .\n  ?orthologAnnotation up:ortholog ?ortholog .\n  ?ortholog up:organism taxon:10116 . # Rattus norvegicus\n  ?ortholog rdfs:label ?orthologName .\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "b6ffc62e-a46d-4325-89ee-36a4e2db48b9",
    "evaluation_timestamp": "2025-04-22T21:51:13.299708",
    "question_understanding_tokens": 255,
    "question_understanding_completion_tokens": 47,
    "question_understanding_total_tokens": 302,
    "sparql_construction_prompt_tokens": 2710,
    "sparql_construction_completion_tokens": 0,
    "sparql_construction_total_tokens": 2710,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/51",
    "natural_language_question": "Find all proteins linked to arachidonate (CHEBI:32395)",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n\nSELECT \n    DISTINCT\n        ?uniprot\n        ?uniprotID\n        ?recname\n        ?gene\n        ?chebi\n        ?uniprotName\nWHERE {\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n     VALUES (?chebi) { (CHEBI:32395) }\n     ?rhea rh:side/rh:contains/rh:compound ?compound .\n     ?compound rh:chebi ?chebi .\n     ?chebi up:name ?uniprotName .\n  }\n  ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  ?uniprot up:mnemonic ?uniprotID .\n  ?uniprot up:recommendedName/up:fullName ?recname .\n  OPTIONAL {?uniprot up:encodedBy/skos:prefLabel ?gene .}\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/51_all_proteins_linked_to_arachidonate.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX chebi: <http://purl.obolibrary.org/obo/>\n\nSELECT DISTINCT ?protein ?proteinName\nWHERE {\n  {\n    # Query UniProt for proteins linked to arachidonate\n    SERVICE <https://sparql.uniprot.org/sparql> {\n      ?protein a up:Protein .\n      ?protein rdfs:label ?proteinName .\n      ?protein up:annotation ?annotation .\n      ?annotation up:type <http://purl.uniprot.org/core/Interaction> .\n      ?annotation rdfs:comment ?comment .\n      FILTER (contains(str(?comment), \"CHEBI:32395\")) # Filter to get only arachidonate\n    }\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "fa3e8228-90eb-4060-9c07-6307981c9d44",
    "evaluation_timestamp": "2025-04-22T21:51:25.528142",
    "question_understanding_tokens": 251,
    "question_understanding_completion_tokens": 31,
    "question_understanding_total_tokens": 282,
    "sparql_construction_prompt_tokens": 1981,
    "sparql_construction_completion_tokens": 0,
    "sparql_construction_total_tokens": 1981,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/40",
    "natural_language_question": "Retrieve human enzymes that metabolize sphingolipids and are annotated in ChEMBL",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?protein ?chemblEntry\nWHERE {\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rdfs:subClassOf rh:Reaction ;\n      rh:side/rh:contains/rh:compound/rh:chebi/rdfs:subClassOf+ CHEBI:26739 .\n  }\n  ?ca up:catalyzedReaction ?rhea .\n  ?protein up:annotation/up:catalyticActivity ?ca ;\n    up:organism taxon:9606 ;\n    rdfs:seeAlso ?chemblEntry .\n  ?chemblEntry up:database <http://purl.uniprot.org/database/ChEMBL> .\n}\nLIMIT 10",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/40_human_enzymes_that_metabolize_sphingolipids.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\n\nSELECT DISTINCT ?enzyme ?enzymeName ?chembldbref\nWHERE {\n  # Find human enzymes\n  ?enzyme a up:Protein .\n  ?enzyme up:organism taxon:9606 .  # 9606 is the NCBI taxonomy ID for Homo sapiens\n\n  ?enzyme rdfs:label ?enzymeName .\n\n  #Optional ChEMBL cross-reference.  May need adjustment based on actual UniProt schema.\n  OPTIONAL { ?enzyme up:database ?chembldbref .\n             FILTER CONTAINS(STR(?chembldbref), \"ChEMBL\")\n           }\n\n  #Federate with SwissLipids to find enzymes that metabolize sphingolipids\n  SERVICE <https://sparql.swisslipids.org/sparql/> {\n    PREFIX lipid: <http://www.swisslipids.org/rdf/lipid/>\n    PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n\n    ?reaction lipid:enzyme ?enzymeURI .  # Link reaction to enzyme (UniProt URI)\n    ?reaction lipid:reaction_name ?reactionName .\n    # Filter for reactions involving sphingolipids (adjust based on SwissLipids data)\n    FILTER (CONTAINS(LCASE(?reactionName), \"sphingolipid\")) .\n    BIND(STR(?enzyme) as ?enzymeURI)\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "4a3a154f-701a-4c57-a877-72088b1f8447",
    "evaluation_timestamp": "2025-04-22T21:51:41.162096",
    "question_understanding_tokens": 247,
    "question_understanding_completion_tokens": 33,
    "question_understanding_total_tokens": 280,
    "sparql_construction_prompt_tokens": 2322,
    "sparql_construction_completion_tokens": 610,
    "sparql_construction_total_tokens": 2932,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Encountered \" \"prefix\" \"PREFIX \"\" at line 22, column 5.\nWas expecting one of:\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n    \"select\" ...\n    \"values\" ...\n    \"graph\" ...\n    \"optional\" ...\n    \"minus\" ...\n    \"bind\" ...\n    \"service\" ...\n    \"filter\" ...\n    \"true\" ...\n    \"false\" ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n    \"(\" ...\n     ...\n    \"{\" ...\n    \"}\" ...\n    \"[\" ...\n     ...\n    \"<<\" ...",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "Encountered \" \"prefix\" \"PREFIX \"\" at line 22, column 5.\nWas expecting one of:\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n    \"select\" ...\n    \"values\" ...\n    \"graph\" ...\n    \"optional\" ...\n    \"minus\" ...\n    \"bind\" ...\n    \"service\" ...\n    \"filter\" ...\n    \"true\" ...\n    \"false\" ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n    \"(\" ...\n     ...\n    \"{\" ...\n    \"}\" ...\n    \"[\" ...\n     ...\n    \"<<\" ..."
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/49",
    "natural_language_question": "Retrieve the UniProtKB proteins, their catalyzed Rhea reactions, their encoding genes (Ensembl) and the anatomic entities where the genes are expressed (UBERON anatomic entites from Bgee expression data resource).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX genex: <http://purl.org/genex#>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?protein ?ensemblGene ?reaction ?anatomicEntityLabel ?anatomicEntity\nWHERE {\n  # federated query to Rhea enadpoint\n  {\n    SELECT DISTINCT ?reaction WHERE {\n      SERVICE <https://sparql.rhea-db.org/sparql> {\n        ?reaction rdfs:subClassOf rh:Reaction ;\n          rh:equation ?reactionEquation ;\n          rh:side ?reactionSide .\n        ?reactionSide rh:contains ?participant .\n        ?participant rh:compound ?compound .\n        # compound constraint (CHEBI:16113 == cholesterol)\n        ?compound rh:chebi CHEBI:16113 .\n      }\n    }\n  }\n  # taxonomy constraint (taxon:9606 == Homo sapiens)\n  ?protein up:organism taxon:9606 ;\n    up:annotation ?a ;\n    rdfs:seeAlso / up:transcribedFrom ?ensemblGene .\n  ?a a up:Catalytic_Activity_Annotation ;\n    up:catalyticActivity ?ca .\n  ?ca up:catalyzedReaction ?reaction .\n  # federated query to Bgee (expression data)\n  BIND(IRI(REPLACE(STR(?ensemblGene), \"\\\\.[0-9]+$\", \"\")) AS ?ensemblGeneNoVersion)\n  SERVICE <https://www.bgee.org/sparql/> {\n    ?gene lscr:xrefEnsemblGene ?ensemblGeneNoVersion ;\n      genex:isExpressedIn ?anatomicEntity .\n    ?anatomicEntity rdfs:label ?anatomicEntityLabel .\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql",
      "https://www.bgee.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/49_tissues_where_genes_metabolizing_cholestrol_are_expressed.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX bp: <http://purl.uniprot.org/bestprot/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\n\nSELECT DISTINCT ?protein ?proteinName ?reaction ?gene ?anatomicalEntity\nWHERE {\n  # From UniProt get the protein names and link to Rhea\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein rdfs:label ?proteinName .\n    ?protein bp:links ?rheaReaction .\n  }\n  \n  # Get Rhea reactions\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rheaReaction rdfs:seeAlso ?reaction .\n  }\n\n  #Optional: Link to Ensembl gene identifiers (This part is tricky without direct links, requires more info)\n  #SERVICE <https://sparql.uniprot.org/sparql> {\n  #  ?protein up:encodedBy ?gene . #Assumed property. Needs validation\n  #}\n\n  #Assuming some Bgee endpoint exists that we can query with Ensembl IDs and UBERON IDs\n\n  #SERVICE <BGEE_SPARQL_ENDPOINT> {  #Replace with actual BGEE endpoint.\n  #  ?gene bgee:expressedIn ?anatomicalEntity .  #Again, placeholder property.\n  #  ?anatomicalEntity a <http://purl.obolibrary.org/obo/UBERON_0001062> . #Anatomical entity class from UBERON\n  #}\n\n\n  # Placeholder:  Since a direct link between UniProt and Ensembl/Bgee isn't clear,  the gene and anatomicalEntity are currently not populated\n  # Further investigation into the specific properties needed for the Ensembl and Bgee links is required.\n  BIND(\"No gene data available due to missing link properties\" AS ?gene)\n  BIND(\"No anatomical entity data available due to missing link properties\" AS ?anatomicalEntity)\n}\nLIMIT 10",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "fabeb1da-0ee6-46e1-b886-73d538ebe273",
    "evaluation_timestamp": "2025-04-22T21:52:22.236214",
    "question_understanding_tokens": 271,
    "question_understanding_completion_tokens": 72,
    "question_understanding_total_tokens": 343,
    "sparql_construction_prompt_tokens": 4651,
    "sparql_construction_completion_tokens": 672,
    "sparql_construction_total_tokens": 5323,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/53",
    "natural_language_question": "Find mouse homologs in OMABrowser of human enzymes that catalyze reactions involving sterols (CHEBI:15889). Federating with Rhea and OMABrowser.",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX orth: <http://purl.org/net/orth#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  DISTINCT\n    ?chebi\n    ?reaction\n    ?humanProtein\n    ?mouseProtein\n    ?cluster \nWHERE {\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf rh:Reaction .\n    ?reaction rh:side/rh:contains/rh:compound ?compound .\n    ?compound rh:chebi ?chebi .\n    ?chebi rdfs:subClassOf* CHEBI:15889\n  }\n\n  ?humanProtein up:organism taxon:9606 .\n  ?humanProtein up:annotation ?a .\n  ?a a up:Catalytic_Activity_Annotation .\n  ?a up:catalyticActivity ?ca .\n  ?ca up:catalyzedReaction ?reaction .\n\n  SERVICE  <https://sparql.omabrowser.org/sparql> {\n    ?cluster a orth:ParalogsCluster .\n    ?cluster orth:hasHomologousMember ?node1 , ?node2 .\n    ?node1 orth:hasHomologousMember* ?orthoProtein1 .\n    ?node2 orth:hasHomologousMember* ?orthoProtein2 .\n    ?orthoProtein1 lscr:xrefUniprot ?mouseProtein .\n    ?orthoProtein2 lscr:xrefUniprot ?humanProtein .\n    # inTaxon mouse\n    ?orthoProtein1 orth:organism/<http://purl.obolibrary.org/obo/RO_0002162> taxon:10090 . \n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql",
      "https://sparql.omabrowser.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/53_mouse_homologs_of_sterol_enzymes_via_omabrowser.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX uniprot: <http://purl.uniprot.org/core/>\nPREFIX up: <http://purl.uniprot.org/uniprot/>\n\nSELECT DISTINCT ?humanEnzyme ?mouseHomolog\nWHERE {\n  # Find Rhea reactions involving sterols (CHEBI:15889)\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rhea: Rhea_has_participant chebi:15889 .  #CHEBI_15889\n    ?reaction rdfs:seeAlso ?enzymeURI . # Get enzyme URIs linked to the reaction\n  }\n\n  # Extract human enzyme from Uniprot by linking with the enzyme URI from Rhea\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?humanEnzyme a uniprot:Protein .\n    ?humanEnzyme rdfs:seeAlso ?enzymeURI .\n    ?humanEnzyme uniprot:organism up:9606 . # Filter for human enzymes (taxon 9606)\n    FILTER (REGEX(STR(?humanEnzyme), \"^http://purl.uniprot.org/uniprot/\"))\n  }\n  \n  #Find mouse homolog using OMABrowser (assuming we have a function to query it)\n  BIND(SUBSTR(STR(?humanEnzyme), 31) AS ?humanEnzymeID)\n  SERVICE <http://sparql.omabrowser.org/sparql> { # Assuming this is a valid endpoint and accepts Uniprot IDs.\n    ?homolog a <http://purl.orthodb.org/odb-model#Gene> . #subject to change\n    ?homolog <http://purl.orthodb.org/odb-model#xrefDb> \"UniProtKB\" . #subject to change\n    ?homolog <http://purl.orthodb.org/odb-model#xrefId> ?humanEnzymeID .\n    ?homolog <http://purl.orthodb.org/odb-model#targetSpecies> \"10090\" . # Mouse NCBI Taxonomy ID\n    ?mouseHomolog rdfs:label ?homolog . # or some other property that gives the protein label\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "845445b3-9c32-49de-b749-80ae99a7217a",
    "evaluation_timestamp": "2025-04-22T21:52:49.969469",
    "question_understanding_tokens": 269,
    "question_understanding_completion_tokens": 57,
    "question_understanding_total_tokens": 326,
    "sparql_construction_prompt_tokens": 3194,
    "sparql_construction_completion_tokens": 795,
    "sparql_construction_total_tokens": 3989,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Lexical error at line 12, column 41.  Encountered: '32' (32), after prefix \"Rhea_has_participant\"",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "Lexical error at line 12, column 41.  Encountered: '32' (32), after prefix \"Rhea_has_participant\""
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/52",
    "natural_language_question": "Retrieve drugs that target human enzymes involved in sterol metabolism (federated query with Rhea and ChEMBL via IDSM/Elixir czech republic).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX cco: <http://rdf.ebi.ac.uk/terms/chembl#>\nPREFIX chebihash: <http://purl.obolibrary.org/obo/chebi#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n        DISTINCT\n            ?protein\n            ?proteinFullName\n            ?activityType\n            ?standardActivityValue\n            ?standardActivityUnit\n            ?chemblMolecule\n            ?chemlbMoleculePrefLabel\nWHERE\n  {\n  # ChEBI: retrieve members of the ChEBI class ChEBI:15889 (sterol)\n  # Rhea: retrieve the reactions involving these ChEBI as participants\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf  rh:Reaction ;\n\t      rh:status        rh:Approved ;\n\t      rh:side          ?reactionSide .\n    ?reactionSide\n\t      rh:contains      ?participant .\n    ?participant rh:compound  ?compound\n    {\n      ?compound  rh:chebi  ?chebi .\n      ?chebi (rdfs:subClassOf)+ CHEBI:15889\n    } UNION {\n      ?compound  rh:chebi           ?chebi .\n      ?chebi2   rdfs:subClassOf     ?chebiRestriction .\n      ?chebiRestriction\n\t\ta           owl:Restriction ;\n\t\towl:onProperty      chebihash:has_major_microspecies_at_pH_7_3 ;\n\t\towl:someValuesFrom  ?chebi .\n      ?chebi2 (rdfs:subClassOf)+ CHEBI:15889\n    }\n  }\n  # UniProt: retrieve the human (taxid:9606) enzymes catalyzing these Rhea reactions\n  ?ca       up:catalyzedReaction  ?reaction .\n  ?a        up:catalyticActivity  ?ca .\n  ?protein  up:annotation         ?a ;\n\t    up:organism           taxon:9606 ;\n\t    up:recommendedName    ?proteinRecName .\n  ?proteinRecName\n\t    up:fullName           ?proteinFullName .\n  # Find drugs in wikidata that interact with the UniProt Proteins\n  # ChEMBL: retrieve the corresponding targets and with drugs in clinical phase 4\n  # Via https://idsm.elixir-czech.cz/sparql/\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/idsm> {\n    ?activity a cco:Activity ;\n      cco:hasMolecule ?chemblMolecule ;\n      cco:hasAssay ?assay ;\n      cco:standardType ?activityType ;\n      cco:standardValue ?standardActivityValue ;\n      cco:standardUnits ?standardActivityUnit .\n    ?chemblMolecule cco:highestDevelopmentPhase ?highestDevelopmentPhase ;\n      rdfs:label ?chemblMoleculeLabel ;\n      skos:prefLabel ?chemlbMoleculePrefLabel .\n    FILTER (?highestDevelopmentPhase > 3)\n    ?assay cco:hasTarget ?target .\n    ?target cco:hasTargetComponent/cco:targetCmptXref ?protein .\n    ?protein a cco:UniprotRef .\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql",
      "https://idsm.elixir-czech.cz/sparql/endpoint/idsm"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/52_drugs_targeting_sterol_metabolism.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\n\nSELECT DISTINCT ?drug\nWHERE {\n  # Find Rhea reactions related to sterols\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rhea:equation ?equation .\n    ?reaction rhea:status rhea:approved .\n    ?reaction dc:description ?description .\n\n    #Filter for sterol\n    VALUES ?sterol {\n      chebi:15889 # sterol\n      chebi:35915 # sterol ester\n    }\n    ?reaction rhea:has_participant ?sterol . #At least one participant is a sterol\n\n    # Filter for human enzymes. Note: Rhea does not have direct links to UniProt for enzyme source organism.\n    # This is an imperfect filter, relying on text descriptions.\n    FILTER (CONTAINS(LCASE(?description), \"human\"))\n  }\n\n  # Find drugs targeting enzymes involved in the reactions (using IDSM/Elixir Czech Republic)\n  SERVICE <https://idsm.elixir-czech.cz/sparql> {\n    #Need to specify enzyme somehow to link reaction to enzyme and then to drug.\n    #It is not possible to specify enzyme without knowing the predicates that link reaction to enzyme.\n    #So instead, I will search for any drug.\n    ?drug a <http://bio2rdf.org/drugbank_vocabulary:drug> .\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "3ca8f713-5f7c-4263-b093-f4300b85336f",
    "evaluation_timestamp": "2025-04-22T21:53:06.056835",
    "question_understanding_tokens": 261,
    "question_understanding_completion_tokens": 29,
    "question_understanding_total_tokens": 290,
    "sparql_construction_prompt_tokens": 2138,
    "sparql_construction_completion_tokens": 0,
    "sparql_construction_total_tokens": 2138,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/54",
    "natural_language_question": "Proteins with binding sites for ligands similar to heme",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT \n  ?protein\n  ?mnemonic\n  ?proteinName\n  ?ligandSimilarityScore\n  ?ligand\nWHERE {\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n    ?ssc sachem:compound ?ligand; \n      sachem:score ?ligandSimilarityScore ;\n      sachem:similaritySearch ?sss .\n        # Smiles of Heme\n    ?sss    sachem:query \"CC1=C(CCC([O-])=O)C2=[N+]3C1=Cc1c(C)c(C=C)c4C=C5C(C)=C(C=C)C6=[N+]5[Fe-]3(n14)n1c(=C6)c(C)c(CCC([O-])=O)c1=C2\";\n      sachem:cutoff \"8e-1\"^^xsd:double ;\n      sachem:aromaticityMode sachem:aromaticityDetect ;\n      sachem:similarityRadius 1 ;\n      sachem:tautomerMode sachem:ignoreTautomers .\n  }\n  ?protein up:mnemonic ?mnemonic ;\n    up:recommendedName/up:fullName ?proteinName ;\n    up:annotation ?annotation .\n  ?annotation a up:Binding_Site_Annotation ;\n      up:ligand/rdfs:subClassOf ?ligand .\n}\nORDER BY DESC(?ligandSimilarityScore)",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/54_binding_sites_for_ligands_similar_to_heme_sachem.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX uniprot: <http://purl.uniprot.org/core/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX chebi: <http://purl.obolibrary.org/obo/>\n\nSELECT DISTINCT ?protein ?proteinName ?bindingSiteDescription\nWHERE {\n  # Find proteins in UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a uniprot:Protein .\n    ?protein rdfs:label ?proteinName .\n    ?protein uniprot:annotation ?bindingSite .\n    ?bindingSite rdfs:comment ?bindingSiteDescription .\n     FILTER (CONTAINS(LCASE(?bindingSiteDescription), \"binding site\"))\n  }\n  \n  # Find ligands similar to Heme in ChEBI and their IDs\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n      #Refine the search\n     VALUES ?ligandName { \"heme\" } #case insensitive\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "9d0ca344-76bc-4089-8e24-c7c70d96bd70",
    "evaluation_timestamp": "2025-04-22T21:53:29.962796",
    "question_understanding_tokens": 242,
    "question_understanding_completion_tokens": 28,
    "question_understanding_total_tokens": 270,
    "sparql_construction_prompt_tokens": 2325,
    "sparql_construction_completion_tokens": 0,
    "sparql_construction_total_tokens": 2325,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "The read operation timed out"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/43",
    "natural_language_question": "Connect patents cited in UniProtKB with those in the patent database at EPO via publication number, whose grant date is more than twenty years in the past.",
    "ground_truth_query": "PREFIX patent: <http://data.epo.org/linked-data/def/patent/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?grantDate ?patent ?application ?applicationNo\nWHERE\n{\n    ?citation a up:Patent_Citation ;\n  skos:exactMatch ?patent .\n  BIND(SUBSTR(STR(?patent), 35) AS ?applicationNo)\n  BIND(SUBSTR(STR(?patent), 33, 2) AS ?countryCode)\n  SERVICE <https://data.epo.org/linked-data/query>{\n    ?publication patent:publicationNumber ?applicationNo ;\n      patent:application ?application .\n    ?application patent:grantDate ?grantDate .\n  }\n  BIND((year(now()) - 20) AS ?thisYearMinusTwenty)\n  BIND(year(?grantDate) AS ?grantYear)\n  FILTER(?grantYear < ?thisYearMinusTwenty)\n} ORDER BY ?grantYear",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://data.epo.org/linked-data/query"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/43_patents_used_in_uniprot_granted_twenty_years_in_the_past.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?patent\nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein rdfs:seeAlso ?patent .\n    FILTER (REGEX(str(?patent), \"^https://patents.google.com/patent/\")) # Filter for patent identifiers\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "4de37654-7195-4dd5-ab37-e04f6b48ccd9",
    "evaluation_timestamp": "2025-04-22T21:59:26.503102",
    "question_understanding_tokens": 262,
    "question_understanding_completion_tokens": 47,
    "question_understanding_total_tokens": 309,
    "sparql_construction_prompt_tokens": 1689,
    "sparql_construction_completion_tokens": 0,
    "sparql_construction_total_tokens": 1689,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "The read operation timed out"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/45",
    "natural_language_question": "Retrieve drugs that target human enzymes involved in sterol metabolism (federated query with WikiData and Rhea).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX chebihash: <http://purl.obolibrary.org/obo/chebi#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n\nSELECT DISTINCT ?protein ?proteinFullName ?wikiChemical ?wikiChemicalLabel ?medicalConditionTreatedLabel\nWHERE {\n  # ChEBI: retrieve members of the ChEBI class ChEBI:15889 (sterol)\n  # Rhea: retrieve the reactions involving these ChEBI as participants\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf rh:Reaction ;\n      rh:status rh:Approved ;\n      rh:side ?reactionSide .\n    ?reactionSide\n      rh:contains ?participant .\n    ?participant rh:compound ?compound\n    {\n      ?compound rh:chebi ?chebi .\n      ?chebi (rdfs:subClassOf)+ CHEBI:15889\n    } UNION {\n      ?compound rh:chebi ?chebi .\n      ?chebi2 rdfs:subClassOf ?chebiRestriction .\n      ?chebiRestriction\n\t\ta owl:Restriction ;\n\t\towl:onProperty chebihash:has_major_microspecies_at_pH_7_3 ;\n\t\towl:someValuesFrom ?chebi .\n      ?chebi2 (rdfs:subClassOf)+ CHEBI:15889\n    }\n  }\n  # UniProt: retrieve the human (taxid:9606) enzymes catalyzing these Rhea reactions\n  ?ca up:catalyzedReaction  ?reaction .\n  ?a up:catalyticActivity  ?ca .\n  ?proteinIRI  up:annotation ?a ;\n    up:organism taxon:9606 ;\n    up:recommendedName ?proteinRecName .\n  ?proteinRecName up:fullName ?proteinFullName .\n  # Find drugs in wikidata that interact with the UniProt Proteins\n  BIND (SUBSTR(STR(?proteinIRI), STRLEN(STR(uniprotkb:))+1) AS ?protein)\n  SERVICE <https://query.wikidata.org/sparql> {\n    ?wp wdt:P352  ?protein .\n    ?wikiChemical wdt:P129 ?wp . # Physically interacts with\n    ?wikiChemical rdfs:label ?wikiChemicalLabel .\n    ?wikiChemical wdt:P2175 ?wmc . # Medical conndition treated\n    ?wmc rdfs:label ?medicalConditionTreatedLabel .\n    FILTER(lang(?medicalConditionTreatedLabel) = 'en')\n    FILTER(lang(?wikiChemicalLabel) = 'en')\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://query.wikidata.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/45_drugs_targeting_human_sterol_metabolism_enzymes.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX uniprot: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT DISTINCT ?drug ?enzymeLabel WHERE {\n  # Find reactions in Rhea involving sterols\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rhea: Rhea-has-participant chebi:15889 . # sterol\n    ?reaction rhea:rheaReactionhasEC ?ecNumber .\n    ?enzyme rdfs:label ?enzymeLabel .\n    FILTER (CONTAINS(STR(?enzymeLabel), \".\")) #EC number must contain periods\n  }\n\n  # Get UniProt IDs for the enzymes from Rhea EC numbers and ensure they are human enzymes\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?enzyme uniprot:ecNumber ?ecNumber .\n    ?enzyme uniprot:organism taxon:9606 .  # Homo sapiens\n    ?enzyme rdfs:seeAlso ?uniprotID .\n    FILTER CONTAINS(STR(?uniprotID), \"uniprot.org/uniprotkb\") # filter valid uniprot identifiers\n  }\n\n  # Find drugs in Wikidata that target these human enzymes\n  SERVICE <https://query.wikidata.org/sparql> {\n    ?drug wdt:P2175 ?uniprotID .  # Targets protein with UniProt ID\n    ?drug rdfs:label ?drugLabel .\n    FILTER (LANG(?drugLabel) = \"en\")\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "7bf47dc5-c4e0-480d-871d-153d4156a25b",
    "evaluation_timestamp": "2025-04-22T22:04:50.453621",
    "question_understanding_tokens": 250,
    "question_understanding_completion_tokens": 28,
    "question_understanding_total_tokens": 278,
    "sparql_construction_prompt_tokens": 2411,
    "sparql_construction_completion_tokens": 616,
    "sparql_construction_total_tokens": 3027,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Lexical error at line 14, column 41.  Encountered: '32' (32), after prefix \"Rhea-has-participant\"",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "Lexical error at line 14, column 41.  Encountered: '32' (32), after prefix \"Rhea-has-participant\""
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/42",
    "natural_language_question": "Connect patents cited in UniProtKB with those in the patent database at EPO via publication number.",
    "ground_truth_query": "PREFIX patent: <http://data.epo.org/linked-data/def/patent/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?citation ?patent ?application ?applicationNo\nWHERE\n{\n  ?citation a up:Patent_Citation ;\n    skos:exactMatch ?patent .\n  FILTER(CONTAINS(STR(?patent), 'EP'))\n  BIND(SUBSTR(STR(?patent), 35) AS ?applicationNo)\n  SERVICE <https://data.epo.org/linked-data/query>{\n    ?application patent:publicationNumber ?applicationNo\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://data.epo.org/linked-data/query"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/42_connect_patents_to_epo.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\n# Find UniProt entries that have patent citations\nSELECT DISTINCT ?uniprotEntry ?patentPublicationNumber\nWHERE {\n  ?uniprotEntry a up:Protein .  # Focus on protein entries\n  ?uniprotEntry up:citation ?citation . # Retrieve citations for the UniProt entry.\n\n  # Filter citations to identify those that are patents.  We assume patent citations have a specific type or identifier.\n  ?citation a up:Patent ;\n            up:publicationNumber ?patentPublicationNumber . # Get the publication number of the patent.\n  \n  #OPTIONAL { #Potentially link to another service with patent information here, if available.\n  #SERVICE <another_sparql_endpoint> {\n  # ?patent a <PatentClass> . #Some class that denotes patents.\n  # ?patent <publicationNumberProperty> ?patentPublicationNumber .\n  # ?patent <otherProperty> ?otherPatentInformation .\n  # }\n  #}\n}\n#LIMIT 10",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "6fee5d20-8779-4a66-8139-56c02a7897eb",
    "evaluation_timestamp": "2025-04-22T22:05:02.205771",
    "question_understanding_tokens": 251,
    "question_understanding_completion_tokens": 35,
    "question_understanding_total_tokens": 286,
    "sparql_construction_prompt_tokens": 1677,
    "sparql_construction_completion_tokens": 0,
    "sparql_construction_total_tokens": 1677,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/67_draft_human_metabolome",
    "natural_language_question": "Generate a draft human metabolome",
    "ground_truth_query": "PREFIX chebislash: <http://purl.obolibrary.org/obo/chebi/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n?uniprot ?mnemonic ?rhea ?chebi ?smiles ?inchiKey\nWHERE\n{\n  ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea ;\n        up:organism taxon:9606 ;\n        up:mnemonic ?mnemonic .\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n\t?rhea rh:side/rh:contains/rh:compound ?compound .\n    ?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?chebi .\n   }\n   ?chebi chebislash:smiles ?smiles ;\n          chebislash:inchikey ?inchiKey .\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/67_draft_human_metabolome.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\n\nSELECT DISTINCT ?metabolite ?reaction ?protein\nWHERE {\n  # Find human proteins in UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    SELECT DISTINCT ?protein WHERE {\n      ?protein a up:Protein .\n      ?protein up:organism taxon:9606 .  # Homo sapiens\n    }\n  }\n\n  # Find reactions associated with these proteins in UniProt - Not all proteins are linked to reactions in UniProt directly\n  #SERVICE <https://sparql.uniprot.org/sparql> {\n  #  ?protein rdfs:seeAlso ?reaction . # Assuming rdfs:seeAlso links to reaction databases.  Needs verification.\n  #  FILTER CONTAINS(str(?reaction), \"rhea-db.org\") # Filter to Rhea reactions.  Needs verification.\n  #  BIND(STR(?reaction) AS ?reactionString)\n  #}\n\n  # Find reactions in RheaDB that might involve human proteins (This requires external knowledge as UniProt doesn't directly link)\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n     ?reaction rdfs:comment ?comment . #Trying to find a relationship or link with human\n     FILTER CONTAINS(lcase(str(?comment)), \"human\") #looking for human related reactions\n\n     OPTIONAL {\n       ?reaction rdfs:label ?metabolite .\n     }\n  }\n  \n  # Find lipids in SwissLipids related to human - There's probably no direct link, so broader search\n  SERVICE <https://sparql.swisslipids.org/sparql/> {\n    ?lipid rdfs:label ?metabolite .\n    FILTER CONTAINS(lcase(str(?metabolite)), \"human\") # Very broad, likely needs refinement if possible\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "9038eb99-d606-4098-8ad0-ad90c5524163",
    "evaluation_timestamp": "2025-04-22T22:05:15.954960",
    "question_understanding_tokens": 240,
    "question_understanding_completion_tokens": 22,
    "question_understanding_total_tokens": 262,
    "sparql_construction_prompt_tokens": 1452,
    "sparql_construction_completion_tokens": 637,
    "sparql_construction_total_tokens": 2089,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "The read operation timed out"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/36",
    "natural_language_question": "Find the orthologous proteins for UniProtKB entry P05067 using the <a href=\"http://www.orthod.org\">OrthoDB database</a>",
    "ground_truth_query": "PREFIX orthodb: <http://purl.orthodb.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  ?protein\n  ?orthoGroup\n  ?scientificName\n  ?functionComment\n  ?prefferedGeneName\n  ((STRLEN(?value) - ?medianLength) as ?deviationFromMedianLength)\nWHERE\n{\n  uniprotkb:P05067 a up:Protein ;\n        up:organism/up:scientificName ?scientificName ;\n        rdfs:seeAlso ?orthoGroup ;\n        up:encodedBy/skos:prefLabel ?prefferedGeneName ;\n          up:sequence/rdf:value ?value .\n  OPTIONAL {\n    ?protein up:annotation ?functionAnnotation .\n    ?functionAnnotation a up:Function_Annotation ;\n      rdfs:comment ?functionComment .\n  }\n  SERVICE <https://sparql.orthodb.org/sparql>{\n    ?orthoGroup orthodb:ogMedianProteinLength ?medianLength .\n    ?orthoGroup orthodb:hasMember ?xref .\n    ?xref orthodb:xref/orthodb:xrefResource uniprotkb:P05067 .\n  }\n}\nLIMIT 985915",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.orthodb.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/36_orthologous_proteins_via_orthodb.ttl",
    "predicted_query": "# http://sparql.uniprot.org/sparql\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?protein ?ortholog\nWHERE {\n  # Find the UniProt entry for P05067\n  VALUES ?protein { <http://purl.uniprot.org/uniprot/P05067> }\n\n  #  Federate with OrthoDB to find orthologs.  We assume the OrthoDB SPARQL endpoint is http://sparql.orthodb.org/sparql\n  SERVICE <http://sparql.orthodb.org/sparql> {\n    #  Assumes there is a property in OrthoDB that links to UniProt IDs. Needs to be replaced with the actual property.\n    ?ortholog orthodb:xref ?protein . # Replace orthodb:xref with the actual property\n  }\n}",
    "predicted_endpoint": "http://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "a81d0cd8-987f-403c-951b-915273056c02",
    "evaluation_timestamp": "2025-04-22T22:10:32.522119",
    "question_understanding_tokens": 270,
    "question_understanding_completion_tokens": 43,
    "question_understanding_total_tokens": 313,
    "sparql_construction_prompt_tokens": 2273,
    "sparql_construction_completion_tokens": 0,
    "sparql_construction_total_tokens": 2273,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Line 13, column 15: Unresolved prefixed name: orthodb:xref",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "Line 13, column 15: Unresolved prefixed name: orthodb:xref"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/60",
    "natural_language_question": "Find human proteins that catalyze reactions where substrates or product have a <a href=\"https://www.ebi.ac.uk/chebi/searchId.do?chebiId=CHEBI:35516\">Cholestane skeleton</a>",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  DISTINCT\n    ?protein\n    ?disease\n    ?rhea\n    ?chebi\n    ?omim\nWHERE {\n    # Find complete ChEBIs with a Cholestane skeleton, via the Czech Elixir node IDSM Sachem chemical substructure search.\n    SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n      ?chebi sachem:substructureSearch [\n        sachem:query\n\"[C@]12(CCC3CCCC[C@]3(C)[C@@]1([H])CC[C@]1(C)[C@@]([H])([C@@](C)([H])CCCC(C)C)CC[C@@]21[H])[H]\"\n].\n   }\n   # Use the fact that UniProt catalytic activities are annotated using Rhea \n   # Mapping the found ChEBIs to Rhea reactions\n   SERVICE <https://sparql.rhea-db.org/sparql>{\n     ?rhea rh:side/rh:contains/rh:compound/rdfs:subClassOf ?chebi .\n   }\n   # Match the found Rhea reactions with human UniProtKB proteins\n   ?protein up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n   ?protein up:organism taxon:9606 .\n   # Find only those human entries that have an annotated related disease, and optionaly map these to OMIM\n   ?protein up:annotation/up:disease ?disease .\n   OPTIONAL {\n     ?disease rdfs:seeAlso ?omim .\n     ?omim up:database <http://purl.uniprot.org/database/MIM>\n   }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/60_enzymes_working_on_substrate_with_Cholestene_backbone.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX uniprot: <http://purl.uniprot.org/uniprot/>\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?protein ?proteinName\nWHERE {\n  # Find human proteins\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein ;\n             up:organism uniprot:9606 ;  # Homo sapiens\n             rdfs:label ?proteinName .\n    ?protein up:catalyticActivity ?reaction .\n  }\n  \n  # Link to Rhea to find reactions\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rheaReaction rhea:equation ?reaction .\n    {\n      # Check if the reaction has a substrate that is a Cholestane skeleton\n      ?rheaReaction rhea:has_substrate ?substrate .\n      ?substrate rdfs:seeAlso ?chebiSubstrate .\n      FILTER (STRSTARTS(STR(?chebiSubstrate), STR(chebi:35516)))\n    }\n    UNION\n    {\n      # Check if the reaction has a product that is a Cholestane skeleton\n      ?rheaReaction rhea:has_product ?product .\n      ?product rdfs:seeAlso ?chebiProduct .\n      FILTER (STRSTARTS(STR(?chebiProduct), STR(chebi:35516)))\n    }\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "046f736f-3dae-4d0c-84a8-e972e14fd499",
    "evaluation_timestamp": "2025-04-22T22:10:50.701714",
    "question_understanding_tokens": 286,
    "question_understanding_completion_tokens": 38,
    "question_understanding_total_tokens": 324,
    "sparql_construction_prompt_tokens": 3497,
    "sparql_construction_completion_tokens": 634,
    "sparql_construction_total_tokens": 4131,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/70_enzymes_interacting_with_molecules_similar_to_dopamine",
    "natural_language_question": "Look for enzymes catalyzing reactions with molecules similar to dopamine.",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  ?protein\n  ?rhea\n  ?chebi\nWHERE {\n  # Use the smiles of dopamine CHEBI:18243\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi>{\n    ?chebi sachem:similarCompoundSearch [\n      sachem:query \"NCCc1ccc(O)c(O)c1\" ] .\n  }\n  GRAPH<https://sparql.rhea-db.org/rhea>{\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n    ?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?chebi .\n  }\n  ?protein up:reviewed true ;\n    up:annotation ?caa .\n  ?caa up:catalyticActivity/up:catalyzedReaction ?rhea .\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/70_enzymes_interacting_with_molecules_similar_to_dopamine.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX uniprot: <http://purl.uniprot.org/core/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT DISTINCT ?enzyme ?reaction ?reaction_name ?dopamine_like_compound\nWHERE {\n  # Find reactions in RheaDB that involve Dopamine or Dopamine-like compounds\n  {\n    SELECT DISTINCT ?reaction ?dopamine_like_compound ?reaction_name WHERE {\n      ?reaction rhea: Rhea_has_participant chebi:18258 . #CHEBI:18258 is the chebi id for dopamine\n      ?reaction rdfs:label ?reaction_name .\n      ?reaction rhea: Rhea_has_participant ?dopamine_like_compound .\n      FILTER (STRSTARTS(STR(?dopamine_like_compound), STR(chebi:))) #ensure the participant is from CHEBI\n    }\n  }\n\n  # Use the Rhea reaction to find corresponding UniProt enzyme\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?enzyme uniprot:catalyticActivity ?reaction_name . # Link enzyme to reaction via catalytic activity\n  }\n}\nLIMIT 100",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "63ef50df-2f95-40cc-bdd2-cdb9e4714884",
    "evaluation_timestamp": "2025-04-22T22:11:01.530129",
    "question_understanding_tokens": 243,
    "question_understanding_completion_tokens": 26,
    "question_understanding_total_tokens": 269,
    "sparql_construction_prompt_tokens": 2104,
    "sparql_construction_completion_tokens": 0,
    "sparql_construction_total_tokens": 2104,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Lexical error at line 13, column 43.  Encountered: '32' (32), after prefix \"Rhea_has_participant\"",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "Lexical error at line 13, column 43.  Encountered: '32' (32), after prefix \"Rhea_has_participant\""
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/38",
    "natural_language_question": "For the human entry P05067 (Amyloid-beta precursor protein) find the gene start ends in WikiData",
    "ground_truth_query": "PREFIX p: <http://www.wikidata.org/prop/>\nPREFIX pq: <http://www.wikidata.org/prop/qualifier/>\nPREFIX ps: <http://www.wikidata.org/prop/statement/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n\n\nSELECT \n\t?protein \n\t?begin\n\t?end\n\t?chromosome\n\t?assembly\nWHERE {\n    {\n        BIND(uniprotkb:P05067 AS ?proteinIRI)\n        BIND (SUBSTR(STR(?proteinIRI), STRLEN(STR(uniprotkb:))+1) AS ?protein)\n    }\n    SERVICE <https://query.wikidata.org/sparql> {\n        ?wp wdt:P352 ?protein ;\n            wdt:P702 ?wg . \n        ?wg p:P644   ?wgss .\n        ?wgss ps:P644        ?begin ;\n          pq:P1057/wdt:P1813 ?chromosome ;\n          pq:P659/rdfs:label ?assembly .\n        ?wg p:P645 ?wgse .\n        ?wgse ps:P645        ?end ;\n          pq:P1057/wdt:P1813 ?chromosome ;\n          pq:P659/rdfs:label ?assembly .\n        FILTER(lang(?assembly) = \"en\")\n  } \n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://query.wikidata.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/38_find_gene_region_in_wikidata_for_known_entry.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT ?geneStart ?geneEnd\nWHERE {\n  # Find the UniProt entry for human Amyloid-beta precursor protein (P05067)\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    SELECT ?protein ?gene WHERE {\n      ?protein a up:Protein .\n      ?protein up:proteinName \"Amyloid-beta precursor protein\" .\n      ?protein up:organism <http://purl.uniprot.org/taxonomy/9606> . # Human\n      FILTER regex(str(?protein), \"P05067\") .\n      ?protein up:encodedBy ?gene.\n    }\n  }\n\n  #From the gene, query wikidata for the gene start and end using the gene id\n  SERVICE <https://query.wikidata.org/sparql> {\n      ?gene wdt:P637 ?geneStart;   #Gene start position\n            wdt:P638 ?geneEnd.     #Gene end position\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "5158eff7-b5b1-431b-8b96-a999ff0756ae",
    "evaluation_timestamp": "2025-04-22T22:11:11.769940",
    "question_understanding_tokens": 257,
    "question_understanding_completion_tokens": 52,
    "question_understanding_total_tokens": 309,
    "sparql_construction_prompt_tokens": 2816,
    "sparql_construction_completion_tokens": 434,
    "sparql_construction_total_tokens": 3250,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Line 20, column 13: Unresolved prefixed name: wdt:P637",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "Line 20, column 13: Unresolved prefixed name: wdt:P637"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/117_biosodafrontend_glioblastoma_orthologs_rat",
    "natural_language_question": "Which are the proteins associated with glioblastoma and the orthologs expressed in the rat brain?",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX obo: <http://purl.obolibrary.org/obo/>\nPREFIX orth: <http://purl.org/net/orth#>\nPREFIX sio: <http://semanticscience.org/resource/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX genex: <http://purl.org/genex#>\nSELECT DISTINCT ?protein ?orthologous_protein ?gene ?annotation_text WHERE {\n  {\n  \tSELECT ?protein ?annotation_text WHERE {\n      ?protein a up:Protein ;\n          up:organism taxon:9606 ;\n          up:annotation ?annotation .\n      ?annotation rdfs:comment ?annotation_text .\n      ?annotation a up:Disease_Annotation .\n      FILTER CONTAINS (?annotation_text, \"glioblastoma\")\n    }\n  }\n  SERVICE <https://sparql.omabrowser.org/sparql/> {\n    SELECT ?orthologous_protein ?protein ?gene WHERE {\n    ?protein_OMA a orth:Protein .\n    ?orthologous_protein a orth:Protein .\n    ?cluster a orth:OrthologsCluster .\n    ?cluster orth:hasHomologousMember ?node1 .\n    ?cluster\n    orth:hasHomologousMember ?node2 .\n    ?node2 orth:hasHomologousMember* ?protein_OMA .\n    ?node1 orth:hasHomologousMember* ?orthologous_protein .\n    ?orthologous_protein orth:organism/obo:RO_0002162 taxon:10116 . # rattus norvegicus\n    ?orthologous_protein sio:SIO_010079 ?gene .\n    ?protein_OMA lscr:xrefUniprot ?protein .\n    FILTER(?node1 != ?node2)\n\t\t}\n\t}\n  SERVICE <https://www.bgee.org/sparql/> {\n    ?gene genex:isExpressedIn ?a .\n    ?a rdfs:label \"brain\" .\n    ?gene orth:organism ?s . \n    ?s obo:RO_0002162 taxon:10116.\n\t}\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql",
    "federates_with": [
      "https://sparql.omabrowser.org/sparql/",
      "https://www.bgee.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/117_biosodafrontend_glioblastoma_orthologs_rat.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\n\nSELECT DISTINCT ?protein ?proteinName ?ortholog ?orthologName\nWHERE {\n  # Find proteins associated with glioblastoma\n  ?disease a up:Disease .\n  ?disease rdfs:label \"Glioma\" . # Filtering for glioblastoma.  More specific disease URI would be better.\n  ?protein up:annotation ?diseaseAnnotation .\n  ?diseaseAnnotation a up:Disease_Annotation .\n  ?diseaseAnnotation up:annotated ?protein .\n  ?protein rdfs:label ?proteinName .\n\n  # Find orthologs of the proteins\n  ?ortholog up:core/ Pep .  #Assuming orthologs will be proteins, and using a general type\n  ?ortholog up:gene ?gene .\n  ?protein up:gene ?gene .\n  ?ortholog rdfs:label ?orthologName .\n\n  # Filter for orthologs expressed in rat brain (Rattus norvegicus - taxon ID 10116).  Assuming \"rat brain\" implies Rattus norvegicus.\n  #SERVICE <https://sparql.uniprot.org/sparql> {  #Redundant service clause, same endpoint\n  #  SELECT ?ortholog #Can't use SELECT * in a SERVICE clause that is not the main one.\n    ?ortholog up:organism taxon:10116 . # Rattus norvegicus (rat)\n  #}\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "f4abff14-1893-4ee4-840e-8ac0cdcdb6e6",
    "evaluation_timestamp": "2025-04-22T22:11:22.932563",
    "question_understanding_tokens": 250,
    "question_understanding_completion_tokens": 37,
    "question_understanding_total_tokens": 287,
    "sparql_construction_prompt_tokens": 2263,
    "sparql_construction_completion_tokens": 0,
    "sparql_construction_total_tokens": 2263,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Lexical error at line 17, column 25.  Encountered: '32' (32), after prefix \"Pep\"",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "Lexical error at line 17, column 25.  Encountered: '32' (32), after prefix \"Pep\""
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/116_biosodafrontend_rabit_mouse_orthologs",
    "natural_language_question": "Rabbit's proteins encoded by genes that are orthologous to Mouse's HBB-Y gene and their cross reference links to Uniprot",
    "ground_truth_query": "PREFIX lscr: <http://purl.org/lscr#>\nPREFIX orth: <http://purl.org/net/orth#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX obo: <http://purl.obolibrary.org/obo/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?PROTEIN_1 ?PROTEIN_2 ?UNIPROT_XREF_1 ?UNIPROT_XREF_2 WHERE {\n\t?taxon_1 up:commonName 'Mouse' .\n\t?taxon_2 up:commonName 'Rabbit' .\n\tSERVICE <https://sparql.omabrowser.org/sparql/> {\n\t\t?cluster a orth:OrthologsCluster .\n\t\t?cluster orth:hasHomologousMember ?node1 .\n\t\t?cluster orth:hasHomologousMember ?node2 .\n\t\t?node2 orth:hasHomologousMember* ?PROTEIN_2 .\n\t\t?node1 orth:hasHomologousMember* ?PROTEIN_1 .\n\t\t?PROTEIN_1 a orth:Protein .\n\t\t?PROTEIN_1 orth:organism/obo:RO_0002162 ?taxon_1 ;\n\t\t\trdfs:label 'HBB-Y' ;\n\t\t\tlscr:xrefUniprot ?UNIPROT_XREF_1 .\n\t\t?PROTEIN_2 a orth:Protein .\n\t\t?PROTEIN_2 orth:organism/obo:RO_0002162 ?taxon_2 .\n\t\t?PROTEIN_2 lscr:xrefUniprot ?UNIPROT_XREF_2 .\n\t\tFILTER ( ?node1 != ?node2 )\n\t}\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql",
    "federates_with": [
      "https://sparql.omabrowser.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/116_biosodafrontend_rabit_mouse_orthologs.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxonomy: <http://purl.uniprot.org/taxonomy/>\n\nSELECT DISTINCT ?rabbitProtein ?geneName ?uniprotCrossReference\nWHERE {\n  # Find proteins from Rabbit\n  ?rabbitProtein a up:Protein ;\n                 up:organism taxonomy:2697570 .  # Rabbit taxon\n\n  # Find the gene name associated with the protein\n  ?rabbitProtein up:encodedBy ?gene .\n  ?gene rdfs:label ?geneName .\n\n  # Find orthologous genes to Mouse's HBB-Y. Since direct orthology links aren't readily available,\n  # this part assumes that there might be a common gene identifier or shared homology.\n  # Alternatively, one could attempt to find orthologous groups via other databases if UniProt doesn't directly expose this.\n  # This requires a more complex query potentially involving external services or data.\n  # The following is a simplified approach assuming a shared gene name pattern or identifier.\n\n  # SERVICE <external_orthology_service> {  # Hypothetical external service\n  #   ?mouseGene rdfs:label \"HBB-Y\" .\n  #   ?mouseGene orth:orthologousTo ?rabbitGene .\n  #   ?rabbitGene rdfs:label ?geneName .\n  # }\n\n  #Find cross-references to UniProt\n  OPTIONAL { ?rabbitProtein up:database ?uniprotCrossReference . }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "9922b158-c789-48e0-96a9-6e1ae7c169ee",
    "evaluation_timestamp": "2025-04-22T22:11:41.267365",
    "question_understanding_tokens": 260,
    "question_understanding_completion_tokens": 49,
    "question_understanding_total_tokens": 309,
    "sparql_construction_prompt_tokens": 3428,
    "sparql_construction_completion_tokens": 564,
    "sparql_construction_total_tokens": 3992,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/29",
    "natural_language_question": "Use <a href=\"http://allie.dbcls.jp/\">ALLIE</a> a service for Abbreviation / Long Form in Japanese and English to search in UniProt using Japanese.",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?protein ?englishLabelStr\nWHERE {\n    SERVICE <https://data.allie.dbcls.jp/sparql>{\n        ?x rdfs:label \"アミロイド前駆体タンパク質\"@ja ;\n            rdfs:label ?englishLabel .\n        FILTER(lang(?englishLabel) = \"en\")\n    }\n    BIND (STR(?englishLabel) AS ?englishLabelStr)\n    ?protein a up:Protein .\n    {\n        ?protein (up:recommendedName|up:alternativeName) ?structuredName .\n    }\n    UNION\n    {\n        VALUES(?partType){(up:domain) (up:component)}\n            ?protein ?partType ?part .\n        ?part (up:recommendedName|up:alternativeName) ?structuredName .\n    }\n    ?structuredName ?anyKindOfName  ?englishLabelStr .\n    ?anyKindOfName rdfs:subPropertyOf up:structuredNameType .\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://data.allie.dbcls.jp/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/29_search_uniprot_in_japanese_with_allie.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\n\nSELECT DISTINCT ?protein ?proteinName ?taxonomyName\nWHERE {\n  ?protein a up:Protein .\n  ?protein rdfs:label ?proteinName . # Get the protein name\n\n  # Try to find proteins associated with Japanese taxonomy.\n  ?protein up:organism ?taxonomy .\n  ?taxonomy rdfs:label ?taxonomyName .\n  FILTER (CONTAINS(LCASE(?taxonomyName), \"japanese\"))\n}\nLIMIT 10",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "ae998618-80d2-498c-94ce-6c8b5ba9071e",
    "evaluation_timestamp": "2025-04-22T22:11:58.955441",
    "question_understanding_tokens": 269,
    "question_understanding_completion_tokens": 30,
    "question_understanding_total_tokens": 299,
    "sparql_construction_prompt_tokens": 2754,
    "sparql_construction_completion_tokens": 415,
    "sparql_construction_total_tokens": 3169,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/94_Select_all_approved_reactions_with_CHEBI_or_one_of_its_descendant_optional_UniProtKB_reviewed_EC",
    "natural_language_question": "Select all approved reactions with CHEBI:17815 (a 1,2-diacyl-sn-glycerol) or one of its descendant. Display links to UniProtKB/Swiss-Prot entries via EC numbers if the link rhea-ec exists.",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX CHEBI:<http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX up:<http://purl.uniprot.org/core/>\n\nSELECT\n  distinct\n    ?reaction\n    ?enzyme\n    (count(distinct ?protein) as ?proteinCount)\nWHERE {\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:side ?reactionSide .\n\n  OPTIONAL {?reaction rh:ec ?enzyme .\n    SERVICE <https://sparql.uniprot.org/sparql> {\n      ?protein up:reviewed true .\n      ?protein up:enzyme ?enzyme.\n    }\n  } .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi .\n  ?chebi rdfs:subClassOf* CHEBI:17815 .\n}\nGROUP BY ?reaction ?enzyme\nORDER BY ?reaction\nLIMIT 985915",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/94_Select_all_approved_reactions_with_CHEBI_or_one_of_its_descendant_optional_UniProtKB_reviewed_EC.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX obo: <http://purl.obolibrary.org/obo/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n\nSELECT DISTINCT ?reaction ?reactionName ?uniprotEntry\nWHERE {\n  # Find reactions that have CHEBI:17815 or its descendants as a participant\n  {\n    SELECT DISTINCT ?reaction WHERE {\n      ?chebiEntity obo:RO_0000052 chebi:17815 . #Consider CHEBI:17815 descendants\n      ?reaction rhea: Rhea_has_participant ?chebiEntity .\n    }\n  }\n\n  # Get the reaction name\n  ?reaction rdf:type rhea:Reaction .\n  ?reaction rdfs:label ?reactionName .\n  FILTER(CONTAINS(STR(?reaction), \"RHEA:\")) # Filter for reactions\n  \n  # Filter for approved reactions (assuming approved reactions have a status indicating so - this might need adjustment based on Rhea's specific properties)\n  ?reaction rhea:status \"approved\" . # This is a placeholder and might need the correct property\n\n  # Find EC numbers associated with the reaction\n  OPTIONAL {\n    ?reaction rhea:rhea-ec ?ecNumber .\n\n    # Query UniProt for UniProtKB/Swiss-Prot entries associated with the EC number\n    SERVICE <https://sparql.uniprot.org/sparql> {\n      ?uniprotEntry <http://purl.uniprot.org/core/api/keyword#keyword> ?ecNumber . #Adjust property accordingly\n    }\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "b1dc4752-51bb-4cfc-b4cb-4a8f3f514b47",
    "evaluation_timestamp": "2025-04-22T22:14:12.226811",
    "question_understanding_tokens": 289,
    "question_understanding_completion_tokens": 98,
    "question_understanding_total_tokens": 387,
    "sparql_construction_prompt_tokens": 2978,
    "sparql_construction_completion_tokens": 663,
    "sparql_construction_total_tokens": 3641,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Lexical error at line 13, column 43.  Encountered: '32' (32), after prefix \"Rhea_has_participant\"",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "Lexical error at line 13, column 43.  Encountered: '32' (32), after prefix \"Rhea_has_participant\""
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/11",
    "natural_language_question": "Distribution of reactions according to the first class of the enzyme classification (federated query)",
    "ground_truth_query": "PREFIX ec: <http://purl.uniprot.org/enzyme/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n\n# Query 11\n# Retrieve the count of reactions mapped to each level (main class) of the enzyme classification\n#\n# This query mimics the Filter section of the Rhea website (Browse all reactions)\n# https://www.rhea-db.org/rhea?query=\nSELECT ?ecClass (STR(?ecName) AS ?ecClassName) (COUNT(?rhea) AS ?rheaCount)\nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    VALUES (?ecClass) { (ec:1.-.-.-)(ec:2.-.-.-)(ec:3.-.-.-)(ec:4.-.-.-)(ec:5.-.-.-) (ec:6.-.-.-) (ec:7.-.-.-)}\n    ?ecNumber rdfs:subClassOf ?ecClass .\n    ?ecClass skos:prefLabel ?ecName .\n  }\n  ?rhea rdfs:subClassOf rh:Reaction .\n  ?rhea rh:ec ?ecNumber .\n} GROUP BY ?ecClass ?ecName",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/11.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX uniprot: <http://purl.uniprot.org/core/>\nPREFIX ec: <http://purl.uniprot.org/enzyme/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT ?firstClass (COUNT(DISTINCT ?reaction) AS ?reactionCount)\nWHERE {\n  # Query UniProt for enzymes and their EC numbers\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?enzyme a uniprot:Protein .\n    OPTIONAL { ?enzyme rdfs:seeAlso ?ecNumber .  # Link to EC number resource\n               ?ecNumber a ec:EC_number .\n               BIND(SUBSTR(STR(?ecNumber), 32, 1) AS ?firstClass) # Extract first EC class\n             }\n  }\n\n  # Query Rhea for reactions and link them to enzymes via EC number.\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rhea:ec ?ecNumber . # Reactions linked to EC numbers\n  }\n\n  # Filter reactions that match EC numbers from UniProt. This join might be slow.\n   FILTER STRSTARTS(str(?ecNumber),str(?ecNumber)) # Ensure the rhea ec number match the uniprot one.\n\n  FILTER (BOUND(?firstClass)) # Only consider reactions with a valid first class\n}\nGROUP BY ?firstClass\nORDER BY ?firstClass",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "a979c877-4086-4c0c-b84e-8d7fd204a8af",
    "evaluation_timestamp": "2025-04-22T22:14:23.343331",
    "question_understanding_tokens": 251,
    "question_understanding_completion_tokens": 26,
    "question_understanding_total_tokens": 277,
    "sparql_construction_prompt_tokens": 1732,
    "sparql_construction_completion_tokens": 0,
    "sparql_construction_total_tokens": 1732,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/109_Distribution_of_reactions_according_to_the_first_level_of_enzyme_classification",
    "natural_language_question": "Distribution of reactions according to the first level of enzyme classification",
    "ground_truth_query": "\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>\nPREFIX skos:<http://www.w3.org/2004/02/skos/core#>\n\nSELECT\n  ?ecClass\n  (str(?ecName) as ?ecClassName)\n  (count(?reaction) as ?reactionCount)\nWHERE\n{\n  SERVICE <http://sparql.uniprot.org/sparql> {\n    VALUES (?ecClass) { (ec:1.-.-.-)(ec:2.-.-.-)(ec:3.-.-.-)(ec:4.-.-.-)(ec:5.-.-.-) (ec:6.-.-.-) (ec:7.-.-.-) }\n    ?ecNumber rdfs:subClassOf ?ecClass .\n    ?ecClass skos:prefLabel ?ecName .\n  }\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:ec ?ecNumber .\n}\nGROUP BY ?ecClass ?ecName\n",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "http://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/109_Distribution_of_reactions_according_to_the_first_level_of_enzyme_classification.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT ?enzymeClass (COUNT(DISTINCT ?reaction) AS ?reactionCount)\nWHERE {\n  # Get reaction IDs from Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdf:type rhea:Reaction .\n  }\n\n  # Link Rhea reaction IDs to UniProt enzyme annotations via Rhea to UniProt mappings if available.\n  OPTIONAL {\n    SERVICE <https://sparql.uniprot.org/sparql> {\n      ?enzyme rdfs:seeAlso ?reaction ; # Assuming rdfs:seeAlso links to Rhea\n              rdfs:label ?enzymeClass . # Assuming rdfs:label has enzyme class\n      FILTER (REGEX(?enzymeClass, \"^[0-9]+\\\\.\", \"i\")) # Filter to get the first level enzyme classifications\n    }\n  }\n  \n  # If no direct link, try to find enzymes associated with the reaction participants using Rhea\n  OPTIONAL {\n    SERVICE <https://sparql.rhea-db.org/sparql> {\n      ?reaction rhea: Rhea_has_participant ?participant .\n    }\n    SERVICE <https://sparql.uniprot.org/sparql> {\n      ?enzyme rdfs:seeAlso ?participant ; # Assuming rdfs:seeAlso links to reaction participants\n              rdfs:label ?enzymeClass . # Assuming rdfs:label has enzyme class\n      FILTER (REGEX(?enzymeClass, \"^[0-9]+\\\\.\", \"i\")) # Filter to get the first level enzyme classifications\n    }     \n  }\n  \n  FILTER (BOUND(?enzymeClass)) # Only include results where enzyme class is found\n\n}\nGROUP BY ?enzymeClass\nORDER BY DESC(?reactionCount)",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "010a65c9-c646-4dd3-87d3-93403c59da71",
    "evaluation_timestamp": "2025-04-22T22:14:32.091973",
    "question_understanding_tokens": 242,
    "question_understanding_completion_tokens": 24,
    "question_understanding_total_tokens": 266,
    "sparql_construction_prompt_tokens": 1373,
    "sparql_construction_completion_tokens": 0,
    "sparql_construction_total_tokens": 1373,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Lexical error at line 25, column 43.  Encountered: '32' (32), after prefix \"Rhea_has_participant\"",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "Lexical error at line 25, column 43.  Encountered: '32' (32), after prefix \"Rhea_has_participant\""
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/12",
    "natural_language_question": "Select all Rhea reactions linked to protein sequences (enzymes and transporters) in UniProtKB",
    "ground_truth_query": "PREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n# Query 12\n# Select all Rhea reactions used to annotate enzyme sequences in UniProtKB\n# return the number of UniProtKB entries\n# Federated query using a service to UniProt SPARQL endpoint\n#\n# This query corresponds to the Rhea website query:\n# https://www.rhea-db.org/rhea?query=uniprot:*\n#\nSELECT ?uniprotCount ?rhea ?accession ?equation \nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> { \n  \tSELECT ?rhea (count(?uniprot) as ?uniprotCount) {\n      ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea . \n  \t}\n  \tGROUP BY ?rhea\n  }\n  ?rhea rh:accession ?accession .\n  ?rhea rh:equation ?equation .\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/12.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?rheaReaction ?rheaReactionURI ?protein ?proteinURI\nWHERE {\n  # Query Rhea for reactions\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rheaReactionURI rdf:type rhea:Reaction .\n    ?rheaReactionURI rdfs:label ?rheaReaction .\n    # Assuming some property links the reaction to a protein (e.g., enzyme)\n    # Here, we make a broad assumption that Rhea uses some property 'ec' related to enzyme commission numbers that are linked to UniProt\n    # This needs to be validated against the Rhea data model.\n    ?rheaReactionURI rhea:ec ?ec .\n  }\n  # Query UniProt for proteins associated with the EC number\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?proteinURI up:database rdfs:label \"EC\" . # Filter for EC cross-references in UniProt\n    ?proteinURI rdfs:seeAlso ?ec . # Link to the EC number from Rhea\n    ?proteinURI rdfs:label ?protein .\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "83ed38ab-c6f9-404b-811b-802086c216ee",
    "evaluation_timestamp": "2025-04-22T22:14:42.263722",
    "question_understanding_tokens": 250,
    "question_understanding_completion_tokens": 30,
    "question_understanding_total_tokens": 280,
    "sparql_construction_prompt_tokens": 2012,
    "sparql_construction_completion_tokens": 582,
    "sparql_construction_total_tokens": 2594,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Line 9, column 22: Unresolved prefixed name: rdf:type",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "Line 9, column 22: Unresolved prefixed name: rdf:type"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/112_Total_number_of_reaction_ec_protein_links",
    "natural_language_question": "Total number of <reaction> <ec> <protein> links",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX up:<http://purl.uniprot.org/core/>\n\nSELECT\n  (count(?reaction) as ?reactionEcProteinLinkCount)\nWHERE {\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:ec ?enzyme\n  SERVICE <http://sparql.uniprot.org/sparql> {\n    ?protein up:reviewed true .\n    ?protein up:enzyme ?enzyme.\n  }\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "http://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/112_Total_number_of_reaction_ec_protein_links.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT (COUNT(DISTINCT ?reaction) AS ?totalLinks)\nWHERE {\n  # Find proteins related to \"ec\" in UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein rdfs:label ?proteinLabel .\n    FILTER (CONTAINS(LCASE(?proteinLabel), \"ec\")) # Filter protein labels containing \"ec\"\n  }\n\n  # Find reactions in RheaDB\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdf:type <http://rdf.rhea-db.org/Reaction> .\n    ?reaction rdfs:label ?reactionLabel .\n    # Attempt to link reactions to proteins via EC number annotations.\n    OPTIONAL {\n      ?reaction <http://purl.obolibrary.org/obo/RO_0002333> ?enzyme .  #rhea:enzyme ?enzyme . # RO_0002333: is enzyme target of\n      ?enzyme rdfs:label ?ecNumber .\n      FILTER (REGEX(?ecNumber, \"^[0-9]+\\\\.[0-9]+\\\\.[0-9]+\\\\.[0-9]+$\")) #EC numbers are in the form of n.n.n.n\n\n      #Additionally filter by proteins that have the same EC number\n        SERVICE <https://sparql.uniprot.org/sparql> {\n            ?protein up:annotation ?annot.\n            ?annot up:category \"EC\".\n            ?annot rdfs:label ?ecNumber .\n        }\n    }\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "356f0e77-703e-46e9-9885-d69672e1ffa7",
    "evaluation_timestamp": "2025-04-22T22:14:52.154332",
    "question_understanding_tokens": 245,
    "question_understanding_completion_tokens": 21,
    "question_understanding_total_tokens": 266,
    "sparql_construction_prompt_tokens": 2171,
    "sparql_construction_completion_tokens": 651,
    "sparql_construction_total_tokens": 2822,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "The read operation timed out"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/19_draft_human_metabolome",
    "natural_language_question": "Generate a draft human metabolome",
    "ground_truth_query": "PREFIX chebislash: <http://purl.obolibrary.org/obo/chebi/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  ?uniprot ?mnemonic ?rhea ?chebi ?smiles ?inchiKey\nWHERE\n{\n  ?rhea rh:side/rh:contains/rh:compound ?compound .\n  ?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?chebi .\n  ?chebi chebislash:smiles ?smiles ;\n          chebislash:inchikey ?inchiKey .\n  SERVICE <https://sparql.uniprot.org/sparql> {\n     ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea ;\n                                             up:organism taxon:9606 ;\n                                             up:mnemonic ?mnemonic .\n\n   }\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/19_draft_human_metabolome.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\n\nSELECT DISTINCT ?protein ?proteinName ?gene ?metabolite ?reaction\nWHERE {\n  # Find human proteins\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein ;\n             up:organism taxon:9606 ; # Human\n             rdfs:label ?proteinName .\n    \n    # Optional: Get associated gene names\n    OPTIONAL { ?protein up:encodedBy ?gene . }\n    \n    # Try to find metabolic pathways/reactions associated with the protein\n    # This assumes a direct link, which might not exist.  The UniProt schema\n    # needs to be explored for the correct property.  This is a placeholder.\n    OPTIONAL { ?protein up:participatesIn ?reaction . }\n  }\n  \n  # Attempt to link to Rhea to get metabolite information about the reactions\n  # This assumes that ?reaction from UniProt is a Rhea reaction ID.\n  OPTIONAL {\n    SERVICE <https://sparql.rhea-db.org/sparql> {\n      ?rheaReaction rdfs:label ?reaction ;  # Assuming rdfs:label holds the Rhea ID\n                   rhea:equation ?equation .\n      \n      # Extract metabolites from the reaction equation (this is a simplification)\n      # The exact property to get metabolites from Rhea needs to be determined.\n      ?equation rdfs:seeAlso ?metabolite . # Placeholder\n    }\n  }\n  \n  # Consider SwissLipids if lipid metabolism is important\n  # This requires identifying a link between UniProt proteins and SwissLipids entries.\n  # This part would need further investigation of the SwissLipids schema.\n  # SERVICE <https://sparql.swisslipids.org/sparql/> {\n  #   ?lipid sl:enzyme ?protein . # Example placeholder property\n  #   ?lipid rdfs:label ?lipidName .\n  # }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "afa6b2c3-d83d-40eb-82e9-56abd24cfb67",
    "evaluation_timestamp": "2025-04-22T22:20:08.576612",
    "question_understanding_tokens": 239,
    "question_understanding_completion_tokens": 20,
    "question_understanding_total_tokens": 259,
    "sparql_construction_prompt_tokens": 1306,
    "sparql_construction_completion_tokens": 0,
    "sparql_construction_total_tokens": 1306,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Line 28, column 20: Unresolved prefixed name: rhea:equation",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "Line 28, column 20: Unresolved prefixed name: rhea:equation"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/20_search_chemical_names_in_japanese",
    "natural_language_question": "Search for Chemical names starting in Japanese, translated to english using allie",
    "ground_truth_query": "PREFIX oboInOwl: <http://www.geneontology.org/formats/oboInOwl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT\n*\nWHERE {\nSERVICE <https://data.allie.dbcls.jp/sparql>{\n        ?x rdfs:label \"1,2,4-トリクロロベンゼン\"@ja ;\n            rdfs:label ?englishLabel .\n        FILTER(lang(?englishLabel) = \"en\")\n    }\n  BIND(STR(?englishLabel) AS ?englishLabelStr)\n  ?chebi rdfs:label|oboInOwl:hasSynonym ?englishLabelStr .\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql/",
    "federates_with": [
      "https://data.allie.dbcls.jp/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/20_search_chemical_names_in_japanese.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT DISTINCT ?chebi_name\nWHERE {\n  # Search for reactions involving ChEBI entities\n  ?reaction rhea:has_reactant ?entity .\n  \n  # The reactant must be a ChEBI entity\n  ?entity rdf:type chebi:CHEBI_24431 . # Use CHEBI_24431 for chemical entity\n\n  # Get the ChEBI identifier for the chemical\n  ?entity rhea:chebi ?chebi_id .\n\n  # Construct the ChEBI URI\n  BIND(URI(CONCAT(str(chebi:), ?chebi_id)) AS ?chebi_uri)\n\n  # Get the name of the ChEBI entity\n  ?chebi_uri rdfs:label ?chebi_name .\n  \n  # Filter for chemical names starting with \"Japanese\"\n  FILTER regex(?chebi_name, \"^Japanese\", \"i\")  # \"i\" for case-insensitive matching\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "81131fe9-e9c2-4f77-a9f9-0a2a73c423e9",
    "evaluation_timestamp": "2025-04-22T22:20:21.096701",
    "question_understanding_tokens": 242,
    "question_understanding_completion_tokens": 23,
    "question_understanding_total_tokens": 265,
    "sparql_construction_prompt_tokens": 1481,
    "sparql_construction_completion_tokens": 615,
    "sparql_construction_total_tokens": 2096,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/117_Retrieve_parent_reactions_and_their_catalyzing_enzymes_for_a_metabolite_that_is_not_directly_involved_in_a_reaction",
    "natural_language_question": "Retrieve parent reactions (and their catalyzing enzymes) for a metabolite that is not directly involved in a reaction (ex: CHEBI:83137).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX up:<http://purl.uniprot.org/core/>\nPREFIX taxon:<http://purl.uniprot.org/taxonomy/>\nPREFIX keywords:<http://purl.uniprot.org/keywords/>\n\nSELECT\n  ?chebi\n  ?ecNumber\n  (count(?protein) as ?proteinCount)\n  ?reaction\n  ?equation\nWHERE {\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:equation ?equation .\n  ?reaction rh:ec ?ecNumber .\n  ?reaction rh:side ?reactionSide .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi .\n  CHEBI:83137 rdfs:subClassOf+ ?chebi.\n\n  SERVICE <https://sparql.uniprot.org/sparql> {\n  ?protein a up:Protein .\n  ?protein up:reviewed true .\n    {?protein up:enzyme ?ecNumber}\n  UNION\n    {?protein up:domain/up:enzyme ?ecNumber}\n  UNION\n    {?protein up:component/up:enzyme ?ecNumber} .\n  }\n} \nGROUP BY ?chebi ?ecNumber ?reaction ?equation",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/117_Retrieve_parent_reactions_and_their_catalyzing_enzymes_for_a_metabolite_that_is_not_directly_involved_in_a_reaction.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT DISTINCT ?parentReaction ?enzyme ?reaction\nWHERE {\n  # Find reactions where CHEBI:83137 is a participant\n  {\n    SELECT DISTINCT ?reaction WHERE {\n      ?reaction rhea: Rhea-has-reactant chebi:83137 ;\n                a rhea:Reaction .\n    }\n  }\n  UNION\n  {\n    SELECT DISTINCT ?reaction WHERE {\n      ?reaction rhea: Rhea-has-product chebi:83137 ;\n                a rhea:Reaction .\n    }\n  }\n\n  # Find parent reactions that consume or produce the reactions.\n  ?parentReaction rhea: Rhea-has-reactant ?reaction .\n  ?parentReaction rhea: Rhea-has-catalyst ?enzyme .\n\n  FILTER NOT EXISTS {\n    ?reaction rhea: Rhea-has-reactant ?substrate .\n  }\n  FILTER NOT EXISTS {\n    ?reaction rhea: Rhea-has-product ?product .\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "c4f14da7-2112-4fa9-82b4-42bf682c46bb",
    "evaluation_timestamp": "2025-04-22T22:20:32.372531",
    "question_understanding_tokens": 266,
    "question_understanding_completion_tokens": 42,
    "question_understanding_total_tokens": 308,
    "sparql_construction_prompt_tokens": 2487,
    "sparql_construction_completion_tokens": 542,
    "sparql_construction_total_tokens": 3029,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Lexical error at line 12, column 40.  Encountered: '32' (32), after prefix \"Rhea-has-reactant\"",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "Lexical error at line 12, column 40.  Encountered: '32' (32), after prefix \"Rhea-has-reactant\""
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/18",
    "natural_language_question": "Use <a href=\"https://idsm.elixir-czech.cz/sparql\">IDSM Sachem</a> to find ChEBIs with a a <a href=\"https://www.ebi.ac.uk/chebi/searchId.do?chebiId=CHEBI:35516\">Cholestane</a> skeleton (in SMILES). Then match returned ChEBIs to Rhea undirected reactions.",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\n\n\nSELECT \n  ?rhea \n  ?chebi\nWHERE {\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n    ?chebi sachem:substructureSearch [\n        sachem:query \"[C@]12(CCC3CCCC[C@]3(C)[C@@]1([H])CC[C@]1(C)[C@@]([H])([C@@](C)([H])CCCC(C)C)CC[C@@]21[H])[H]\" ].\n  }\n  ?rhea rh:side/rh:contains/rh:compound/rdfs:subClassOf ?chebi .\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/18.ttl",
    "predicted_query": "# https://idsm.elixir-czech.cz/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?chebi_uri ?rhea_reaction\nWHERE {\n  # Query IDSM Sachem to find ChEBIs with a SMILES containing Cholestane\n  SERVICE <https://idsm.elixir-czech.cz/sparql> {\n    ?chebi_uri rdfs:subClassOf chebi:28047 .  # CHEBI:28047 is 5beta-cholestane-3alpha,7alpha-diol, assuming it represents cholestane skeleton.  Using rdfs:subClassOf for broader match.\n  }\n\n  # Use the found ChEBI URIs to query Rhea to find reactions\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea_reaction rdfs:type <http://rdf.rhea-db.org/Reaction> .\n    {\n      ?rhea_reaction <http://purl.obolibrary.org/obo/rhea# Rhea_has_substrate> ?chebi_uri .\n    }\n    UNION\n    {\n      ?rhea_reaction <http://purl.obolibrary.org/obo/rhea# Rhea_has_product> ?chebi_uri .\n    }\n  }\n}",
    "predicted_endpoint": "https://idsm.elixir-czech.cz/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "ac488dc2-b97b-42a5-914a-f8880e25b7d5",
    "evaluation_timestamp": "2025-04-22T22:20:45.295622",
    "question_understanding_tokens": 324,
    "question_understanding_completion_tokens": 51,
    "question_understanding_total_tokens": 375,
    "sparql_construction_prompt_tokens": 2581,
    "sparql_construction_completion_tokens": 499,
    "sparql_construction_total_tokens": 3080,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Encountered \" \"<\" \"< \"\" at line 16, column 22.\nWas expecting one of:\n     ...\n     ...\n     ...\n     ...\n     ...\n    \"a\" ...\n    \"(\" ...\n    \"!\" ...\n    \"^\" ...",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "Encountered \" \"<\" \"< \"\" at line 16, column 22.\nWas expecting one of:\n     ...\n     ...\n     ...\n     ...\n     ...\n    \"a\" ...\n    \"(\" ...\n    \"!\" ...\n    \"^\" ..."
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/115_Retrieve_the_set_of_metabolites_involved_in_reactions_catalyzed_by_human_genes_HUMAN_reference_proteome",
    "natural_language_question": "Retrieve the set of metabolites involved in reactions catalyzed by human genes (HUMAN reference proteome)",
    "ground_truth_query": "\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX taxon:<http://purl.uniprot.org/taxonomy/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up:<http://purl.uniprot.org/core/>\nPREFIX keywords:<http://purl.uniprot.org/keywords/>\n\nSELECT\n  ?chebi\n  ?reaction\n  ?ecNumber\n  ?protein\n  ?ensemblTranscript\n  ?ensemblGene\nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein up:reviewed true .\n    ?protein up:organism taxon:9606 .\n    ?protein up:classifiedWith keywords:1185 .\n\n    ?protein rdfs:seeAlso ?ensemblTranscript .\n    ?ensemblTranscript a up:Transcript_Resource .\n    ?ensemblTranscript up:database <http://purl.uniprot.org/database/Ensembl> .\n    ?ensemblTranscript up:transcribedFrom ?ensemblGene .\n\n      {?protein up:enzyme ?ecNumber .}\n    UNION\n      {?protein up:domain/up:enzyme ?ecNumber .}\n    UNION\n      {?protein up:component/up:enzyme ?ecNumber .}\n  }\n\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:ec ?ecNumber .\n  ?reaction rh:side ?reactionSide .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi . # only considering small molecules participants\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/115_Retrieve_the_set_of_metabolites_involved_in_reactions_catalyzed_by_human_genes_HUMAN_reference_proteome.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX uniprot: <http://purl.uniprot.org/uniprot/>\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX chebi: <http://purl.obolibrary.org/obo/>\n\nSELECT DISTINCT ?metaboliteLabel ?reactionLabel\nWHERE {\n  # Get human proteins from UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein ;\n             up:organism uniprot:9606 ; # Homo sapiens\n             rdfs:seeAlso ?rheaReaction . # Link to Rhea reaction\n  }\n  \n  # Extract Rhea ID from the URI\n  BIND(IRI(REPLACE(STR(?rheaReaction), \"https://www.rhea-db.org/reaction/\", \"rhea:\")) AS ?rheaID)\n  \n  # Get reaction participants from Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rheaID rhea:status \"approved\" .  # Filter for approved reactions\n    ?rheaID rhea:hasParticipant ?participant .\n    ?participant rdfs:label ?metaboliteLabel .\n    ?rheaID rdfs:label ?reactionLabel .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "450e7575-2966-4ad5-a6bc-4e64fde48028",
    "evaluation_timestamp": "2025-04-22T22:20:55.590767",
    "question_understanding_tokens": 250,
    "question_understanding_completion_tokens": 28,
    "question_understanding_total_tokens": 278,
    "sparql_construction_prompt_tokens": 2402,
    "sparql_construction_completion_tokens": 479,
    "sparql_construction_total_tokens": 2881,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "no error, but empty result"
  }
]