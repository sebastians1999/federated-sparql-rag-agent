
# Natural Language Question
# =======================
Distribution of reactions according to the first level of enzyme classification

# Target Endpoint
# ===============
https://sparql.rhea-db.org/sparql

# Ground Truth Query
# =================

PREFIX rh:<http://rdf.rhea-db.org/>
PREFIX ec:<http://purl.uniprot.org/enzyme/>
PREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos:<http://www.w3.org/2004/02/skos/core#>

SELECT
  ?ecClass
  (str(?ecName) as ?ecClassName)
  (count(?reaction) as ?reactionCount)
WHERE
{
  SERVICE <http://sparql.uniprot.org/sparql> {
    VALUES (?ecClass) { (ec:1.-.-.-)(ec:2.-.-.-)(ec:3.-.-.-)(ec:4.-.-.-)(ec:5.-.-.-) (ec:6.-.-.-) (ec:7.-.-.-) }
    ?ecNumber rdfs:subClassOf ?ecClass .
    ?ecClass skos:prefLabel ?ecName .
  }
  ?reaction rdfs:subClassOf rh:Reaction .
  ?reaction rh:ec ?ecNumber .
}
GROUP BY ?ecClass ?ecName


# Predicted Query
# ==============
# https://sparql.rhea-db.org/sparql
PREFIX rhea: <http://rdf.rhea-db.org/>
PREFIX up: <http://purl.uniprot.org/core/>
PREFIX uniprot: <http://purl.uniprot.org/uniprot/>

SELECT (SUBSTR(STR(?ec), 1, 1) AS ?ec_level1) (COUNT(DISTINCT ?reaction) AS ?reaction_count)
WHERE {
  # Query Rhea to find reactions catalyzed by a UniProt entry (enzyme)
  SERVICE <https://sparql.rhea-db.org/sparql> {
    ?reaction rhea:catalyzedBy ?uniprot_entry .
  }
  # Query UniProt to find the EC number associated with the enzyme
  SERVICE <https://sparql.uniprot.org/sparql> {
    ?uniprot_entry up:ec ?ec .
  }
  # Filter to ensure the EC number starts with a digit, representing the first level
  FILTER regex(STR(?ec), "^\\d")
}
GROUP BY ?ec_level1
ORDER BY ?ec_level1
