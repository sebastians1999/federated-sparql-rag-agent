
# Natural Language Question
# =======================
Rabbit's proteins encoded by genes that are orthologous to Mouse's HBB-Y gene and their cross reference links to Uniprot

# Target Endpoint
# ===============
https://sparql.uniprot.org/sparql

# Ground Truth Query
# =================
PREFIX lscr: <http://purl.org/lscr#>
PREFIX orth: <http://purl.org/net/orth#>
PREFIX up: <http://purl.uniprot.org/core/>
PREFIX obo: <http://purl.obolibrary.org/obo/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?PROTEIN_1 ?PROTEIN_2 ?UNIPROT_XREF_1 ?UNIPROT_XREF_2 WHERE {
	?taxon_1 up:commonName 'Mouse' .
	?taxon_2 up:commonName 'Rabbit' .
	SERVICE <https://sparql.omabrowser.org/sparql/> {
		?cluster a orth:OrthologsCluster .
		?cluster orth:hasHomologousMember ?node1 .
		?cluster orth:hasHomologousMember ?node2 .
		?node2 orth:hasHomologousMember* ?PROTEIN_2 .
		?node1 orth:hasHomologousMember* ?PROTEIN_1 .
		?PROTEIN_1 a orth:Protein .
		?PROTEIN_1 orth:organism/obo:RO_0002162 ?taxon_1 ;
			rdfs:label 'HBB-Y' ;
			lscr:xrefUniprot ?UNIPROT_XREF_1 .
		?PROTEIN_2 a orth:Protein .
		?PROTEIN_2 orth:organism/obo:RO_0002162 ?taxon_2 .
		?PROTEIN_2 lscr:xrefUniprot ?UNIPROT_XREF_2 .
		FILTER ( ?node1 != ?node2 )
	}
}

# Predicted Query
# ==============
# Primary endpoint: https://sparql.uniprot.org/sparql
PREFIX up: <http://purl.uniprot.org/core/>
PREFIX taxon: <http://purl.uniprot.org/taxonomy/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?rabbitProtein ?rabbitGene ?crossRef
WHERE {
  # 1. Find the Mouse HBB-Y gene and its encoded protein
  ?mouseGene a up:Gene ;
             up:organism taxon:10090 . # Mouse taxonomy ID (Mus musculus)

  # Try to match the gene name "HBB-Y" using various gene name properties, case-insensitively
  { ?mouseGene skos:prefLabel ?mouseGeneLabel . }
  UNION
  { ?mouseGene skos:altLabel ?mouseGeneLabel . }
  UNION
  { ?mouseGene up:orfName ?mouseGeneLabel . }
  FILTER (LCASE(STR(?mouseGeneLabel)) = "hbb-y")

  # Find the protein encoded by the identified Mouse gene
  ?mouseProtein a up:Protein ;
                up:encodedBy ?mouseGene .

  # 2. Find the orthologous group for the Mouse protein
  # UniProt entries often link to external orthology databases like OrthoDB via rdfs:seeAlso
  ?mouseProtein rdfs:seeAlso ?orthoGroup .
  # Ensure the linked resource is indeed an OrthoDB group URI
  FILTER (STRSTARTS(STR(?orthoGroup), "http://purl.orthodb.org/"))

  # 3. Find Rabbit proteins that belong to the same orthologous group
  ?rabbitProtein a up:Protein ;
                 up:organism taxon:9986 ; # Rabbit taxonomy ID (Oryctolagus cuniculus)
                 rdfs:seeAlso ?orthoGroup . # Link to the same orthologous group as the mouse protein

  # 4. Ensure these Rabbit proteins are encoded by a gene
  ?rabbitProtein up:encodedBy ?rabbitGene .

  # 5. Find general cross-reference links for these Rabbit proteins
  # rdfs:seeAlso is used for various cross-references in UniProt
  ?rabbitProtein rdfs:seeAlso ?crossRef .
  # Exclude the orthologous group URI itself from the general cross-references,
  # as it's already handled as the orthology link.
  FILTER (?crossRef != ?orthoGroup)
}
