
# Natural Language Question
# =======================
Retrieve the UniProtKB proteins, their catalyzed Rhea reactions, their encoding genes (Ensembl) and the anatomic entities where the genes are expressed (UBERON anatomic entites from Bgee expression data resource).

# Target Endpoint
# ===============
https://sparql.uniprot.org/sparql/

# Ground Truth Query
# =================
PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>
PREFIX genex: <http://purl.org/genex#>
PREFIX lscr: <http://purl.org/lscr#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rh: <http://rdf.rhea-db.org/>
PREFIX taxon: <http://purl.uniprot.org/taxonomy/>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT DISTINCT ?protein ?ensemblGene ?reaction ?anatomicEntityLabel ?anatomicEntity
WHERE {
  # federated query to Rhea enadpoint
  {
    SELECT DISTINCT ?reaction WHERE {
      SERVICE <https://sparql.rhea-db.org/sparql> {
        ?reaction rdfs:subClassOf rh:Reaction ;
          rh:equation ?reactionEquation ;
          rh:side ?reactionSide .
        ?reactionSide rh:contains ?participant .
        ?participant rh:compound ?compound .
        # compound constraint (CHEBI:16113 == cholesterol)
        ?compound rh:chebi CHEBI:16113 .
      }
    }
  }
  # taxonomy constraint (taxon:9606 == Homo sapiens)
  ?protein up:organism taxon:9606 ;
    up:annotation ?a ;
    rdfs:seeAlso / up:transcribedFrom ?ensemblGene .
  ?a a up:Catalytic_Activity_Annotation ;
    up:catalyticActivity ?ca .
  ?ca up:catalyzedReaction ?reaction .
  # federated query to Bgee (expression data)
  BIND(IRI(REPLACE(STR(?ensemblGene), "\\.[0-9]+$", "")) AS ?ensemblGeneNoVersion)
  SERVICE <https://www.bgee.org/sparql/> {
    ?gene lscr:xrefEnsemblGene ?ensemblGeneNoVersion ;
      genex:isExpressedIn ?anatomicEntity .
    ?anatomicEntity rdfs:label ?anatomicEntityLabel .
  }
}

# Predicted Query
# ==============
# https://sparql.uniprot.org/sparql/
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX up: <http://purl.uniprot.org/core/>
PREFIX genex: <http://purl.org/genex#>
PREFIX obo: <http://purl.obolibrary.org/obo/>
PREFIX identifiers: <http://identifiers.org/>

SELECT DISTINCT ?protein ?rhea ?ensemblGene ?anatomicEntity
WHERE {
  # Retrieve UniProtKB proteins and their catalyzed Rhea reactions
  ?protein up:reviewed true ; # Focus on reviewed entries (UniProtKB/Swiss-Prot)
           up:annotation ?annotation .
  ?annotation up:catalyticActivity ?catalyticActivity .
  ?catalyticActivity up:catalyzedReaction ?rhea .

  # Retrieve the encoding Ensembl genes for the UniProtKB proteins
  # UniProt links to Ensembl transcripts, which are transcribed from Ensembl genes.
  ?protein rdfs:seeAlso ?ensemblTranscript .
  ?ensemblTranscript up:database <http://purl.uniprot.org/database/Ensembl> .
  ?ensemblTranscript up:transcribedFrom ?ensemblGeneUniProt . # This variable holds the Ensembl Gene URI from UniProt

  # Harmonize the Ensembl gene URI for use with Bgee
  # UniProt's Ensembl gene URIs are typically like http://purl.uniprot.org/ensembl/ENSG...
  # Bgee often uses http://identifiers.org/ensembl/ENSG...
  BIND(STRAFTER(STR(?ensemblGeneUniProt), "http://purl.uniprot.org/ensembl/") AS ?ensemblID) .
  BIND(IRI(CONCAT(STR(identifiers:ensembl/), ?ensemblID)) AS ?ensemblGeneBgee) .

  # Federate with Bgee to find anatomic entities where the genes are expressed
  SERVICE <https://www.bgee.org/sparql> {
    # Find expression calls associated with the Ensembl gene
    ?expression_call genex:hasGene ?ensemblGeneBgee .
    # Link the expression call to the anatomic entity (UBERON)
    ?expression_call genex:isExpressedIn ?anatomicEntity .
    # Ensure that the expression is 'present' (i.e., the gene is expressed)
    ?expression_call genex:expressionCallType genex:Present .
  }

  # Assign the UniProt-derived Ensembl gene URI to the final SELECT variable
  BIND(?ensemblGeneUniProt AS ?ensemblGene)
}
