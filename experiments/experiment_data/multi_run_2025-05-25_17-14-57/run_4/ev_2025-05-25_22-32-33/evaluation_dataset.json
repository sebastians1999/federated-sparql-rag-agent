[
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/16",
    "natural_language_question": "For a given lipid (SWISSLIPID:000399814, Ceramide), return a list of all enzymes in UniProtKB/Swiss-Prot annotated to catalyze reactions involving that lipid.\nThis query does not consider the hierarchy: it looks for reactions and enzymes only for the specified lipid.",
    "ground_truth_query": "PREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n# Example 16\nSELECT ?startId ?startName ?uniprot\nWHERE\n{\n  # SwissLipids query (list of) identifier(s)\n  VALUES ?startId { SWISSLIPID:000399814 }\n  # name\n  ?startId rdfs:label ?startName .\n  # ChEBI x-ref\n  ?startId owl:equivalentClass ?chebi .\n  # federated query to Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n  \t?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n  }    \n  # federated query to UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?uniprot up:reviewed true .\n    ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  }\n} \nORDER BY ?startId",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/16.ttl",
    "predicted_query": "# https://sparql.swisslipids.org/sparql/\nPREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?lipid ?lipidName ?chebi ?rhea ?rheaEquation ?uniprot ?uniprotName\nWHERE {\n  # Start with the given lipid in SwissLipids (host endpoint)\n  VALUES ?lipid { SWISSLIPID:000399814 }\n  ?lipid rdfs:label ?lipidName .\n  ?lipid owl:equivalentClass ?chebi . # Link SwissLipids entry to its ChEBI equivalent\n\n  # Federate to Rhea to find reactions involving the ChEBI compound\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi . # Find Rhea reactions involving the ChEBI compound\n    ?rhea rh:equation ?rheaEquation . # Get the equation for the reaction\n  }\n\n  # Federate to UniProt to find enzymes catalyzing these reactions\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea . # Link UniProt entries to Rhea reactions\n    ?uniprot up:reviewed true . # Filter for reviewed UniProt entries (Swiss-Prot)\n    ?uniprot up:recommendedName/up:fullName ?uniprotName . # Get the recommended full name of the enzyme\n  }\n}\nORDER BY ?uniprot",
    "predicted_endpoint": "https://sparql.swisslipids.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "2f539754-30c9-46c4-98d2-7bd3eacd6df5",
    "evaluation_timestamp": "2025-05-25T22:41:16.750416",
    "question_understanding_prompt_tokens": 308,
    "question_understanding_completion_tokens": 57,
    "question_understanding_total_tokens": 365,
    "planning_prompt_tokens": 7503,
    "planning_completion_tokens": 176,
    "planning_total_tokens": 7679,
    "pattern_prompt_tokens": 22263,
    "pattern_completion_tokens": 418,
    "pattern_total_tokens": 22681,
    "assembler_prompt_tokens": 5389,
    "assembler_completion_tokens": 480,
    "assembler_total_tokens": 5869,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "The read operation timed out"
  },
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/6",
    "natural_language_question": "For a given lipid (SWISSLIPID:000399814, Ceramide), return a list of all corresponding reactions (Rhea IDs and equation), as well as their enzymes as annotated in UniProtKB/Swiss-Prot) enzymes themselves (ID and protein name).\nThis query does not consider the hierarchy: it looks for reactions and enzymes only for the specified lipid.",
    "ground_truth_query": "PREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n# Example 6\nSELECT ?startId ?startName ?chebi ?rhea ?rheaEquation ?uniprot ?uniprotName\nWHERE\n{\n  # SwissLipids query (list of) identifier(s)\n  VALUES ?startId { SWISSLIPID:000399814 }\n  # name\n  ?startId rdfs:label ?startName .\n  # ChEBI x-ref\n  ?startId owl:equivalentClass ?chebi .\n  # federated query to Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n  \t?rhea rh:equation ?rheaEquation .\n  \t?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n  }    \n  # federated query to UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?uniprot up:reviewed true .\n    ?uniprot up:recommendedName/up:fullName ?uniprotName .\n    ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  }\n} \nORDER BY ?startId",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/6.ttl",
    "predicted_query": "# https://sparql.swisslipids.org/sparql/\nPREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?lipidId ?lipidName ?rheaAccession ?rheaEquation ?uniprot ?proteinName\nWHERE {\n  # Start with the given lipid in SwissLipids\n  VALUES ?lipidId { SWISSLIPID:000399814 }\n  ?lipidId rdfs:label ?lipidName .\n  # Get the equivalent ChEBI identifier for federation with Rhea\n  ?lipidId owl:equivalentClass ?chebi .\n\n  # Federate to Rhea to find reactions involving the ChEBI compound\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n    ?rhea rh:accession ?rheaAccession .\n    ?rhea rh:equation ?rheaEquation .\n  }\n\n  # Federate to UniProt to find enzymes catalyzing these Rhea reactions\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?uniprot up:reviewed true . # Filter for reviewed UniProt entries (Swiss-Prot)\n    ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n    ?uniprot up:recommendedName/up:fullName ?proteinName .\n  }\n}\nORDER BY ?rheaAccession ?uniprot",
    "predicted_endpoint": "https://sparql.swisslipids.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "3557a9c8-1ca8-428f-9ac4-a42b85a9e368",
    "evaluation_timestamp": "2025-05-25T23:07:20.421738",
    "question_understanding_prompt_tokens": 321,
    "question_understanding_completion_tokens": 89,
    "question_understanding_total_tokens": 410,
    "planning_prompt_tokens": 6736,
    "planning_completion_tokens": 230,
    "planning_total_tokens": 6966,
    "pattern_prompt_tokens": 13195,
    "pattern_completion_tokens": 308,
    "pattern_total_tokens": 13503,
    "assembler_prompt_tokens": 4365,
    "assembler_completion_tokens": 441,
    "assembler_total_tokens": 4806,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "The read operation timed out"
  },
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/5",
    "natural_language_question": "For a given lipid (SWISSLIPID:000399814, Ceramide), return a list of all corresponding reactions (Rhea IDs and equation).\nThis query does consider the hierarchy: it looks for reactions involving the specified lipid and/or its more specific forms.",
    "ground_truth_query": "PREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\n\n# Example 5\nSELECT ?startId ?startName ?id ?name ?chebi ?rhea ?rheaEquation \nWHERE\n{\n  # SwissLipids query (list of) identifier(s)\n  VALUES ?startId { SWISSLIPID:000399814 }\n  # name\n  ?startId rdfs:label ?startName .\n  # Retrieve children lipids \n  ?id rdfs:subClassOf* ?startId .\n  ?id rdfs:label ?name .\n  # ChEBI x-ref\n  ?id owl:equivalentClass ?chebi .\n  # federated query to Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n  \t?rhea rh:equation ?rheaEquation .\n  \t?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n  }    \n} \nORDER BY  ?startId ?id",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/5.ttl",
    "predicted_query": "# https://sparql.swisslipids.org/sparql\nPREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?rheaID ?equation\nWHERE {\n  # Step 1: Get the ChEBI equivalent of the given SwissLipid ID from the primary endpoint (SwissLipids)\n  VALUES ?swissLipid { SWISSLIPID:000399814 }\n  ?swissLipid owl:equivalentClass ?chebiBase .\n\n  # Step 2: Federate to Rhea to find reactions involving this ChEBI ID or its subclasses\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    # Find the base ChEBI compound (?chebiBase) or any of its more specific forms (subclasses)\n    # rdfs:subClassOf* includes the subject itself, thus covering \"the specified lipid and/or its more specific forms\"\n    ?chebi rdfs:subClassOf* ?chebiBase .\n\n    # Find Rhea reactions involving these ChEBI compounds\n    ?rhea rdfs:subClassOf rh:Reaction . # Ensure it's a reaction\n    ?rhea rh:accession ?rheaID .       # Get the Rhea ID\n    ?rhea rh:equation ?equation .      # Get the reaction equation\n\n    # Link the reaction to the compound via its sides and participants\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n    # Link the compound to its ChEBI identifier, considering different ways ChEBI is linked in Rhea\n    ?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?chebi .\n  }\n}\nORDER BY ?rheaID",
    "predicted_endpoint": "https://sparql.swisslipids.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "6f8fd278-b6d7-4b6d-84a1-15d758fb4602",
    "evaluation_timestamp": "2025-05-25T23:18:16.066771",
    "question_understanding_prompt_tokens": 300,
    "question_understanding_completion_tokens": 66,
    "question_understanding_total_tokens": 366,
    "planning_prompt_tokens": 6093,
    "planning_completion_tokens": 167,
    "planning_total_tokens": 6260,
    "pattern_prompt_tokens": 13412,
    "pattern_completion_tokens": 238,
    "pattern_total_tokens": 13650,
    "assembler_prompt_tokens": 4406,
    "assembler_completion_tokens": 504,
    "assembler_total_tokens": 4910,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/34",
    "natural_language_question": "Lipids affected by human enzymes",
    "ground_truth_query": "PREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?swisslipid  {\n  ?swisslipid owl:equivalentClass ?chebi .\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n\t?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?metabolite . \n  }\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?catalyticActivityAnnotation up:catalyticActivity/up:catalyzedReaction ?rhea .\n    ?protein up:annotation ?catalyticActivityAnnotation ;\n             up:organism taxon:9606 .\n  }\n}\nLIMIT 1",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/34.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?enzyme ?enzymeName ?lipidChebi ?lipidLabel\nWHERE {\n  # UniProt: Find human enzymes and the reactions they catalyze\n  ?enzyme up:organism taxon:9606 . # Filter for human enzymes\n  ?enzyme up:annotation/up:catalyticActivity/up:catalyzedReaction ?reaction . # Link enzyme to catalyzed reaction\n  ?enzyme up:recommendedName/up:fullName ?enzymeName . # Get the full name of the enzyme\n\n  # Rhea: Find lipids involved in these reactions\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    # Find reactions that involve compounds identified by a ChEBI ID\n    ?reaction rh:side/rh:contains/rh:compound/rh:chebi ?lipidChebi .\n    # Ensure the ChEBI ID corresponds to a lipid or a subclass of lipid (CHEBI:18059 is 'lipid')\n    ?lipidChebi rdfs:subClassOf* CHEBI:18059 .\n    # Optionally retrieve the label for the lipid from Rhea's graph\n    OPTIONAL { ?lipidChebi rdfs:label ?lipidLabel . }\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "1a91e415-b47e-42b5-b0cb-be3bcd8e82c2",
    "evaluation_timestamp": "2025-05-25T23:19:32.675447",
    "question_understanding_prompt_tokens": 245,
    "question_understanding_completion_tokens": 20,
    "question_understanding_total_tokens": 265,
    "planning_prompt_tokens": 7633,
    "planning_completion_tokens": 127,
    "planning_total_tokens": 7760,
    "pattern_prompt_tokens": 19746,
    "pattern_completion_tokens": 400,
    "pattern_total_tokens": 20146,
    "assembler_prompt_tokens": 6191,
    "assembler_completion_tokens": 0,
    "assembler_total_tokens": 6191,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/118_biosodafrontend_rat_brain_human_cancer",
    "natural_language_question": "What are the Homo sapiens genes associated with cancer and their orthologs expressed in the Rattus norvegicus brain?",
    "ground_truth_query": "PREFIX up:<http://purl.uniprot.org/core/>\nPREFIX taxon:<http://purl.uniprot.org/taxonomy/>\nPREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>\nPREFIX orth:<http://purl.org/net/orth#>\nPREFIX dcterms:<http://purl.org/dc/terms/>\nPREFIX obo:<http://purl.obolibrary.org/obo/>\nPREFIX lscr:<http://purl.org/lscr#>\nPREFIX genex:<http://purl.org/genex#>\nPREFIX sio: <http://semanticscience.org/resource/>\nSELECT ?gene ?orthologous_protein2 WHERE {\n  {\n    SELECT ?protein1 WHERE {\n      ?protein1 a up:Protein;\n        up:organism/up:scientificName 'Homo sapiens' ;\n        up:annotation ?annotation .\n      ?annotation rdfs:comment ?annotation_text.\n      ?annotation a up:Disease_Annotation .\n      FILTER CONTAINS (?annotation_text, \"cancer\")\n    }\n  }\n  SERVICE <https://sparql.omabrowser.org/sparql/> {\n    SELECT ?orthologous_protein2 ?protein1 ?gene WHERE {\n      ?protein_OMA a orth:Protein .\n      ?orthologous_protein2 a orth:Protein .\n      ?cluster a orth:OrthologsCluster .\n      ?cluster orth:hasHomologousMember ?node1 .\n      ?cluster orth:hasHomologousMember ?node2 .\n      ?node2 orth:hasHomologousMember* ?protein_OMA .\n      ?node1 orth:hasHomologousMember* ?orthologous_protein2 \n      .?orthologous_protein2 orth:organism/obo:RO_0002162/up:scientificName 'Rattus norvegicus' .\n      ?orthologous_protein2 sio:SIO_010079 ?gene .\n      ?protein_OMA lscr:xrefUniprot ?protein1 .\n      FILTER(?node1 != ?node2)\n    }\n  }\n  SERVICE <https://www.bgee.org/sparql/> {\n    ?gene genex:isExpressedIn ?anatEntity .\n    ?anatEntity rdfs:label 'brain' .\n    ?gene orth:organism ?org . \n    ?org obo:RO_0002162 taxon:10116 .\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql",
    "federates_with": [
      "https://sparql.omabrowser.org/sparql/",
      "https://www.bgee.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/118_biosodafrontend_rat_brain_human_cancer.ttl",
    "predicted_query": "# Primary endpoint: https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX orth: <http://purl.org/net/orth#>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX obo: <http://purl.obolibrary.org/obo/>\nPREFIX genex: <http://purl.org/genex#>\n\nSELECT DISTINCT ?humanGeneName ?humanProtein ?diseaseComment ?ratOrthologProtein ?ratGeneName\nWHERE {\n  # UniProt: Find Homo sapiens proteins associated with cancer\n  ?humanProtein a up:Protein ;\n                up:organism taxon:9606 ; # Homo sapiens\n                up:encodedBy ?humanGene .\n  ?humanGene skos:prefLabel ?humanGeneName .\n\n  ?humanProtein up:annotation ?diseaseAnnotation .\n  ?diseaseAnnotation a up:Disease_Annotation ;\n                     rdfs:comment ?diseaseComment .\n  FILTER (CONTAINS(LCASE(?diseaseComment), \"cancer\")) .\n\n  # UniProt: Get the Ensembl gene ID for the rat ortholog protein\n  # This is needed to query Bgee, as Bgee typically uses Ensembl gene IDs.\n  ?ratOrthologProtein rdfs:seeAlso ?ratXref .\n  ?ratXref up:transcribedFrom ?ratEnsemblGene .\n  ?ratOrthologProtein up:encodedBy ?ratGene .\n  ?ratGene skos:prefLabel ?ratGeneName .\n\n  # OMA Browser: Find orthologs of human proteins in Rattus norvegicus\n  SERVICE <https://sparql.omabrowser.org/sparql> {\n    ?cluster a orth:OrthologsCluster . # Find orthologous clusters\n    ?cluster orth:hasHomologousMember ?nodeHuman , ?nodeRat .\n    ?nodeHuman orth:hasHomologousMember* ?omaHumanProtein .\n    ?nodeRat orth:hasHomologousMember* ?omaRatProtein .\n    \n    ?omaHumanProtein lscr:xrefUniprot ?humanProtein . # Join with UniProt human protein\n    ?omaRatProtein lscr:xrefUniprot ?ratOrthologProtein . # Get the UniProt ID of the rat ortholog\n\n    ?omaHumanProtein orth:organism/obo:RO_0002162 taxon:9606 . # Ensure human protein is Homo sapiens\n    ?omaRatProtein orth:organism/obo:RO_0002162 taxon:10116 . # Ensure rat ortholog is Rattus norvegicus\n  }\n\n  # Bgee: Check if the Rattus norvegicus ortholog gene is expressed in the brain\n  SERVICE <https://www.bgee.org/sparql> {\n    ?bgeeGene genex:isExpressedIn ?anatomicalEntity .\n    ?bgeeGene lscr:xrefEnsemblGene ?ratEnsemblGene . # Join with the Ensembl gene ID obtained from UniProt\n    \n    ?anatomicalEntity rdfs:label \"brain\"@en . # Filter for expression in \"brain\"\n    ?bgeeGene genex:hasTaxon taxon:10116 . # Ensure the gene is from Rattus norvegicus\n  }\n}",
    "predicted_endpoint": "Primary",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "70e1a39c-d4a8-4e6f-9d7f-d56b8683b4c3",
    "evaluation_timestamp": "2025-05-25T23:22:20.686539",
    "question_understanding_prompt_tokens": 263,
    "question_understanding_completion_tokens": 47,
    "question_understanding_total_tokens": 310,
    "planning_prompt_tokens": 7481,
    "planning_completion_tokens": 197,
    "planning_total_tokens": 7678,
    "pattern_prompt_tokens": 31495,
    "pattern_completion_tokens": 1327,
    "pattern_total_tokens": 32822,
    "assembler_prompt_tokens": 6329,
    "assembler_completion_tokens": 817,
    "assembler_total_tokens": 7146,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "unknown url type: 'Primary?query=%23+Primary+endpoint%3A+https%3A//sparql.uniprot.org/sparql%0APREFIX+up%3A+%3Chttp%3A//purl.uniprot.org/core/%3E%0APREFIX+taxon%3A+%3Chttp%3A//purl.uniprot.org/taxonomy/%3E%0APREFIX+rdfs%3A+%3Chttp%3A//www.w3.org/2000/01/rdf-schema%23%3E%0APREFIX+skos%3A+%3Chttp%3A//www.w3.org/2004/02/skos/core%23%3E%0APREFIX+orth%3A+%3Chttp%3A//purl.org/net/orth%23%3E%0APREFIX+lscr%3A+%3Chttp%3A//purl.org/lscr%23%3E%0APREFIX+obo%3A+%3Chttp%3A//purl.obolibrary.org/obo/%3E%0APREFIX+genex%3A+%3Chttp%3A//purl.org/genex%23%3E%0A%0ASELECT+DISTINCT+%3FhumanGeneName+%3FhumanProtein+%3FdiseaseComment+%3FratOrthologProtein+%3FratGeneName%0AWHERE+%7B%0A++%23+UniProt%3A+Find+Homo+sapiens+proteins+associated+with+cancer%0A++%3FhumanProtein+a+up%3AProtein+%3B%0A++++++++++++++++up%3Aorganism+taxon%3A9606+%3B+%23+Homo+sapiens%0A++++++++++++++++up%3AencodedBy+%3FhumanGene+.%0A++%3FhumanGene+skos%3AprefLabel+%3FhumanGeneName+.%0A%0A++%3FhumanProtein+up%3Aannotation+%3FdiseaseAnnotation+.%0A++%3FdiseaseAnnotation+a+up%3ADisease_Annotation+%3B%0A+++++++++++++++++++++rdfs%3Acomment+%3FdiseaseComment+.%0A++FILTER+%28CONTAINS%28LCASE%28%3FdiseaseComment%29%2C+%22cancer%22%29%29+.%0A%0A++%23+UniProt%3A+Get+the+Ensembl+gene+ID+for+the+rat+ortholog+protein%0A++%23+This+is+needed+to+query+Bgee%2C+as+Bgee+typically+uses+Ensembl+gene+IDs.%0A++%3FratOrthologProtein+rdfs%3AseeAlso+%3FratXref+.%0A++%3FratXref+up%3AtranscribedFrom+%3FratEnsemblGene+.%0A++%3FratOrthologProtein+up%3AencodedBy+%3FratGene+.%0A++%3FratGene+skos%3AprefLabel+%3FratGeneName+.%0A%0A++%23+OMA+Browser%3A+Find+orthologs+of+human+proteins+in+Rattus+norvegicus%0A++SERVICE+%3Chttps%3A//sparql.omabrowser.org/sparql%3E+%7B%0A++++%3Fcluster+a+orth%3AOrthologsCluster+.+%23+Find+orthologous+clusters%0A++++%3Fcluster+orth%3AhasHomologousMember+%3FnodeHuman+%2C+%3FnodeRat+.%0A++++%3FnodeHuman+orth%3AhasHomologousMember%2A+%3FomaHumanProtein+.%0A++++%3FnodeRat+orth%3AhasHomologousMember%2A+%3FomaRatProtein+.%0A++++%0A++++%3FomaHumanProtein+lscr%3AxrefUniprot+%3FhumanProtein+.+%23+Join+with+UniProt+human+protein%0A++++%3FomaRatProtein+lscr%3AxrefUniprot+%3FratOrthologProtein+.+%23+Get+the+UniProt+ID+of+the+rat+ortholog%0A%0A++++%3FomaHumanProtein+orth%3Aorganism/obo%3ARO_0002162+taxon%3A9606+.+%23+Ensure+human+protein+is+Homo+sapiens%0A++++%3FomaRatProtein+orth%3Aorganism/obo%3ARO_0002162+taxon%3A10116+.+%23+Ensure+rat+ortholog+is+Rattus+norvegicus%0A++%7D%0A%0A++%23+Bgee%3A+Check+if+the+Rattus+norvegicus+ortholog+gene+is+expressed+in+the+brain%0A++SERVICE+%3Chttps%3A//www.bgee.org/sparql%3E+%7B%0A++++%3FbgeeGene+genex%3AisExpressedIn+%3FanatomicalEntity+.%0A++++%3FbgeeGene+lscr%3AxrefEnsemblGene+%3FratEnsemblGene+.+%23+Join+with+the+Ensembl+gene+ID+obtained+from+UniProt%0A++++%0A++++%3FanatomicalEntity+rdfs%3Alabel+%22brain%22%40en+.+%23+Filter+for+expression+in+%22brain%22%0A++++%3FbgeeGene+genex%3AhasTaxon+taxon%3A10116+.+%23+Ensure+the+gene+is+from+Rattus+norvegicus%0A++%7D%0A%7D&format=json&output=json&results=json'"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/51",
    "natural_language_question": "Find all proteins linked to arachidonate (CHEBI:32395)",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n\nSELECT \n    DISTINCT\n        ?uniprot\n        ?uniprotID\n        ?recname\n        ?gene\n        ?chebi\n        ?uniprotName\nWHERE {\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n     VALUES (?chebi) { (CHEBI:32395) }\n     ?rhea rh:side/rh:contains/rh:compound ?compound .\n     ?compound rh:chebi ?chebi .\n     ?chebi up:name ?uniprotName .\n  }\n  ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  ?uniprot up:mnemonic ?uniprotID .\n  ?uniprot up:recommendedName/up:fullName ?recname .\n  OPTIONAL {?uniprot up:encodedBy/skos:prefLabel ?gene .}\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/51_all_proteins_linked_to_arachidonate.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?protein\nWHERE {\n  # Find proteins in UniProt that catalyze a reaction\n  ?protein a up:Protein .\n  ?protein up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n\n  # Federate to Rhea to find reactions involving arachidonate (CHEBI:32395)\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n    ?compound rh:chebi CHEBI:32395 .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "96a40678-0fae-49f7-9bde-87c2ac9ac700",
    "evaluation_timestamp": "2025-05-25T23:23:28.681975",
    "question_understanding_prompt_tokens": 258,
    "question_understanding_completion_tokens": 31,
    "question_understanding_total_tokens": 289,
    "planning_prompt_tokens": 5189,
    "planning_completion_tokens": 125,
    "planning_total_tokens": 5314,
    "pattern_prompt_tokens": 11473,
    "pattern_completion_tokens": 238,
    "pattern_total_tokens": 11711,
    "assembler_prompt_tokens": 3854,
    "assembler_completion_tokens": 213,
    "assembler_total_tokens": 4067,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/40",
    "natural_language_question": "Retrieve human enzymes that metabolize sphingolipids and are annotated in ChEMBL",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?protein ?chemblEntry\nWHERE {\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rdfs:subClassOf rh:Reaction ;\n      rh:side/rh:contains/rh:compound/rh:chebi/rdfs:subClassOf+ CHEBI:26739 .\n  }\n  ?ca up:catalyzedReaction ?rhea .\n  ?protein up:annotation/up:catalyticActivity ?ca ;\n    up:organism taxon:9606 ;\n    rdfs:seeAlso ?chemblEntry .\n  ?chemblEntry up:database <http://purl.uniprot.org/database/ChEMBL> .\n}\nLIMIT 10",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/40_human_enzymes_that_metabolize_sphingolipids.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX cco: <http://rdf.ebi.ac.uk/terms/chembl#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n\nSELECT DISTINCT ?protein ?proteinName ?reaction ?chebi ?chemblMolecule ?chemblMoleculeLabel\nWHERE {\n  # UniProt: Identify human enzymes and link them to Rhea reactions\n  ?protein up:organism taxon:9606 .\n  ?protein up:annotation ?annotation .\n  ?annotation a up:Catalytic_Activity_Annotation .\n  ?annotation up:catalyticActivity ?catalyticActivity .\n  ?catalyticActivity up:catalyzedReaction ?reaction .\n  ?protein up:recommendedName ?recName .\n  ?recName up:fullName ?proteinName .\n\n  # Rhea: Identify reactions involving sphingolipids\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf rh:Reaction .\n    ?reaction rh:side ?reactionSide .\n    ?reactionSide rh:contains ?participant .\n    ?participant rh:compound ?compound .\n    ?compound rh:chebi ?chebi .\n    # Filter for sphingolipids (CHEBI:74747) or its subclasses\n    ?chebi (rdfs:subClassOf)+ CHEBI:74747 .\n  }\n\n  # IDSM (ChEMBL): Link UniProt proteins to ChEMBL annotations\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/idsm> {\n    ?activity a cco:Activity .\n    ?activity cco:hasMolecule ?chemblMolecule .\n    ?chemblMolecule skos:prefLabel ?chemblMoleculeLabel . # Get label for the ChEMBL molecule\n    ?activity cco:hasAssay ?assay .\n    ?assay cco:hasTarget ?target .\n    ?target cco:hasTargetComponent/cco:targetCmptXref ?protein .\n    ?protein a cco:UniprotRef . # Ensure the linked entity is a UniProt reference\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "fd458ec9-63c8-47ee-bcf9-2b9369855aa1",
    "evaluation_timestamp": "2025-05-25T23:26:15.586041",
    "question_understanding_prompt_tokens": 256,
    "question_understanding_completion_tokens": 33,
    "question_understanding_total_tokens": 289,
    "planning_prompt_tokens": 8302,
    "planning_completion_tokens": 169,
    "planning_total_tokens": 8471,
    "pattern_prompt_tokens": 27375,
    "pattern_completion_tokens": 521,
    "pattern_total_tokens": 27896,
    "assembler_prompt_tokens": 7083,
    "assembler_completion_tokens": 610,
    "assembler_total_tokens": 7693,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/49",
    "natural_language_question": "Retrieve the UniProtKB proteins, their catalyzed Rhea reactions, their encoding genes (Ensembl) and the anatomic entities where the genes are expressed (UBERON anatomic entites from Bgee expression data resource).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX genex: <http://purl.org/genex#>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?protein ?ensemblGene ?reaction ?anatomicEntityLabel ?anatomicEntity\nWHERE {\n  # federated query to Rhea enadpoint\n  {\n    SELECT DISTINCT ?reaction WHERE {\n      SERVICE <https://sparql.rhea-db.org/sparql> {\n        ?reaction rdfs:subClassOf rh:Reaction ;\n          rh:equation ?reactionEquation ;\n          rh:side ?reactionSide .\n        ?reactionSide rh:contains ?participant .\n        ?participant rh:compound ?compound .\n        # compound constraint (CHEBI:16113 == cholesterol)\n        ?compound rh:chebi CHEBI:16113 .\n      }\n    }\n  }\n  # taxonomy constraint (taxon:9606 == Homo sapiens)\n  ?protein up:organism taxon:9606 ;\n    up:annotation ?a ;\n    rdfs:seeAlso / up:transcribedFrom ?ensemblGene .\n  ?a a up:Catalytic_Activity_Annotation ;\n    up:catalyticActivity ?ca .\n  ?ca up:catalyzedReaction ?reaction .\n  # federated query to Bgee (expression data)\n  BIND(IRI(REPLACE(STR(?ensemblGene), \"\\\\.[0-9]+$\", \"\")) AS ?ensemblGeneNoVersion)\n  SERVICE <https://www.bgee.org/sparql/> {\n    ?gene lscr:xrefEnsemblGene ?ensemblGeneNoVersion ;\n      genex:isExpressedIn ?anatomicEntity .\n    ?anatomicEntity rdfs:label ?anatomicEntityLabel .\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql",
      "https://www.bgee.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/49_tissues_where_genes_metabolizing_cholestrol_are_expressed.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX genex: <http://purl.org/genex#>\nPREFIX obo: <http://purl.obolibrary.org/obo/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX orth: <http://purl.org/net/orth#>\n\nSELECT DISTINCT ?protein ?rhea ?ensemblGene ?anatEntity\nWHERE {\n  # 1. Retrieve UniProtKB proteins and their catalyzed Rhea reactions\n  ?protein up:reviewed true ; # Focus on reviewed proteins\n           up:organism taxon:9606 ; # Filter for human proteins (optional, but common for examples)\n           up:annotation ?annotation .\n  ?annotation up:catalyticActivity ?catalyticActivity .\n  ?catalyticActivity up:catalyzedReaction ?rhea .\n\n  # 2. Retrieve their encoding genes (Ensembl)\n  ?protein rdfs:seeAlso ?ensemblTranscript .\n  ?ensemblTranscript up:database <http://purl.uniprot.org/database/Ensembl> .\n  ?ensemblTranscript up:transcribedFrom ?ensemblGene .\n\n  # 3. Federate with Rhea to get more details about the reaction (optional, but good for completeness)\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    # ?rhea is the join variable from UniProt\n    ?rhea rh:accession ?rheaAccession .\n    # You can add ?rheaAccession to the SELECT clause if you want to retrieve it.\n    # ?rhea rh:equation ?rheaEquation .\n    # You can add ?rheaEquation to the SELECT clause if you want to retrieve it.\n  }\n\n  # 4. Federate with Bgee to find anatomic entities where the genes are expressed\n  SERVICE <https://www.bgee.org/sparql> {\n    # ?ensemblGene is the join variable from UniProt\n    ?expression_call genex:hasGene ?ensemblGene .\n    ?expression_call genex:isExpressedIn ?anatEntity .\n    # Filter for human expression data, consistent with UniProt organism filter\n    ?expression_call orth:organism ?bgeeOrganism .\n    ?bgeeOrganism obo:RO_0002162 taxon:9606 . # obo:RO_0002162 is 'in taxon'\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "84e9c70d-aacc-420b-91f3-28d50d330210",
    "evaluation_timestamp": "2025-05-25T23:28:34.657039",
    "question_understanding_prompt_tokens": 282,
    "question_understanding_completion_tokens": 72,
    "question_understanding_total_tokens": 354,
    "planning_prompt_tokens": 7781,
    "planning_completion_tokens": 261,
    "planning_total_tokens": 8042,
    "pattern_prompt_tokens": 16270,
    "pattern_completion_tokens": 280,
    "pattern_total_tokens": 16550,
    "assembler_prompt_tokens": 4025,
    "assembler_completion_tokens": 628,
    "assembler_total_tokens": 4653,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/53",
    "natural_language_question": "Find mouse homologs in OMABrowser of human enzymes that catalyze reactions involving sterols (CHEBI:15889). Federating with Rhea and OMABrowser.",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX orth: <http://purl.org/net/orth#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  DISTINCT\n    ?chebi\n    ?reaction\n    ?humanProtein\n    ?mouseProtein\n    ?cluster \nWHERE {\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf rh:Reaction .\n    ?reaction rh:side/rh:contains/rh:compound ?compound .\n    ?compound rh:chebi ?chebi .\n    ?chebi rdfs:subClassOf* CHEBI:15889\n  }\n\n  ?humanProtein up:organism taxon:9606 .\n  ?humanProtein up:annotation ?a .\n  ?a a up:Catalytic_Activity_Annotation .\n  ?a up:catalyticActivity ?ca .\n  ?ca up:catalyzedReaction ?reaction .\n\n  SERVICE  <https://sparql.omabrowser.org/sparql> {\n    ?cluster a orth:ParalogsCluster .\n    ?cluster orth:hasHomologousMember ?node1 , ?node2 .\n    ?node1 orth:hasHomologousMember* ?orthoProtein1 .\n    ?node2 orth:hasHomologousMember* ?orthoProtein2 .\n    ?orthoProtein1 lscr:xrefUniprot ?mouseProtein .\n    ?orthoProtein2 lscr:xrefUniprot ?humanProtein .\n    # inTaxon mouse\n    ?orthoProtein1 orth:organism/<http://purl.obolibrary.org/obo/RO_0002162> taxon:10090 . \n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql",
      "https://sparql.omabrowser.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/53_mouse_homologs_of_sterol_enzymes_via_omabrowser.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX oma: <http://omabrowser.org/ontology/oma#>\n\nSELECT DISTINCT ?humanEnzyme ?mouseHomolog ?rhea\nWHERE {\n  # 1. Find reactions involving sterols (CHEBI:15889) from Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rdfs:subClassOf rh:Reaction ;\n          rh:status rh:Approved ;\n          rh:side/rh:contains/rh:compound/rh:chebi/rdfs:subClassOf+ CHEBI:15889 .\n  }\n\n  # 2. Find human enzymes catalyzing these reactions from UniProt (host endpoint)\n  ?humanEnzyme up:organism taxon:9606 .\n  ?humanEnzyme up:annotation ?annotation .\n  ?annotation up:catalyticActivity ?catalyticActivity .\n  ?catalyticActivity up:catalyzedReaction ?rhea . # Join with ?rhea from Rhea\n\n  # 3. Find mouse homologs of these human enzymes from OMABrowser\n  SERVICE <https://sparql.omabrowser.org/sparql> {\n    # ?humanEnzyme from UniProt is expected to join with an OMA protein identifier\n    ?humanEnzyme oma:memberOf ?orthologousGroup .\n    ?orthologousGroup oma:hasMember ?mouseHomolog .\n    ?mouseHomolog oma:inTaxon taxon:10090 . # Mouse taxonomy ID\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "3e63a737-31d3-4546-b1c7-ccd192017d40",
    "evaluation_timestamp": "2025-05-25T23:29:53.599543",
    "question_understanding_prompt_tokens": 273,
    "question_understanding_completion_tokens": 40,
    "question_understanding_total_tokens": 313,
    "planning_prompt_tokens": 8703,
    "planning_completion_tokens": 167,
    "planning_total_tokens": 8870,
    "pattern_prompt_tokens": 25253,
    "pattern_completion_tokens": 478,
    "pattern_total_tokens": 25731,
    "assembler_prompt_tokens": 6597,
    "assembler_completion_tokens": 460,
    "assembler_total_tokens": 7057,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/52",
    "natural_language_question": "Retrieve drugs that target human enzymes involved in sterol metabolism (federated query with Rhea and ChEMBL via IDSM/Elixir czech republic).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX cco: <http://rdf.ebi.ac.uk/terms/chembl#>\nPREFIX chebihash: <http://purl.obolibrary.org/obo/chebi#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n        DISTINCT\n            ?protein\n            ?proteinFullName\n            ?activityType\n            ?standardActivityValue\n            ?standardActivityUnit\n            ?chemblMolecule\n            ?chemlbMoleculePrefLabel\nWHERE\n  {\n  # ChEBI: retrieve members of the ChEBI class ChEBI:15889 (sterol)\n  # Rhea: retrieve the reactions involving these ChEBI as participants\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf  rh:Reaction ;\n\t      rh:status        rh:Approved ;\n\t      rh:side          ?reactionSide .\n    ?reactionSide\n\t      rh:contains      ?participant .\n    ?participant rh:compound  ?compound\n    {\n      ?compound  rh:chebi  ?chebi .\n      ?chebi (rdfs:subClassOf)+ CHEBI:15889\n    } UNION {\n      ?compound  rh:chebi           ?chebi .\n      ?chebi2   rdfs:subClassOf     ?chebiRestriction .\n      ?chebiRestriction\n\t\ta           owl:Restriction ;\n\t\towl:onProperty      chebihash:has_major_microspecies_at_pH_7_3 ;\n\t\towl:someValuesFrom  ?chebi .\n      ?chebi2 (rdfs:subClassOf)+ CHEBI:15889\n    }\n  }\n  # UniProt: retrieve the human (taxid:9606) enzymes catalyzing these Rhea reactions\n  ?ca       up:catalyzedReaction  ?reaction .\n  ?a        up:catalyticActivity  ?ca .\n  ?protein  up:annotation         ?a ;\n\t    up:organism           taxon:9606 ;\n\t    up:recommendedName    ?proteinRecName .\n  ?proteinRecName\n\t    up:fullName           ?proteinFullName .\n  # Find drugs in wikidata that interact with the UniProt Proteins\n  # ChEMBL: retrieve the corresponding targets and with drugs in clinical phase 4\n  # Via https://idsm.elixir-czech.cz/sparql/\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/idsm> {\n    ?activity a cco:Activity ;\n      cco:hasMolecule ?chemblMolecule ;\n      cco:hasAssay ?assay ;\n      cco:standardType ?activityType ;\n      cco:standardValue ?standardActivityValue ;\n      cco:standardUnits ?standardActivityUnit .\n    ?chemblMolecule cco:highestDevelopmentPhase ?highestDevelopmentPhase ;\n      rdfs:label ?chemblMoleculeLabel ;\n      skos:prefLabel ?chemlbMoleculePrefLabel .\n    FILTER (?highestDevelopmentPhase > 3)\n    ?assay cco:hasTarget ?target .\n    ?target cco:hasTargetComponent/cco:targetCmptXref ?protein .\n    ?protein a cco:UniprotRef .\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql",
      "https://idsm.elixir-czech.cz/sparql/endpoint/idsm"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/52_drugs_targeting_sterol_metabolism.ttl",
    "predicted_query": "# Primary endpoint: https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?drug ?enzyme ?enzymeName ?rhea ?rheaLabel ?chebi ?chebiLabel\nWHERE {\n  # 1. Find Rhea reactions involving compounds related to sterol metabolism (CHEBI:15889)\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rdfs:subClassOf rh:Reaction .\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n    ?compound rh:chebi ?chebi .\n    ?chebi rdfs:subClassOf* CHEBI:15889 . # Filter for sterol metabolism related compounds\n    OPTIONAL { ?rhea rdfs:label ?rheaLabel . } # Get Rhea reaction label\n  }\n\n  # 2. Find human enzymes in UniProt that catalyze these Rhea reactions and link to ChEMBL (drugs)\n  ?enzyme up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea . # Enzyme catalyzes the reaction\n  ?enzyme up:organism taxon:9606 . # Filter for human enzymes\n  ?enzyme rdfs:seeAlso ?drug . # Link enzyme to external resources, specifically ChEMBL\n  ?drug up:database <http://purl.uniprot.org/database/ChEMBL> . # Ensure the external resource is ChEMBL (representing drugs)\n  OPTIONAL { ?enzyme up:recommendedName/up:fullName ?enzymeName . } # Get the full name of the enzyme\n\n  # 3. Get additional information (e.g., label) for the ChEBI compounds from the IDSM/Elixir Czech ChEBI endpoint\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n    ?chebi rdfs:label ?chebiLabel . # Get the label for the ChEBI compound\n  }\n}",
    "predicted_endpoint": "Primary",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "ab5b8163-d1ae-48f5-9f50-f0e986028c41",
    "evaluation_timestamp": "2025-05-25T23:31:42.956557",
    "question_understanding_prompt_tokens": 269,
    "question_understanding_completion_tokens": 28,
    "question_understanding_total_tokens": 297,
    "planning_prompt_tokens": 6388,
    "planning_completion_tokens": 198,
    "planning_total_tokens": 6586,
    "pattern_prompt_tokens": 26204,
    "pattern_completion_tokens": 573,
    "pattern_total_tokens": 26777,
    "assembler_prompt_tokens": 5611,
    "assembler_completion_tokens": 550,
    "assembler_total_tokens": 6161,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "unknown url type: 'Primary?query=%23+Primary+endpoint%3A+https%3A//sparql.uniprot.org/sparql%0APREFIX+up%3A+%3Chttp%3A//purl.uniprot.org/core/%3E%0APREFIX+taxon%3A+%3Chttp%3A//purl.uniprot.org/taxonomy/%3E%0APREFIX+rdfs%3A+%3Chttp%3A//www.w3.org/2000/01/rdf-schema%23%3E%0APREFIX+rh%3A+%3Chttp%3A//rdf.rhea-db.org/%3E%0APREFIX+CHEBI%3A+%3Chttp%3A//purl.obolibrary.org/obo/CHEBI_%3E%0A%0ASELECT+DISTINCT+%3Fdrug+%3Fenzyme+%3FenzymeName+%3Frhea+%3FrheaLabel+%3Fchebi+%3FchebiLabel%0AWHERE+%7B%0A++%23+1.+Find+Rhea+reactions+involving+compounds+related+to+sterol+metabolism+%28CHEBI%3A15889%29%0A++SERVICE+%3Chttps%3A//sparql.rhea-db.org/sparql%3E+%7B%0A++++%3Frhea+rdfs%3AsubClassOf+rh%3AReaction+.%0A++++%3Frhea+rh%3Aside/rh%3Acontains/rh%3Acompound+%3Fcompound+.%0A++++%3Fcompound+rh%3Achebi+%3Fchebi+.%0A++++%3Fchebi+rdfs%3AsubClassOf%2A+CHEBI%3A15889+.+%23+Filter+for+sterol+metabolism+related+compounds%0A++++OPTIONAL+%7B+%3Frhea+rdfs%3Alabel+%3FrheaLabel+.+%7D+%23+Get+Rhea+reaction+label%0A++%7D%0A%0A++%23+2.+Find+human+enzymes+in+UniProt+that+catalyze+these+Rhea+reactions+and+link+to+ChEMBL+%28drugs%29%0A++%3Fenzyme+up%3Aannotation/up%3AcatalyticActivity/up%3AcatalyzedReaction+%3Frhea+.+%23+Enzyme+catalyzes+the+reaction%0A++%3Fenzyme+up%3Aorganism+taxon%3A9606+.+%23+Filter+for+human+enzymes%0A++%3Fenzyme+rdfs%3AseeAlso+%3Fdrug+.+%23+Link+enzyme+to+external+resources%2C+specifically+ChEMBL%0A++%3Fdrug+up%3Adatabase+%3Chttp%3A//purl.uniprot.org/database/ChEMBL%3E+.+%23+Ensure+the+external+resource+is+ChEMBL+%28representing+drugs%29%0A++OPTIONAL+%7B+%3Fenzyme+up%3ArecommendedName/up%3AfullName+%3FenzymeName+.+%7D+%23+Get+the+full+name+of+the+enzyme%0A%0A++%23+3.+Get+additional+information+%28e.g.%2C+label%29+for+the+ChEBI+compounds+from+the+IDSM/Elixir+Czech+ChEBI+endpoint%0A++SERVICE+%3Chttps%3A//idsm.elixir-czech.cz/sparql/endpoint/chebi%3E+%7B%0A++++%3Fchebi+rdfs%3Alabel+%3FchebiLabel+.+%23+Get+the+label+for+the+ChEBI+compound%0A++%7D%0A%7D&format=json&output=json&results=json'"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/54",
    "natural_language_question": "Proteins with binding sites for ligands similar to heme",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT \n  ?protein\n  ?mnemonic\n  ?proteinName\n  ?ligandSimilarityScore\n  ?ligand\nWHERE {\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n    ?ssc sachem:compound ?ligand; \n      sachem:score ?ligandSimilarityScore ;\n      sachem:similaritySearch ?sss .\n        # Smiles of Heme\n    ?sss    sachem:query \"CC1=C(CCC([O-])=O)C2=[N+]3C1=Cc1c(C)c(C=C)c4C=C5C(C)=C(C=C)C6=[N+]5[Fe-]3(n14)n1c(=C6)c(C)c(CCC([O-])=O)c1=C2\";\n      sachem:cutoff \"8e-1\"^^xsd:double ;\n      sachem:aromaticityMode sachem:aromaticityDetect ;\n      sachem:similarityRadius 1 ;\n      sachem:tautomerMode sachem:ignoreTautomers .\n  }\n  ?protein up:mnemonic ?mnemonic ;\n    up:recommendedName/up:fullName ?proteinName ;\n    up:annotation ?annotation .\n  ?annotation a up:Binding_Site_Annotation ;\n      up:ligand/rdfs:subClassOf ?ligand .\n}\nORDER BY DESC(?ligandSimilarityScore)",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/54_binding_sites_for_ligands_similar_to_heme_sachem.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX obo: <http://purl.obolibrary.org/obo/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT DISTINCT ?protein ?proteinName ?ligandName ?chebiId\nWHERE {\n  # UniProt: Find proteins with binding site annotations for ligands\n  ?protein up:annotation ?bindingSiteAnnotation .\n  ?bindingSiteAnnotation a up:Binding_Site_Annotation .\n  ?bindingSiteAnnotation up:ligand ?ligand .\n  ?ligand rdfs:subClassOf ?chebiId . # Get the ChEBI ID of the ligand\n  ?ligand rdfs:label ?ligandName .   # Get the name of the ligand\n\n  # Optional: Get the recommended full name of the protein for better readability\n  OPTIONAL {\n    ?protein up:recommendedName ?recName .\n    ?recName up:fullName ?proteinName .\n  }\n  \n  # Federate with the IDSM/ChEBI service to find compounds similar to Heme\n  # Heme's ChEBI ID is CHEBI:16460. The SMILES string for Heme (b) is used for similarity search.\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n    ?similarChebi sachem:similarCompoundSearch [\n      sachem:query \"C[C@H]1CCC(=C(C)C2=C1C(=C(N2)C=C3C(=C(C(=N3)C=C4C(=C(C(=N4)C=C5C(=C(C(=N5)C=C1C(=O)OC(=O)C1=C)C)C)C)C)C)C)C\" ; # Canonical SMILES for Heme (CHEBI:16460)\n      sachem:threshold \"0.8\"^^xsd:float # Tanimoto similarity threshold (adjust as needed, 0.8 is a common starting point)\n    ] .\n  }\n\n  # Join condition: The ChEBI ID of the ligand found in UniProt must be one of the compounds\n  # identified as similar to Heme by the IDSM service.\n  FILTER (?chebiId = ?similarChebi)\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "5a0ac573-fd0a-4aa9-9d15-c2aac6018482",
    "evaluation_timestamp": "2025-05-25T23:33:13.897193",
    "question_understanding_prompt_tokens": 243,
    "question_understanding_completion_tokens": 30,
    "question_understanding_total_tokens": 273,
    "planning_prompt_tokens": 5670,
    "planning_completion_tokens": 163,
    "planning_total_tokens": 5833,
    "pattern_prompt_tokens": 3725,
    "pattern_completion_tokens": 143,
    "pattern_total_tokens": 3868,
    "assembler_prompt_tokens": 3710,
    "assembler_completion_tokens": 621,
    "assembler_total_tokens": 4331,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/43",
    "natural_language_question": "Connect patents cited in UniProtKB with those in the patent database at EPO via publication number, whose grant date is more than twenty years in the past.",
    "ground_truth_query": "PREFIX patent: <http://data.epo.org/linked-data/def/patent/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?grantDate ?patent ?application ?applicationNo\nWHERE\n{\n    ?citation a up:Patent_Citation ;\n  skos:exactMatch ?patent .\n  BIND(SUBSTR(STR(?patent), 35) AS ?applicationNo)\n  BIND(SUBSTR(STR(?patent), 33, 2) AS ?countryCode)\n  SERVICE <https://data.epo.org/linked-data/query>{\n    ?publication patent:publicationNumber ?applicationNo ;\n      patent:application ?application .\n    ?application patent:grantDate ?grantDate .\n  }\n  BIND((year(now()) - 20) AS ?thisYearMinusTwenty)\n  BIND(year(?grantDate) AS ?grantYear)\n  FILTER(?grantYear < ?thisYearMinusTwenty)\n} ORDER BY ?grantYear",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://data.epo.org/linked-data/query"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/43_patents_used_in_uniprot_granted_twenty_years_in_the_past.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX patent: <http://data.epo.org/linked-data/def/patent/>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT DISTINCT ?citation ?patent_uri_uniprot ?publicationNumber ?patent_epo ?grantDate\nWHERE {\n  # Part 1: Retrieve patent citations from UniProtKB\n  # ?citation represents the UniProtKB patent citation entity\n  # ?patent_uri_uniprot is the URI of the patent as linked by UniProtKB, which should be an EPO patent URI\n  ?citation a up:Patent_Citation ;\n            skos:exactMatch ?patent_uri_uniprot .\n\n  # Filter to ensure we are dealing with EPO patents and extract their publication number\n  # The example query suggests EPO patent URIs start with 'http://data.epo.org/linked-data/patent/EP'\n  # The SUBSTR function extracts the publication number from the URI, assuming the base URI is 34 characters long.\n  FILTER(CONTAINS(STR(?patent_uri_uniprot), 'http://data.epo.org/linked-data/patent/EP'))\n  BIND(SUBSTR(STR(?patent_uri_uniprot), 35) AS ?publicationNumber)\n\n  # Part 2: Federate with the EPO patent database to get patent details and filter by grant date\n  SERVICE <https://data.epo.org/linked-data/query> {\n    # ?patent_epo represents the patent entity in the EPO database\n    # Join with UniProtKB results using ?publicationNumber\n    ?patent_epo patent:publicationNumber ?publicationNumber ;\n                patent:grantDate ?grantDate .\n\n    # Calculate the date twenty years ago from today\n    BIND((NOW() - \"P20Y\"^^xsd:duration) AS ?twentyYearsAgo)\n\n    # Filter for patents whose grant date is more than twenty years in the past\n    FILTER (?grantDate < ?twentyYearsAgo)\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "24ec10f7-3311-44a4-a608-e494ba48a179",
    "evaluation_timestamp": "2025-05-25T23:33:54.327744",
    "question_understanding_prompt_tokens": 269,
    "question_understanding_completion_tokens": 47,
    "question_understanding_total_tokens": 316,
    "planning_prompt_tokens": 4535,
    "planning_completion_tokens": 182,
    "planning_total_tokens": 4717,
    "pattern_prompt_tokens": 0,
    "pattern_completion_tokens": 0,
    "pattern_total_tokens": 0,
    "assembler_prompt_tokens": 2778,
    "assembler_completion_tokens": 0,
    "assembler_total_tokens": 2778,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/45",
    "natural_language_question": "Retrieve drugs that target human enzymes involved in sterol metabolism (federated query with WikiData and Rhea).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX chebihash: <http://purl.obolibrary.org/obo/chebi#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n\nSELECT DISTINCT ?protein ?proteinFullName ?wikiChemical ?wikiChemicalLabel ?medicalConditionTreatedLabel\nWHERE {\n  # ChEBI: retrieve members of the ChEBI class ChEBI:15889 (sterol)\n  # Rhea: retrieve the reactions involving these ChEBI as participants\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf rh:Reaction ;\n      rh:status rh:Approved ;\n      rh:side ?reactionSide .\n    ?reactionSide\n      rh:contains ?participant .\n    ?participant rh:compound ?compound\n    {\n      ?compound rh:chebi ?chebi .\n      ?chebi (rdfs:subClassOf)+ CHEBI:15889\n    } UNION {\n      ?compound rh:chebi ?chebi .\n      ?chebi2 rdfs:subClassOf ?chebiRestriction .\n      ?chebiRestriction\n\t\ta owl:Restriction ;\n\t\towl:onProperty chebihash:has_major_microspecies_at_pH_7_3 ;\n\t\towl:someValuesFrom ?chebi .\n      ?chebi2 (rdfs:subClassOf)+ CHEBI:15889\n    }\n  }\n  # UniProt: retrieve the human (taxid:9606) enzymes catalyzing these Rhea reactions\n  ?ca up:catalyzedReaction  ?reaction .\n  ?a up:catalyticActivity  ?ca .\n  ?proteinIRI  up:annotation ?a ;\n    up:organism taxon:9606 ;\n    up:recommendedName ?proteinRecName .\n  ?proteinRecName up:fullName ?proteinFullName .\n  # Find drugs in wikidata that interact with the UniProt Proteins\n  BIND (SUBSTR(STR(?proteinIRI), STRLEN(STR(uniprotkb:))+1) AS ?protein)\n  SERVICE <https://query.wikidata.org/sparql> {\n    ?wp wdt:P352  ?protein .\n    ?wikiChemical wdt:P129 ?wp . # Physically interacts with\n    ?wikiChemical rdfs:label ?wikiChemicalLabel .\n    ?wikiChemical wdt:P2175 ?wmc . # Medical conndition treated\n    ?wmc rdfs:label ?medicalConditionTreatedLabel .\n    FILTER(lang(?medicalConditionTreatedLabel) = 'en')\n    FILTER(lang(?wikiChemicalLabel) = 'en')\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://query.wikidata.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/45_drugs_targeting_human_sterol_metabolism_enzymes.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wd: <http://www.wikidata.org/entity/>\n\nSELECT DISTINCT ?drug ?drugName ?protein ?proteinName ?reaction ?chebi\nWHERE {\n  # UniProt: Find human enzymes\n  ?protein up:organism taxon:9606 . # Filter for human proteins\n  ?protein up:annotation ?a .\n  ?a a up:Catalytic_Activity_Annotation .\n  ?a up:catalyticActivity ?ca .\n  ?ca up:catalyzedReaction ?reaction . # Link protein to reaction\n  OPTIONAL { ?protein up:recommendedName/up:fullName ?proteinName . } # Get protein recommended name\n\n  # Rhea: Identify reactions involved in sterol metabolism\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf rh:Reaction . # Ensure it's a Rhea reaction\n    ?reaction rh:side/rh:contains/rh:compound ?compound . # Get compounds involved in the reaction\n    ?compound rh:chebi ?chebi . # Get ChEBI ID for the compound\n    ?chebi rdfs:subClassOf* CHEBI:15889 . # Filter for compounds that are sterols or subclasses of sterols\n  }\n\n  # Wikidata: Find drugs targeting these enzymes\n  SERVICE <https://query.wikidata.org/sparql> {\n    ?drug wdt:P129 ?target . # ?drug targets ?target\n    ?target wdt:P352 ?uniprotIdString . # ?target has UniProt ID as a string literal\n    \n    # Convert the UniProt ID string from Wikidata into a UniProt URI to join with ?protein in UniProt\n    BIND(IRI(CONCAT(\"http://purl.uniprot.org/uniprot/\", ?uniprotIdString)) AS ?protein)\n    \n    OPTIONAL { ?drug rdfs:label ?drugName FILTER (lang(?drugName) = \"en\") . } # Get drug name in English\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "9fb58e37-f041-4eea-af6f-ca77e3a1693c",
    "evaluation_timestamp": "2025-05-25T23:35:24.664614",
    "question_understanding_prompt_tokens": 260,
    "question_understanding_completion_tokens": 33,
    "question_understanding_total_tokens": 293,
    "planning_prompt_tokens": 7459,
    "planning_completion_tokens": 223,
    "planning_total_tokens": 7682,
    "pattern_prompt_tokens": 15439,
    "pattern_completion_tokens": 386,
    "pattern_total_tokens": 15825,
    "assembler_prompt_tokens": 5080,
    "assembler_completion_tokens": 595,
    "assembler_total_tokens": 5675,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/42",
    "natural_language_question": "Connect patents cited in UniProtKB with those in the patent database at EPO via publication number.",
    "ground_truth_query": "PREFIX patent: <http://data.epo.org/linked-data/def/patent/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?citation ?patent ?application ?applicationNo\nWHERE\n{\n  ?citation a up:Patent_Citation ;\n    skos:exactMatch ?patent .\n  FILTER(CONTAINS(STR(?patent), 'EP'))\n  BIND(SUBSTR(STR(?patent), 35) AS ?applicationNo)\n  SERVICE <https://data.epo.org/linked-data/query>{\n    ?application patent:publicationNumber ?applicationNo\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://data.epo.org/linked-data/query"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/42_connect_patents_to_epo.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX patent: <http://data.epo.org/linked-data/def/patent/>\n\nSELECT ?uniprotCitation ?uniprotPatentIRI ?extractedPublicationNumber ?epoPatentPublication\nWHERE {\n  # UniProtKB part: Find patent citations and extract the publication number from the linked EPO patent IRI.\n  # The skos:exactMatch property links to an EPO patent IRI (e.g., http://data.epo.org/linked-data/def/patent/EP1234567A1).\n  # The SUBSTR function extracts the publication number (e.g., \"EP1234567A1\") from this IRI,\n  # assuming the base URI \"http://data.epo.org/linked-data/def/patent/\" is 34 characters long,\n  # so the publication number starts at the 35th character.\n  ?uniprotCitation a up:Patent_Citation .\n  ?uniprotCitation skos:exactMatch ?uniprotPatentIRI .\n  BIND(SUBSTR(STR(?uniprotPatentIRI), 35) AS ?extractedPublicationNumber) .\n\n  # EPO part: Connect to the EPO patent database using the extracted publication number.\n  # This SERVICE block queries the EPO endpoint and uses the ?extractedPublicationNumber\n  # to find matching patent publications.\n  SERVICE <https://data.epo.org/linked-data/query> {\n    ?epoPatentPublication a patent:Publication ;\n                          patent:publicationNumber ?extractedPublicationNumber .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "8717d529-2466-49d4-8a17-86963a1d9c56",
    "evaluation_timestamp": "2025-05-25T23:37:10.457970",
    "question_understanding_prompt_tokens": 256,
    "question_understanding_completion_tokens": 35,
    "question_understanding_total_tokens": 291,
    "planning_prompt_tokens": 4936,
    "planning_completion_tokens": 132,
    "planning_total_tokens": 5068,
    "pattern_prompt_tokens": 11329,
    "pattern_completion_tokens": 270,
    "pattern_total_tokens": 11599,
    "assembler_prompt_tokens": 3746,
    "assembler_completion_tokens": 411,
    "assembler_total_tokens": 4157,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/67_draft_human_metabolome",
    "natural_language_question": "Generate a draft human metabolome",
    "ground_truth_query": "PREFIX chebislash: <http://purl.obolibrary.org/obo/chebi/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n?uniprot ?mnemonic ?rhea ?chebi ?smiles ?inchiKey\nWHERE\n{\n  ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea ;\n        up:organism taxon:9606 ;\n        up:mnemonic ?mnemonic .\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n\t?rhea rh:side/rh:contains/rh:compound ?compound .\n    ?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?chebi .\n   }\n   ?chebi chebislash:smiles ?smiles ;\n          chebislash:inchikey ?inchiKey .\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/67_draft_human_metabolome.ttl",
    "predicted_query": "# Primary endpoint: https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?protein ?proteinName ?rheaReaction ?chebi ?chebiLabel\nWHERE {\n  # UniProt patterns: Identify human, reviewed proteins and the Rhea reactions they catalyze.\n  ?protein a up:Protein .\n  ?protein up:reviewed true .\n  ?protein up:organism taxon:9606 . # Filter for human proteins (taxonomy ID 9606)\n\n  # Link protein to its catalytic activity and the catalyzed Rhea reaction\n  ?protein up:annotation ?annotation .\n  ?annotation a up:Catalytic_Activity_Annotation .\n  ?annotation up:catalyticActivity ?catalyticActivity .\n  ?catalyticActivity up:catalyzedReaction ?rheaReaction . # This variable serves as the join key with Rhea\n\n  # Get the full name of the protein\n  ?protein up:recommendedName ?recName .\n  ?recName up:fullName ?proteinName .\n\n  # Federated query to Rhea-DB: Retrieve details about the reactions and their associated metabolites (CHEBI compounds).\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rheaReaction rdfs:subClassOf rh:Reaction . # Ensure it's a Rhea reaction\n    ?rheaReaction rh:status rh:Approved .       # Only consider approved Rhea reactions\n\n    # Traverse the reaction graph to find participating compounds\n    ?rheaReaction rh:side ?reactionSide .\n    ?reactionSide rh:contains ?participant .\n    ?participant rh:compound ?compound .\n\n    # Get the CHEBI identifier for the compound\n    ?compound rh:chebi ?chebi .\n\n    # Get the human-readable label for the CHEBI compound\n    ?chebi rdfs:label ?chebiLabel .\n  }\n}",
    "predicted_endpoint": "Primary",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "9373d6f7-3a6e-4230-bbba-b65352ec63da",
    "evaluation_timestamp": "2025-05-25T23:38:18.122917",
    "question_understanding_prompt_tokens": 245,
    "question_understanding_completion_tokens": 22,
    "question_understanding_total_tokens": 267,
    "planning_prompt_tokens": 5596,
    "planning_completion_tokens": 124,
    "planning_total_tokens": 5720,
    "pattern_prompt_tokens": 20078,
    "pattern_completion_tokens": 666,
    "pattern_total_tokens": 20744,
    "assembler_prompt_tokens": 5187,
    "assembler_completion_tokens": 513,
    "assembler_total_tokens": 5700,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "unknown url type: 'Primary?query=%23+Primary+endpoint%3A+https%3A//sparql.uniprot.org/sparql%0APREFIX+up%3A+%3Chttp%3A//purl.uniprot.org/core/%3E%0APREFIX+taxon%3A+%3Chttp%3A//purl.uniprot.org/taxonomy/%3E%0APREFIX+rh%3A+%3Chttp%3A//rdf.rhea-db.org/%3E%0APREFIX+rdfs%3A+%3Chttp%3A//www.w3.org/2000/01/rdf-schema%23%3E%0APREFIX+CHEBI%3A+%3Chttp%3A//purl.obolibrary.org/obo/CHEBI_%3E%0A%0ASELECT+DISTINCT+%3Fprotein+%3FproteinName+%3FrheaReaction+%3Fchebi+%3FchebiLabel%0AWHERE+%7B%0A++%23+UniProt+patterns%3A+Identify+human%2C+reviewed+proteins+and+the+Rhea+reactions+they+catalyze.%0A++%3Fprotein+a+up%3AProtein+.%0A++%3Fprotein+up%3Areviewed+true+.%0A++%3Fprotein+up%3Aorganism+taxon%3A9606+.+%23+Filter+for+human+proteins+%28taxonomy+ID+9606%29%0A%0A++%23+Link+protein+to+its+catalytic+activity+and+the+catalyzed+Rhea+reaction%0A++%3Fprotein+up%3Aannotation+%3Fannotation+.%0A++%3Fannotation+a+up%3ACatalytic_Activity_Annotation+.%0A++%3Fannotation+up%3AcatalyticActivity+%3FcatalyticActivity+.%0A++%3FcatalyticActivity+up%3AcatalyzedReaction+%3FrheaReaction+.+%23+This+variable+serves+as+the+join+key+with+Rhea%0A%0A++%23+Get+the+full+name+of+the+protein%0A++%3Fprotein+up%3ArecommendedName+%3FrecName+.%0A++%3FrecName+up%3AfullName+%3FproteinName+.%0A%0A++%23+Federated+query+to+Rhea-DB%3A+Retrieve+details+about+the+reactions+and+their+associated+metabolites+%28CHEBI+compounds%29.%0A++SERVICE+%3Chttps%3A//sparql.rhea-db.org/sparql%3E+%7B%0A++++%3FrheaReaction+rdfs%3AsubClassOf+rh%3AReaction+.+%23+Ensure+it%27s+a+Rhea+reaction%0A++++%3FrheaReaction+rh%3Astatus+rh%3AApproved+.+++++++%23+Only+consider+approved+Rhea+reactions%0A%0A++++%23+Traverse+the+reaction+graph+to+find+participating+compounds%0A++++%3FrheaReaction+rh%3Aside+%3FreactionSide+.%0A++++%3FreactionSide+rh%3Acontains+%3Fparticipant+.%0A++++%3Fparticipant+rh%3Acompound+%3Fcompound+.%0A%0A++++%23+Get+the+CHEBI+identifier+for+the+compound%0A++++%3Fcompound+rh%3Achebi+%3Fchebi+.%0A%0A++++%23+Get+the+human-readable+label+for+the+CHEBI+compound%0A++++%3Fchebi+rdfs%3Alabel+%3FchebiLabel+.%0A++%7D%0A%7D&format=json&output=json&results=json'"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/36",
    "natural_language_question": "Find the orthologous proteins for UniProtKB entry P05067 using the <a href=\"http://www.orthod.org\">OrthoDB database</a>",
    "ground_truth_query": "PREFIX orthodb: <http://purl.orthodb.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  ?protein\n  ?orthoGroup\n  ?scientificName\n  ?functionComment\n  ?prefferedGeneName\n  ((STRLEN(?value) - ?medianLength) as ?deviationFromMedianLength)\nWHERE\n{\n  uniprotkb:P05067 a up:Protein ;\n        up:organism/up:scientificName ?scientificName ;\n        rdfs:seeAlso ?orthoGroup ;\n        up:encodedBy/skos:prefLabel ?prefferedGeneName ;\n          up:sequence/rdf:value ?value .\n  OPTIONAL {\n    ?protein up:annotation ?functionAnnotation .\n    ?functionAnnotation a up:Function_Annotation ;\n      rdfs:comment ?functionComment .\n  }\n  SERVICE <https://sparql.orthodb.org/sparql>{\n    ?orthoGroup orthodb:ogMedianProteinLength ?medianLength .\n    ?orthoGroup orthodb:hasMember ?xref .\n    ?xref orthodb:xref/orthodb:xrefResource uniprotkb:P05067 .\n  }\n}\nLIMIT 985915",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.orthodb.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/36_orthologous_proteins_via_orthodb.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT DISTINCT ?orthologousProtein ?orthoDBIdentifier\nWHERE {\n  # Define the target UniProtKB entry\n  BIND(uniprotkb:P05067 AS ?targetProtein)\n\n  # Get the OrthoDB group identifier for the target protein\n  ?targetProtein up:dbReference ?targetOrthoDBRef .\n  ?targetOrthoDBRef up:database <http://purl.uniprot.org/database/OrthoDB> .\n  ?targetOrthoDBRef rdfs:label ?orthoDBIdentifier . # This is the OrthoDB group ID (e.g., EOG0936000001)\n\n  # Find other UniProt proteins that belong to the same OrthoDB group\n  ?orthologousProtein up:dbReference ?orthologousOrthoDBRef .\n  ?orthologousOrthoDBRef up:database <http://purl.uniprot.org/database/OrthoDB> .\n  ?orthologousOrthoDBRef rdfs:label ?orthoDBIdentifier . # Match the same OrthoDB group ID\n\n  # Exclude the target protein itself from the list of orthologous proteins\n  FILTER (?orthologousProtein != ?targetProtein)\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "d0fa40da-e89b-47ab-bd54-da1e8ef6f02c",
    "evaluation_timestamp": "2025-05-25T23:39:44.449747",
    "question_understanding_prompt_tokens": 272,
    "question_understanding_completion_tokens": 44,
    "question_understanding_total_tokens": 316,
    "planning_prompt_tokens": 4917,
    "planning_completion_tokens": 93,
    "planning_total_tokens": 5010,
    "pattern_prompt_tokens": 5739,
    "pattern_completion_tokens": 317,
    "pattern_total_tokens": 6056,
    "assembler_prompt_tokens": 2910,
    "assembler_completion_tokens": 361,
    "assembler_total_tokens": 3271,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/60",
    "natural_language_question": "Find human proteins that catalyze reactions where substrates or product have a <a href=\"https://www.ebi.ac.uk/chebi/searchId.do?chebiId=CHEBI:35516\">Cholestane skeleton</a>",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  DISTINCT\n    ?protein\n    ?disease\n    ?rhea\n    ?chebi\n    ?omim\nWHERE {\n    # Find complete ChEBIs with a Cholestane skeleton, via the Czech Elixir node IDSM Sachem chemical substructure search.\n    SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n      ?chebi sachem:substructureSearch [\n        sachem:query\n\"[C@]12(CCC3CCCC[C@]3(C)[C@@]1([H])CC[C@]1(C)[C@@]([H])([C@@](C)([H])CCCC(C)C)CC[C@@]21[H])[H]\"\n].\n   }\n   # Use the fact that UniProt catalytic activities are annotated using Rhea \n   # Mapping the found ChEBIs to Rhea reactions\n   SERVICE <https://sparql.rhea-db.org/sparql>{\n     ?rhea rh:side/rh:contains/rh:compound/rdfs:subClassOf ?chebi .\n   }\n   # Match the found Rhea reactions with human UniProtKB proteins\n   ?protein up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n   ?protein up:organism taxon:9606 .\n   # Find only those human entries that have an annotated related disease, and optionaly map these to OMIM\n   ?protein up:annotation/up:disease ?disease .\n   OPTIONAL {\n     ?disease rdfs:seeAlso ?omim .\n     ?omim up:database <http://purl.uniprot.org/database/MIM>\n   }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/60_enzymes_working_on_substrate_with_Cholestene_backbone.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\n\nSELECT DISTINCT ?protein ?rhea ?chebi\nWHERE {\n  # Find human proteins\n  ?protein up:organism taxon:9606 .\n\n  # Find reactions catalyzed by these proteins\n  ?protein up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n\n  # Federate with Rhea to find reactions involving compounds with the Cholestane skeleton\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    # Link Rhea reaction to its participating compounds and their ChEBI identifiers\n    ?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n\n    # Filter for ChEBI identifiers that are the Cholestane skeleton (CHEBI:35516)\n    # or any of its subclasses or equivalent classes.\n    ?chebi (rdfs:subClassOf|owl:equivalentClass)* CHEBI:35516 .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "d273dba3-ce18-43a2-af93-b0d76739b050",
    "evaluation_timestamp": "2025-05-25T23:41:01.348057",
    "question_understanding_prompt_tokens": 292,
    "question_understanding_completion_tokens": 38,
    "question_understanding_total_tokens": 330,
    "planning_prompt_tokens": 9922,
    "planning_completion_tokens": 140,
    "planning_total_tokens": 10062,
    "pattern_prompt_tokens": 29078,
    "pattern_completion_tokens": 220,
    "pattern_total_tokens": 29298,
    "assembler_prompt_tokens": 7140,
    "assembler_completion_tokens": 361,
    "assembler_total_tokens": 7501,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/70_enzymes_interacting_with_molecules_similar_to_dopamine",
    "natural_language_question": "Look for enzymes catalyzing reactions with molecules similar to dopamine.",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  ?protein\n  ?rhea\n  ?chebi\nWHERE {\n  # Use the smiles of dopamine CHEBI:18243\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi>{\n    ?chebi sachem:similarCompoundSearch [\n      sachem:query \"NCCc1ccc(O)c(O)c1\" ] .\n  }\n  GRAPH<https://sparql.rhea-db.org/rhea>{\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n    ?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?chebi .\n  }\n  ?protein up:reviewed true ;\n    up:annotation ?caa .\n  ?caa up:catalyticActivity/up:catalyzedReaction ?rhea .\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/70_enzymes_interacting_with_molecules_similar_to_dopamine.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\n\nSELECT DISTINCT ?protein ?rhea ?chebi\nWHERE {\n  # Step 1: Find molecules similar to dopamine (CHEBI:18243) using the IDSM Elixir Czech endpoint for chemical similarity search.\n  # The SMILES \"NCCc1ccc(O)c(O)c1\" corresponds to dopamine.\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n    ?chebi sachem:similarCompoundSearch [\n      sachem:query \"NCCc1ccc(O)c(O)c1\" ] .\n  }\n\n  # Step 2: Find Rhea reactions that involve these similar molecules.\n  # This block federates with the Rhea-DB endpoint.\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n    ?compound (rh:chebi | rh:reactivePart/rh:chebi | rh:underlyingChebi/rh:chebi) ?chebi .\n  }\n\n  # Step 3: Find proteins (enzymes) in UniProt that catalyze these Rhea reactions.\n  # This part runs on the primary UniProt endpoint.\n  ?protein up:annotation ?annotation .\n  ?annotation up:catalyticActivity ?catalyticActivity .\n  ?catalyticActivity up:catalyzedReaction ?rhea .\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "b0d738cb-cde1-4153-8cd0-ab23f997d6f6",
    "evaluation_timestamp": "2025-05-25T23:42:01.766860",
    "question_understanding_prompt_tokens": 249,
    "question_understanding_completion_tokens": 26,
    "question_understanding_total_tokens": 275,
    "planning_prompt_tokens": 6002,
    "planning_completion_tokens": 114,
    "planning_total_tokens": 6116,
    "pattern_prompt_tokens": 13033,
    "pattern_completion_tokens": 334,
    "pattern_total_tokens": 13367,
    "assembler_prompt_tokens": 4292,
    "assembler_completion_tokens": 403,
    "assembler_total_tokens": 4695,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.054502160684363705,
    "result_eval_precision": 0.02801450589301904,
    "result_eval_recall": 1.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/38",
    "natural_language_question": "For the human entry P05067 (Amyloid-beta precursor protein) find the gene start ends in WikiData",
    "ground_truth_query": "PREFIX p: <http://www.wikidata.org/prop/>\nPREFIX pq: <http://www.wikidata.org/prop/qualifier/>\nPREFIX ps: <http://www.wikidata.org/prop/statement/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n\n\nSELECT \n\t?protein \n\t?begin\n\t?end\n\t?chromosome\n\t?assembly\nWHERE {\n    {\n        BIND(uniprotkb:P05067 AS ?proteinIRI)\n        BIND (SUBSTR(STR(?proteinIRI), STRLEN(STR(uniprotkb:))+1) AS ?protein)\n    }\n    SERVICE <https://query.wikidata.org/sparql> {\n        ?wp wdt:P352 ?protein ;\n            wdt:P702 ?wg . \n        ?wg p:P644   ?wgss .\n        ?wgss ps:P644        ?begin ;\n          pq:P1057/wdt:P1813 ?chromosome ;\n          pq:P659/rdfs:label ?assembly .\n        ?wg p:P645 ?wgse .\n        ?wgse ps:P645        ?end ;\n          pq:P1057/wdt:P1813 ?chromosome ;\n          pq:P659/rdfs:label ?assembly .\n        FILTER(lang(?assembly) = \"en\")\n  } \n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://query.wikidata.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/38_find_gene_region_in_wikidata_for_known_entry.ttl",
    "predicted_query": "# Primary endpoint: https://sparql.uniprot.org/sparql\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n\nSELECT ?geneStart ?geneEnd\nWHERE {\n  # Start at UniProt to find the gene associated with the protein P05067\n  uniprotkb:P05067 up:encodedBy ?gene .\n\n  # Find the WikiData cross-reference for this gene\n  ?gene rdfs:seeAlso ?wikidataGeneID .\n\n  # Ensure the cross-reference is indeed a WikiData entity URI\n  FILTER(STRSTARTS(STR(?wikidataGeneID), \"http://www.wikidata.org/entity/\"))\n\n  # Federate to WikiData to find the gene start and end positions\n  SERVICE <https://query.wikidata.org/sparql> {\n    ?wikidataGeneID wdt:P644 ?geneStart . # P644 is 'genomic start' in WikiData\n    ?wikidataGeneID wdt:P645 ?geneEnd .   # P645 is 'genomic end' in WikiData\n  }\n}",
    "predicted_endpoint": "Primary",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "f5003cc0-551b-415d-8469-6f0d19439f50",
    "evaluation_timestamp": "2025-05-25T23:43:09.768910",
    "question_understanding_prompt_tokens": 267,
    "question_understanding_completion_tokens": 52,
    "question_understanding_total_tokens": 319,
    "planning_prompt_tokens": 5354,
    "planning_completion_tokens": 98,
    "planning_total_tokens": 5452,
    "pattern_prompt_tokens": 7352,
    "pattern_completion_tokens": 297,
    "pattern_total_tokens": 7649,
    "assembler_prompt_tokens": 3707,
    "assembler_completion_tokens": 328,
    "assembler_total_tokens": 4035,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "unknown url type: 'Primary?query=%23+Primary+endpoint%3A+https%3A//sparql.uniprot.org/sparql%0APREFIX+uniprotkb%3A+%3Chttp%3A//purl.uniprot.org/uniprot/%3E%0APREFIX+up%3A+%3Chttp%3A//purl.uniprot.org/core/%3E%0APREFIX+rdfs%3A+%3Chttp%3A//www.w3.org/2000/01/rdf-schema%23%3E%0APREFIX+wdt%3A+%3Chttp%3A//www.wikidata.org/prop/direct/%3E%0A%0ASELECT+%3FgeneStart+%3FgeneEnd%0AWHERE+%7B%0A++%23+Start+at+UniProt+to+find+the+gene+associated+with+the+protein+P05067%0A++uniprotkb%3AP05067+up%3AencodedBy+%3Fgene+.%0A%0A++%23+Find+the+WikiData+cross-reference+for+this+gene%0A++%3Fgene+rdfs%3AseeAlso+%3FwikidataGeneID+.%0A%0A++%23+Ensure+the+cross-reference+is+indeed+a+WikiData+entity+URI%0A++FILTER%28STRSTARTS%28STR%28%3FwikidataGeneID%29%2C+%22http%3A//www.wikidata.org/entity/%22%29%29%0A%0A++%23+Federate+to+WikiData+to+find+the+gene+start+and+end+positions%0A++SERVICE+%3Chttps%3A//query.wikidata.org/sparql%3E+%7B%0A++++%3FwikidataGeneID+wdt%3AP644+%3FgeneStart+.+%23+P644+is+%27genomic+start%27+in+WikiData%0A++++%3FwikidataGeneID+wdt%3AP645+%3FgeneEnd+.+++%23+P645+is+%27genomic+end%27+in+WikiData%0A++%7D%0A%7D&format=json&output=json&results=json'"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/117_biosodafrontend_glioblastoma_orthologs_rat",
    "natural_language_question": "Which are the proteins associated with glioblastoma and the orthologs expressed in the rat brain?",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX obo: <http://purl.obolibrary.org/obo/>\nPREFIX orth: <http://purl.org/net/orth#>\nPREFIX sio: <http://semanticscience.org/resource/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX genex: <http://purl.org/genex#>\nSELECT DISTINCT ?protein ?orthologous_protein ?gene ?annotation_text WHERE {\n  {\n  \tSELECT ?protein ?annotation_text WHERE {\n      ?protein a up:Protein ;\n          up:organism taxon:9606 ;\n          up:annotation ?annotation .\n      ?annotation rdfs:comment ?annotation_text .\n      ?annotation a up:Disease_Annotation .\n      FILTER CONTAINS (?annotation_text, \"glioblastoma\")\n    }\n  }\n  SERVICE <https://sparql.omabrowser.org/sparql/> {\n    SELECT ?orthologous_protein ?protein ?gene WHERE {\n    ?protein_OMA a orth:Protein .\n    ?orthologous_protein a orth:Protein .\n    ?cluster a orth:OrthologsCluster .\n    ?cluster orth:hasHomologousMember ?node1 .\n    ?cluster\n    orth:hasHomologousMember ?node2 .\n    ?node2 orth:hasHomologousMember* ?protein_OMA .\n    ?node1 orth:hasHomologousMember* ?orthologous_protein .\n    ?orthologous_protein orth:organism/obo:RO_0002162 taxon:10116 . # rattus norvegicus\n    ?orthologous_protein sio:SIO_010079 ?gene .\n    ?protein_OMA lscr:xrefUniprot ?protein .\n    FILTER(?node1 != ?node2)\n\t\t}\n\t}\n  SERVICE <https://www.bgee.org/sparql/> {\n    ?gene genex:isExpressedIn ?a .\n    ?a rdfs:label \"brain\" .\n    ?gene orth:organism ?s . \n    ?s obo:RO_0002162 taxon:10116.\n\t}\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql",
    "federates_with": [
      "https://sparql.omabrowser.org/sparql/",
      "https://www.bgee.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/117_biosodafrontend_glioblastoma_orthologs_rat.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?protein ?proteinName ?ratProtein ?ratProteinName\nWHERE {\n  # Find proteins associated with glioblastoma\n  ?protein up:annotation ?diseaseAnnotation .\n  ?diseaseAnnotation up:disease <http://purl.uniprot.org/diseases/2566> . # Glioblastoma\n\n  # Get the recommended name for the human protein (optional)\n  OPTIONAL {\n    ?protein up:recommendedName/up:fullName ?proteinName .\n  }\n\n  # Find orthologs of these proteins\n  ?protein up:ortholog ?ratProtein .\n\n  # Ensure the ortholog is from rat (Rattus norvegicus)\n  ?ratProtein up:organism <http://purl.uniprot.org/taxonomy/10116> . # Rat taxonomy ID\n\n  # Ensure the rat ortholog is expressed in the brain\n  ?ratProtein up:annotation ?expressionAnnotation .\n  ?expressionAnnotation a up:Expression_Annotation .\n  ?expressionAnnotation up:tissue <http://purl.uniprot.org/tissue/1000000> . # Brain tissue ID\n\n  # Get the recommended name for the rat protein (optional)\n  OPTIONAL {\n    ?ratProtein up:recommendedName/up:fullName ?ratProteinName .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "2c8d211a-bd5d-4432-a3d2-8a5373283e50",
    "evaluation_timestamp": "2025-05-25T23:44:01.479226",
    "question_understanding_prompt_tokens": 258,
    "question_understanding_completion_tokens": 40,
    "question_understanding_total_tokens": 298,
    "planning_prompt_tokens": 6025,
    "planning_completion_tokens": 176,
    "planning_total_tokens": 6201,
    "pattern_prompt_tokens": 4163,
    "pattern_completion_tokens": 70,
    "pattern_total_tokens": 4233,
    "assembler_prompt_tokens": 3666,
    "assembler_completion_tokens": 0,
    "assembler_total_tokens": 3666,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/116_biosodafrontend_rabit_mouse_orthologs",
    "natural_language_question": "Rabbit's proteins encoded by genes that are orthologous to Mouse's HBB-Y gene and their cross reference links to Uniprot",
    "ground_truth_query": "PREFIX lscr: <http://purl.org/lscr#>\nPREFIX orth: <http://purl.org/net/orth#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX obo: <http://purl.obolibrary.org/obo/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?PROTEIN_1 ?PROTEIN_2 ?UNIPROT_XREF_1 ?UNIPROT_XREF_2 WHERE {\n\t?taxon_1 up:commonName 'Mouse' .\n\t?taxon_2 up:commonName 'Rabbit' .\n\tSERVICE <https://sparql.omabrowser.org/sparql/> {\n\t\t?cluster a orth:OrthologsCluster .\n\t\t?cluster orth:hasHomologousMember ?node1 .\n\t\t?cluster orth:hasHomologousMember ?node2 .\n\t\t?node2 orth:hasHomologousMember* ?PROTEIN_2 .\n\t\t?node1 orth:hasHomologousMember* ?PROTEIN_1 .\n\t\t?PROTEIN_1 a orth:Protein .\n\t\t?PROTEIN_1 orth:organism/obo:RO_0002162 ?taxon_1 ;\n\t\t\trdfs:label 'HBB-Y' ;\n\t\t\tlscr:xrefUniprot ?UNIPROT_XREF_1 .\n\t\t?PROTEIN_2 a orth:Protein .\n\t\t?PROTEIN_2 orth:organism/obo:RO_0002162 ?taxon_2 .\n\t\t?PROTEIN_2 lscr:xrefUniprot ?UNIPROT_XREF_2 .\n\t\tFILTER ( ?node1 != ?node2 )\n\t}\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql",
    "federates_with": [
      "https://sparql.omabrowser.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/116_biosodafrontend_rabit_mouse_orthologs.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX orthodb: <http://purl.orthodb.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT DISTINCT ?rabbitProtein ?rabbitProteinName ?rabbitGene ?rabbitGeneName ?orthoGroup ?mouseProtein ?mouseGene ?mouseGeneName\nWHERE {\n  # 1. Identify the Mouse HBB-Y protein and its associated gene in UniProt.\n  # Based on the failed patterns and common knowledge, uniprotkb:P02090 (Hemoglobin subunit beta-2)\n  # is a likely candidate for \"Mouse's HBB-Y gene\".\n  VALUES ?mouseProtein { uniprotkb:P02090 }\n\n  ?mouseProtein a up:Protein ;\n                up:organism taxon:10090 ; # Mouse organism\n                up:encodedBy ?mouseGene .\n  ?mouseGene skos:prefLabel ?mouseGeneName .\n  OPTIONAL {\n    ?mouseProtein up:recommendedName/up:fullName ?mouseProteinName .\n  }\n\n  # 2. Federate to OrthoDB to find orthologous proteins in Rabbit.\n  SERVICE <https://sparql.orthodb.org/sparql> {\n    # Find the orthogroup that contains the identified Mouse protein.\n    ?orthoGroup orthodb:hasMember ?mouseMember .\n    ?mouseMember orthodb:xref/orthodb:xrefResource ?mouseProtein . # Join variable: links OrthoDB member to UniProt protein\n    ?mouseMember orthodb:inTaxon taxon:10090 . # Ensure this member is from Mouse\n\n    # Find members within the same orthogroup that are from Rabbit.\n    ?orthoGroup orthodb:hasMember ?rabbitMember .\n    ?rabbitMember orthodb:xref/orthodb:xrefResource ?rabbitProtein . # This will be the UniProt ID for the rabbit protein\n    ?rabbitMember orthodb:inTaxon taxon:9986 . # Rabbit organism\n  }\n\n  # 3. Retrieve details for the Rabbit proteins from UniProt (host endpoint).\n  # Ensure the found rabbit protein is indeed from Rabbit and get its gene and name.\n  ?rabbitProtein a up:Protein ;\n                 up:organism taxon:9986 ; # Confirm it's a Rabbit protein\n                 up:encodedBy ?rabbitGene .\n  ?rabbitGene skos:prefLabel ?rabbitGeneName .\n  OPTIONAL {\n    ?rabbitProtein up:recommendedName/up:fullName ?rabbitProteinName .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "f6a3351e-adb0-4fc3-ae8d-ce21a8ce15de",
    "evaluation_timestamp": "2025-05-25T23:46:03.645636",
    "question_understanding_prompt_tokens": 268,
    "question_understanding_completion_tokens": 49,
    "question_understanding_total_tokens": 317,
    "planning_prompt_tokens": 6017,
    "planning_completion_tokens": 160,
    "planning_total_tokens": 6177,
    "pattern_prompt_tokens": 13711,
    "pattern_completion_tokens": 578,
    "pattern_total_tokens": 14289,
    "assembler_prompt_tokens": 3686,
    "assembler_completion_tokens": 683,
    "assembler_total_tokens": 4369,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/29",
    "natural_language_question": "Use <a href=\"http://allie.dbcls.jp/\">ALLIE</a> a service for Abbreviation / Long Form in Japanese and English to search in UniProt using Japanese.",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?protein ?englishLabelStr\nWHERE {\n    SERVICE <https://data.allie.dbcls.jp/sparql>{\n        ?x rdfs:label \"アミロイド前駆体タンパク質\"@ja ;\n            rdfs:label ?englishLabel .\n        FILTER(lang(?englishLabel) = \"en\")\n    }\n    BIND (STR(?englishLabel) AS ?englishLabelStr)\n    ?protein a up:Protein .\n    {\n        ?protein (up:recommendedName|up:alternativeName) ?structuredName .\n    }\n    UNION\n    {\n        VALUES(?partType){(up:domain) (up:component)}\n            ?protein ?partType ?part .\n        ?part (up:recommendedName|up:alternativeName) ?structuredName .\n    }\n    ?structuredName ?anyKindOfName  ?englishLabelStr .\n    ?anyKindOfName rdfs:subPropertyOf up:structuredNameType .\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://data.allie.dbcls.jp/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/29_search_uniprot_in_japanese_with_allie.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT ?protein ?uniprotFullName ?allieEnglishLabel\nWHERE {\n  # Step 1: Query ALLIE to get the English equivalent of a Japanese term.\n  # The example queries show that rdfs:label is used for both Japanese and English terms,\n  # with a FILTER to select the English one.\n  SERVICE <https://data.allie.dbcls.jp/sparql> {\n    # Using \"インスリン\" (Insulin) as the Japanese term to search for.\n    # Note: The previous failure for \"インスリン\" in ALLIE indicated an empty result,\n    # which might mean this specific term is not linked with an English label in ALLIE's dataset.\n    # However, the pattern itself is validated by other successful examples.\n    ?allieEntry rdfs:label \"インスリン\"@ja ;\n                rdfs:label ?allieEnglishLabel .\n    FILTER(lang(?allieEnglishLabel) = \"en\")\n  }\n\n  # Convert the English label from ALLIE to a plain string for easier matching in UniProt.\n  BIND(STR(?allieEnglishLabel) AS ?allieEnglishLabelStr)\n\n  # Step 2: Search UniProt for proteins whose recommended full name matches the English term from ALLIE.\n  ?protein a up:Protein .\n  ?protein up:recommendedName ?recommendedName .\n  ?recommendedName up:fullName ?uniprotFullName .\n\n  # Join condition: Match the UniProt protein's full name with the English label obtained from ALLIE.\n  # Using LCASE and CONTAINS for a case-insensitive and partial match,\n  # as names might not be exact string equivalents.\n  FILTER(CONTAINS(LCASE(?uniprotFullName), LCASE(?allieEnglishLabelStr)))\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "e178a8e5-4095-4c1e-a3f0-a2b3adea9f7e",
    "evaluation_timestamp": "2025-05-25T23:47:28.986370",
    "question_understanding_prompt_tokens": 276,
    "question_understanding_completion_tokens": 28,
    "question_understanding_total_tokens": 304,
    "planning_prompt_tokens": 5111,
    "planning_completion_tokens": 100,
    "planning_total_tokens": 5211,
    "pattern_prompt_tokens": 14141,
    "pattern_completion_tokens": 371,
    "pattern_total_tokens": 14512,
    "assembler_prompt_tokens": 3653,
    "assembler_completion_tokens": 462,
    "assembler_total_tokens": 4115,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/94_Select_all_approved_reactions_with_CHEBI_or_one_of_its_descendant_optional_UniProtKB_reviewed_EC",
    "natural_language_question": "Select all approved reactions with CHEBI:17815 (a 1,2-diacyl-sn-glycerol) or one of its descendant. Display links to UniProtKB/Swiss-Prot entries via EC numbers if the link rhea-ec exists.",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX CHEBI:<http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX up:<http://purl.uniprot.org/core/>\n\nSELECT\n  distinct\n    ?reaction\n    ?enzyme\n    (count(distinct ?protein) as ?proteinCount)\nWHERE {\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:side ?reactionSide .\n\n  OPTIONAL {?reaction rh:ec ?enzyme .\n    SERVICE <https://sparql.uniprot.org/sparql> {\n      ?protein up:reviewed true .\n      ?protein up:enzyme ?enzyme.\n    }\n  } .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi .\n  ?chebi rdfs:subClassOf* CHEBI:17815 .\n}\nGROUP BY ?reaction ?enzyme\nORDER BY ?reaction\nLIMIT 985915",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/94_Select_all_approved_reactions_with_CHEBI_or_one_of_its_descendant_optional_UniProtKB_reviewed_EC.ttl",
    "predicted_query": "# Primary endpoint: https://sparql.rhea-db.org/sparql\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?reaction ?reactionEquation ?ecNumber ?uniprotEntry\nWHERE {\n  # Part 1: Find approved reactions in Rhea involving CHEBI:17815 or its descendants\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:equation ?reactionEquation . # Include reaction equation for context\n  ?reaction rh:side ?reactionSide .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi .\n  ?chebi rdfs:subClassOf* CHEBI:17815 .\n\n  # Part 2: Optionally link to EC numbers and then to UniProtKB/Swiss-Prot entries\n  OPTIONAL {\n    ?reaction rh:ec ?ecNumber . # Get the EC number if it exists for the reaction\n\n    # Federate to UniProt to find entries associated with the EC number\n    SERVICE <https://sparql.uniprot.org/sparql> {\n      ?uniprotEntry up:ec ?ecNumber . # Link UniProt entry to the EC number\n      ?uniprotEntry a up:SwissProtConcept . # Filter for UniProtKB/Swiss-Prot entries\n    }\n  }\n}\nORDER BY ?reaction",
    "predicted_endpoint": "Primary",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "59991203-07f2-4f0c-a448-cf39448d727f",
    "evaluation_timestamp": "2025-05-25T23:48:17.888264",
    "question_understanding_prompt_tokens": 293,
    "question_understanding_completion_tokens": 96,
    "question_understanding_total_tokens": 389,
    "planning_prompt_tokens": 5824,
    "planning_completion_tokens": 160,
    "planning_total_tokens": 5984,
    "pattern_prompt_tokens": 11113,
    "pattern_completion_tokens": 249,
    "pattern_total_tokens": 11362,
    "assembler_prompt_tokens": 3757,
    "assembler_completion_tokens": 404,
    "assembler_total_tokens": 4161,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "unknown url type: 'Primary?query=%23+Primary+endpoint%3A+https%3A//sparql.rhea-db.org/sparql%0APREFIX+rh%3A+%3Chttp%3A//rdf.rhea-db.org/%3E%0APREFIX+CHEBI%3A+%3Chttp%3A//purl.obolibrary.org/obo/CHEBI_%3E%0APREFIX+rdfs%3A+%3Chttp%3A//www.w3.org/2000/01/rdf-schema%23%3E%0APREFIX+up%3A+%3Chttp%3A//purl.uniprot.org/core/%3E%0A%0ASELECT+DISTINCT+%3Freaction+%3FreactionEquation+%3FecNumber+%3FuniprotEntry%0AWHERE+%7B%0A++%23+Part+1%3A+Find+approved+reactions+in+Rhea+involving+CHEBI%3A17815+or+its+descendants%0A++%3Freaction+rdfs%3AsubClassOf+rh%3AReaction+.%0A++%3Freaction+rh%3Astatus+rh%3AApproved+.%0A++%3Freaction+rh%3Aequation+%3FreactionEquation+.+%23+Include+reaction+equation+for+context%0A++%3Freaction+rh%3Aside+%3FreactionSide+.%0A++%3FreactionSide+rh%3Acontains+%3Fparticipant+.%0A++%3Fparticipant+rh%3Acompound+%3Fcompound+.%0A++%3Fcompound+rh%3Achebi+%3Fchebi+.%0A++%3Fchebi+rdfs%3AsubClassOf%2A+CHEBI%3A17815+.%0A%0A++%23+Part+2%3A+Optionally+link+to+EC+numbers+and+then+to+UniProtKB/Swiss-Prot+entries%0A++OPTIONAL+%7B%0A++++%3Freaction+rh%3Aec+%3FecNumber+.+%23+Get+the+EC+number+if+it+exists+for+the+reaction%0A%0A++++%23+Federate+to+UniProt+to+find+entries+associated+with+the+EC+number%0A++++SERVICE+%3Chttps%3A//sparql.uniprot.org/sparql%3E+%7B%0A++++++%3FuniprotEntry+up%3Aec+%3FecNumber+.+%23+Link+UniProt+entry+to+the+EC+number%0A++++++%3FuniprotEntry+a+up%3ASwissProtConcept+.+%23+Filter+for+UniProtKB/Swiss-Prot+entries%0A++++%7D%0A++%7D%0A%7D%0AORDER+BY+%3Freaction&format=json&output=json&results=json'"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/11",
    "natural_language_question": "Distribution of reactions according to the first class of the enzyme classification (federated query)",
    "ground_truth_query": "PREFIX ec: <http://purl.uniprot.org/enzyme/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n\n# Query 11\n# Retrieve the count of reactions mapped to each level (main class) of the enzyme classification\n#\n# This query mimics the Filter section of the Rhea website (Browse all reactions)\n# https://www.rhea-db.org/rhea?query=\nSELECT ?ecClass (STR(?ecName) AS ?ecClassName) (COUNT(?rhea) AS ?rheaCount)\nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    VALUES (?ecClass) { (ec:1.-.-.-)(ec:2.-.-.-)(ec:3.-.-.-)(ec:4.-.-.-)(ec:5.-.-.-) (ec:6.-.-.-) (ec:7.-.-.-)}\n    ?ecNumber rdfs:subClassOf ?ecClass .\n    ?ecClass skos:prefLabel ?ecName .\n  }\n  ?rhea rdfs:subClassOf rh:Reaction .\n  ?rhea rh:ec ?ecNumber .\n} GROUP BY ?ecClass ?ecName",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/11.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX ec: <http://purl.uniprot.org/enzyme/>\n\nSELECT\n  ?ecClass\n  (str(?ecName) as ?ecClassName)\n  (count(?reaction) as ?reactionCount)\nWHERE\n{\n  # Patterns for Rhea-DB (host endpoint)\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:ec ?ecNumber . # ?ecNumber is the join variable\n\n  # Patterns for UniProt (federated endpoint)\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    # Define the first level EC classes\n    VALUES (?ecClass) {\n      (ec:1.-.-.-)\n      (ec:2.-.-.-)\n      (ec:3.-.-.-)\n      (ec:4.-.-.-)\n      (ec:5.-.-.-)\n      (ec:6.-.-.-)\n      (ec:7.-.-.-)\n    }\n    # Link the specific EC number to its first class\n    ?ecNumber rdfs:subClassOf ?ecClass .\n    # Get the preferred label for the first class\n    ?ecClass skos:prefLabel ?ecName .\n  }\n}\nGROUP BY ?ecClass ?ecName\nORDER BY ?ecClass",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "0518a312-8a8a-483a-a0b0-3ab0a02effe6",
    "evaluation_timestamp": "2025-05-25T23:49:01.619790",
    "question_understanding_prompt_tokens": 256,
    "question_understanding_completion_tokens": 26,
    "question_understanding_total_tokens": 282,
    "planning_prompt_tokens": 5148,
    "planning_completion_tokens": 124,
    "planning_total_tokens": 5272,
    "pattern_prompt_tokens": 17762,
    "pattern_completion_tokens": 112,
    "pattern_total_tokens": 17874,
    "assembler_prompt_tokens": 4295,
    "assembler_completion_tokens": 384,
    "assembler_total_tokens": 4679,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/109_Distribution_of_reactions_according_to_the_first_level_of_enzyme_classification",
    "natural_language_question": "Distribution of reactions according to the first level of enzyme classification",
    "ground_truth_query": "\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>\nPREFIX skos:<http://www.w3.org/2004/02/skos/core#>\n\nSELECT\n  ?ecClass\n  (str(?ecName) as ?ecClassName)\n  (count(?reaction) as ?reactionCount)\nWHERE\n{\n  SERVICE <http://sparql.uniprot.org/sparql> {\n    VALUES (?ecClass) { (ec:1.-.-.-)(ec:2.-.-.-)(ec:3.-.-.-)(ec:4.-.-.-)(ec:5.-.-.-) (ec:6.-.-.-) (ec:7.-.-.-) }\n    ?ecNumber rdfs:subClassOf ?ecClass .\n    ?ecClass skos:prefLabel ?ecName .\n  }\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:ec ?ecNumber .\n}\nGROUP BY ?ecClass ?ecName\n",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "http://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/109_Distribution_of_reactions_according_to_the_first_level_of_enzyme_classification.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX ec: <http://purl.uniprot.org/enzyme/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n\nSELECT ?ecClass (STR(?ecName) AS ?ecClassName) (COUNT(?rhea) AS ?rheaCount)\nWHERE {\n  # Get Rhea reactions and their associated EC numbers from the primary endpoint\n  ?rhea rdfs:subClassOf rh:Reaction .\n  ?rhea rh:ec ?ecNumber .\n\n  # Federate to UniProt to get the first-level EC class and its name\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    # Define the first-level EC classes\n    VALUES (?ecClass) {\n      (ec:1.-.-.-)\n      (ec:2.-.-.-)\n      (ec:3.-.-.-)\n      (ec:4.-.-.-)\n      (ec:5.-.-.-)\n      (ec:6.-.-.-)\n      (ec:7.-.-.-)\n    }\n    # Link the specific EC number from Rhea to its first-level parent class\n    ?ecNumber rdfs:subClassOf ?ecClass .\n    # Get the preferred label for the first-level EC class\n    ?ecClass skos:prefLabel ?ecName .\n  }\n}\nGROUP BY ?ecClass ?ecName\nORDER BY ?ecClass",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "0ad6df42-69b3-4280-9259-9e65c1dca883",
    "evaluation_timestamp": "2025-05-25T23:50:02.630591",
    "question_understanding_prompt_tokens": 250,
    "question_understanding_completion_tokens": 27,
    "question_understanding_total_tokens": 277,
    "planning_prompt_tokens": 5123,
    "planning_completion_tokens": 125,
    "planning_total_tokens": 5248,
    "pattern_prompt_tokens": 12099,
    "pattern_completion_tokens": 541,
    "pattern_total_tokens": 12640,
    "assembler_prompt_tokens": 4245,
    "assembler_completion_tokens": 392,
    "assembler_total_tokens": 4637,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 1.0,
    "result_eval_precision": 1.0,
    "result_eval_recall": 1.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/12",
    "natural_language_question": "Select all Rhea reactions linked to protein sequences (enzymes and transporters) in UniProtKB",
    "ground_truth_query": "PREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n# Query 12\n# Select all Rhea reactions used to annotate enzyme sequences in UniProtKB\n# return the number of UniProtKB entries\n# Federated query using a service to UniProt SPARQL endpoint\n#\n# This query corresponds to the Rhea website query:\n# https://www.rhea-db.org/rhea?query=uniprot:*\n#\nSELECT ?uniprotCount ?rhea ?accession ?equation \nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> { \n  \tSELECT ?rhea (count(?uniprot) as ?uniprotCount) {\n      ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea . \n  \t}\n  \tGROUP BY ?rhea\n  }\n  ?rhea rh:accession ?accession .\n  ?rhea rh:equation ?equation .\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/12.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT DISTINCT ?protein ?rhea\nWHERE {\n  # Part 1: Find proteins in UniProtKB linked to Rhea reactions\n  # This part runs on the primary endpoint: https://sparql.uniprot.org/sparql\n  GRAPH <http://sparql.uniprot.org/uniprot> {\n    ?protein up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  }\n\n  # Part 2: Filter Rhea reactions to include only enzymes (EC-linked) or transporters\n  # This part federates to the remote endpoint: https://sparql.rhea-db.org/sparql\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rdfs:subClassOf rh:Reaction . # Ensure ?rhea is a Rhea reaction\n    {\n      ?rhea rh:ec ?ec . # Rhea reaction linked to an EC number (identifies enzymes)\n    }\n    UNION\n    {\n      ?rhea rh:isTransport true . # Rhea reaction is a transport reaction (identifies transporters)\n    }\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "6a57fc2f-03b4-48b2-bded-7274a95a9f9e",
    "evaluation_timestamp": "2025-05-25T23:51:08.274108",
    "question_understanding_prompt_tokens": 255,
    "question_understanding_completion_tokens": 30,
    "question_understanding_total_tokens": 285,
    "planning_prompt_tokens": 5303,
    "planning_completion_tokens": 143,
    "planning_total_tokens": 5446,
    "pattern_prompt_tokens": 12285,
    "pattern_completion_tokens": 273,
    "pattern_total_tokens": 12558,
    "assembler_prompt_tokens": 4171,
    "assembler_completion_tokens": 336,
    "assembler_total_tokens": 4507,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/112_Total_number_of_reaction_ec_protein_links",
    "natural_language_question": "Total number of <reaction> <ec> <protein> links",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX up:<http://purl.uniprot.org/core/>\n\nSELECT\n  (count(?reaction) as ?reactionEcProteinLinkCount)\nWHERE {\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:ec ?enzyme\n  SERVICE <http://sparql.uniprot.org/sparql> {\n    ?protein up:reviewed true .\n    ?protein up:enzyme ?enzyme.\n  }\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "http://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/112_Total_number_of_reaction_ec_protein_links.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX ec: <http://purl.uniprot.org/enzyme/>\n\nSELECT (COUNT(DISTINCT ?reaction ?enzyme ?protein) AS ?totalLinks)\nWHERE {\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:ec ?enzyme .\n\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein up:reviewed true .\n    ?protein up:enzyme ?enzyme .\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "0856ac20-3060-43fa-bcca-9bcc3cf205e7",
    "evaluation_timestamp": "2025-05-25T23:52:57.232473",
    "question_understanding_prompt_tokens": 253,
    "question_understanding_completion_tokens": 21,
    "question_understanding_total_tokens": 274,
    "planning_prompt_tokens": 5208,
    "planning_completion_tokens": 134,
    "planning_total_tokens": 5342,
    "pattern_prompt_tokens": 15526,
    "pattern_completion_tokens": 100,
    "pattern_total_tokens": 15626,
    "assembler_prompt_tokens": 3333,
    "assembler_completion_tokens": 0,
    "assembler_total_tokens": 3333,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Encountered \"  \"?enzyme \"\" at line 7, column 34.\nWas expecting one of:\n    \"not\" ...\n    \"in\" ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n    \")\" ...\n    \"=\" ...\n    \"!=\" ...\n    \">\" ...\n    \"<\" ...\n    \"<=\" ...\n    \">=\" ...\n    \"||\" ...\n    \"&&\" ...\n    \"+\" ...\n    \"-\" ...\n    \"*\" ...\n    \"/\" ...",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "syntactically not correct"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/19_draft_human_metabolome",
    "natural_language_question": "Generate a draft human metabolome",
    "ground_truth_query": "PREFIX chebislash: <http://purl.obolibrary.org/obo/chebi/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  ?uniprot ?mnemonic ?rhea ?chebi ?smiles ?inchiKey\nWHERE\n{\n  ?rhea rh:side/rh:contains/rh:compound ?compound .\n  ?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?chebi .\n  ?chebi chebislash:smiles ?smiles ;\n          chebislash:inchikey ?inchiKey .\n  SERVICE <https://sparql.uniprot.org/sparql> {\n     ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea ;\n                                             up:organism taxon:9606 ;\n                                             up:mnemonic ?mnemonic .\n\n   }\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/19_draft_human_metabolome.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX keywords: <http://purl.uniprot.org/keywords/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT DISTINCT ?metabolite ?reaction ?ecNumber ?protein\nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein up:reviewed true . # Filter for reviewed UniProt entries\n    ?protein up:organism taxon:9606 . # Filter for human proteins\n    ?protein up:classifiedWith keywords:1185 . # Filter for proteins classified as enzymes\n\n    # Retrieve the EC number(s) associated with the protein\n    { ?protein up:enzyme ?ecNumber . }\n    UNION\n    { ?protein up:domain/up:enzyme ?ecNumber . }\n    UNION\n    { ?protein up:component/up:enzyme ?ecNumber . }\n  }\n\n  # Query Rhea-DB (host endpoint) for reactions involving these EC numbers\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved . # Filter for approved Rhea reactions\n  ?reaction rh:ec ?ecNumber . # Join with UniProt results via the EC number\n  ?reaction rh:side ?side .\n  ?side rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?metabolite . # Get the ChEBI URI for the metabolite\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "5229651c-f551-42fd-abcd-8943bdbbf6f2",
    "evaluation_timestamp": "2025-05-25T23:53:45.873529",
    "question_understanding_prompt_tokens": 246,
    "question_understanding_completion_tokens": 20,
    "question_understanding_total_tokens": 266,
    "planning_prompt_tokens": 5596,
    "planning_completion_tokens": 125,
    "planning_total_tokens": 5721,
    "pattern_prompt_tokens": 9850,
    "pattern_completion_tokens": 216,
    "pattern_total_tokens": 10066,
    "assembler_prompt_tokens": 4873,
    "assembler_completion_tokens": 415,
    "assembler_total_tokens": 5288,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/20_search_chemical_names_in_japanese",
    "natural_language_question": "Search for Chemical names starting in Japanese, translated to english using allie",
    "ground_truth_query": "PREFIX oboInOwl: <http://www.geneontology.org/formats/oboInOwl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT\n*\nWHERE {\nSERVICE <https://data.allie.dbcls.jp/sparql>{\n        ?x rdfs:label \"1,2,4-トリクロロベンゼン\"@ja ;\n            rdfs:label ?englishLabel .\n        FILTER(lang(?englishLabel) = \"en\")\n    }\n  BIND(STR(?englishLabel) AS ?englishLabelStr)\n  ?chebi rdfs:label|oboInOwl:hasSynonym ?englishLabelStr .\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql/",
    "federates_with": [
      "https://data.allie.dbcls.jp/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/20_search_chemical_names_in_japanese.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT DISTINCT ?chebiId ?japaneseName ?englishName\nWHERE {\n  # Get ChEBI IDs for compounds known in Rhea\n  ?rheaCompound rh:chebi ?chebiId .\n\n  # Federate with Allie to find Japanese and English labels for these ChEBI IDs\n  SERVICE <https://data.allie.dbcls.jp/sparql> {\n    ?chebiId rdfs:label ?japaneseName .\n    ?chebiId rdfs:label ?englishName .\n    FILTER(lang(?japaneseName) = \"ja\")\n    FILTER(lang(?englishName) = \"en\")\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "d2785618-b47c-43dd-a7f7-b710767a13c3",
    "evaluation_timestamp": "2025-05-25T23:54:44.442814",
    "question_understanding_prompt_tokens": 256,
    "question_understanding_completion_tokens": 23,
    "question_understanding_total_tokens": 279,
    "planning_prompt_tokens": 4476,
    "planning_completion_tokens": 115,
    "planning_total_tokens": 4591,
    "pattern_prompt_tokens": 11394,
    "pattern_completion_tokens": 189,
    "pattern_total_tokens": 11583,
    "assembler_prompt_tokens": 3785,
    "assembler_completion_tokens": 206,
    "assembler_total_tokens": 3991,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/117_Retrieve_parent_reactions_and_their_catalyzing_enzymes_for_a_metabolite_that_is_not_directly_involved_in_a_reaction",
    "natural_language_question": "Retrieve parent reactions (and their catalyzing enzymes) for a metabolite that is not directly involved in a reaction (ex: CHEBI:83137).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX up:<http://purl.uniprot.org/core/>\nPREFIX taxon:<http://purl.uniprot.org/taxonomy/>\nPREFIX keywords:<http://purl.uniprot.org/keywords/>\n\nSELECT\n  ?chebi\n  ?ecNumber\n  (count(?protein) as ?proteinCount)\n  ?reaction\n  ?equation\nWHERE {\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:equation ?equation .\n  ?reaction rh:ec ?ecNumber .\n  ?reaction rh:side ?reactionSide .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi .\n  CHEBI:83137 rdfs:subClassOf+ ?chebi.\n\n  SERVICE <https://sparql.uniprot.org/sparql> {\n  ?protein a up:Protein .\n  ?protein up:reviewed true .\n    {?protein up:enzyme ?ecNumber}\n  UNION\n    {?protein up:domain/up:enzyme ?ecNumber}\n  UNION\n    {?protein up:component/up:enzyme ?ecNumber} .\n  }\n} \nGROUP BY ?chebi ?ecNumber ?reaction ?equation",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/117_Retrieve_parent_reactions_and_their_catalyzing_enzymes_for_a_metabolite_that_is_not_directly_involved_in_a_reaction.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX ec: <http://purl.uniprot.org/enzyme/>\n\nSELECT DISTINCT ?childReaction ?parentReaction ?ecNumber ?enzyme\nWHERE {\n  # Part 1: Find reactions in Rhea-DB that do NOT directly involve CHEBI:83137\n  # and then find their parent reactions and associated EC numbers.\n  ?childReaction rdfs:subClassOf rh:Reaction .\n  ?childReaction rh:status rh:Approved .\n\n  # Ensure CHEBI:83137 is NOT directly involved in ?childReaction\n  FILTER NOT EXISTS {\n    ?childReaction rh:side ?side .\n    ?side rh:contains ?participant .\n    ?participant rh:compound ?compound .\n    ?compound rh:chebi CHEBI:83137 .\n  }\n\n  # Find the parent reaction of ?childReaction\n  ?childReaction rdfs:subClassOf ?parentReaction .\n  ?parentReaction rdfs:subClassOf rh:Reaction .\n  ?parentReaction rh:status rh:Approved .\n\n  # Get the EC number associated with the parent reaction\n  ?parentReaction rh:ec ?ecNumber .\n\n  # Part 2: Federate with UniProt to retrieve the enzymes (proteins)\n  # that catalyze reactions with the identified EC numbers.\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?enzyme a up:Protein .\n    ?enzyme up:reviewed true . # Focus on reviewed proteins\n\n    # Link enzyme to EC number (considering different property paths)\n    {\n      ?enzyme up:enzyme ?ecNumber .\n    }\n    UNION\n    {\n      ?enzyme up:domain/up:enzyme ?ecNumber .\n    }\n    UNION\n    {\n      ?enzyme up:component/up:enzyme ?ecNumber .\n    }\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "2aecab32-b975-4471-819d-f17a8a262694",
    "evaluation_timestamp": "2025-05-25T23:56:56.538900",
    "question_understanding_prompt_tokens": 270,
    "question_understanding_completion_tokens": 46,
    "question_understanding_total_tokens": 316,
    "planning_prompt_tokens": 5871,
    "planning_completion_tokens": 156,
    "planning_total_tokens": 6027,
    "pattern_prompt_tokens": 12730,
    "pattern_completion_tokens": 549,
    "pattern_total_tokens": 13279,
    "assembler_prompt_tokens": 4494,
    "assembler_completion_tokens": 518,
    "assembler_total_tokens": 5012,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/18",
    "natural_language_question": "Use <a href=\"https://idsm.elixir-czech.cz/sparql\">IDSM Sachem</a> to find ChEBIs with a a <a href=\"https://www.ebi.ac.uk/chebi/searchId.do?chebiId=CHEBI:35516\">Cholestane</a> skeleton (in SMILES). Then match returned ChEBIs to Rhea undirected reactions.",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\n\n\nSELECT \n  ?rhea \n  ?chebi\nWHERE {\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n    ?chebi sachem:substructureSearch [\n        sachem:query \"[C@]12(CCC3CCCC[C@]3(C)[C@@]1([H])CC[C@]1(C)[C@@]([H])([C@@](C)([H])CCCC(C)C)CC[C@@]21[H])[H]\" ].\n  }\n  ?rhea rh:side/rh:contains/rh:compound/rdfs:subClassOf ?chebi .\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/18.ttl",
    "predicted_query": "",
    "predicted_endpoint": null,
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "49805c13-b834-4d0f-a9f6-c90a681029e5",
    "evaluation_timestamp": "2025-05-25T23:57:26.259147",
    "question_understanding_prompt_tokens": 334,
    "question_understanding_completion_tokens": 52,
    "question_understanding_total_tokens": 386,
    "planning_prompt_tokens": 6374,
    "planning_completion_tokens": 125,
    "planning_total_tokens": 6499,
    "pattern_prompt_tokens": 8883,
    "pattern_completion_tokens": 138,
    "pattern_total_tokens": 9021,
    "assembler_prompt_tokens": 4128,
    "assembler_completion_tokens": 0,
    "assembler_total_tokens": 4128,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Encountered \"\" at line 1, column 0.\nWas expecting one of:\n    \"base\" ...\n    \"prefix\" ...\n    \"select\" ...\n    \"describe\" ...\n    \"construct\" ...\n    \"ask\" ...",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "syntactically not correct"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/115_Retrieve_the_set_of_metabolites_involved_in_reactions_catalyzed_by_human_genes_HUMAN_reference_proteome",
    "natural_language_question": "Retrieve the set of metabolites involved in reactions catalyzed by human genes (HUMAN reference proteome)",
    "ground_truth_query": "\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX taxon:<http://purl.uniprot.org/taxonomy/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up:<http://purl.uniprot.org/core/>\nPREFIX keywords:<http://purl.uniprot.org/keywords/>\n\nSELECT\n  ?chebi\n  ?reaction\n  ?ecNumber\n  ?protein\n  ?ensemblTranscript\n  ?ensemblGene\nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein up:reviewed true .\n    ?protein up:organism taxon:9606 .\n    ?protein up:classifiedWith keywords:1185 .\n\n    ?protein rdfs:seeAlso ?ensemblTranscript .\n    ?ensemblTranscript a up:Transcript_Resource .\n    ?ensemblTranscript up:database <http://purl.uniprot.org/database/Ensembl> .\n    ?ensemblTranscript up:transcribedFrom ?ensemblGene .\n\n      {?protein up:enzyme ?ecNumber .}\n    UNION\n      {?protein up:domain/up:enzyme ?ecNumber .}\n    UNION\n      {?protein up:component/up:enzyme ?ecNumber .}\n  }\n\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:ec ?ecNumber .\n  ?reaction rh:side ?reactionSide .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi . # only considering small molecules participants\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/115_Retrieve_the_set_of_metabolites_involved_in_reactions_catalyzed_by_human_genes_HUMAN_reference_proteome.ttl",
    "predicted_query": "",
    "predicted_endpoint": null,
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "ef5ec8a5-be8e-4408-86f2-e81d78f80e2d",
    "evaluation_timestamp": "2025-05-25T23:57:40.057491",
    "question_understanding_prompt_tokens": 257,
    "question_understanding_completion_tokens": 26,
    "question_understanding_total_tokens": 283,
    "planning_prompt_tokens": 5920,
    "planning_completion_tokens": 0,
    "planning_total_tokens": 5920,
    "pattern_prompt_tokens": 0,
    "pattern_completion_tokens": 0,
    "pattern_total_tokens": 0,
    "assembler_prompt_tokens": 4397,
    "assembler_completion_tokens": 0,
    "assembler_total_tokens": 4397,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Encountered \"\" at line 1, column 0.\nWas expecting one of:\n    \"base\" ...\n    \"prefix\" ...\n    \"select\" ...\n    \"describe\" ...\n    \"construct\" ...\n    \"ask\" ...",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "syntactically not correct"
  }
]