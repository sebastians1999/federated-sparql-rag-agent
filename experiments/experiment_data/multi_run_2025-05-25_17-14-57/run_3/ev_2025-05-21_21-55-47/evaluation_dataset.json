[
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/16",
    "natural_language_question": "For a given lipid (SWISSLIPID:000399814, Ceramide), return a list of all enzymes in UniProtKB/Swiss-Prot annotated to catalyze reactions involving that lipid.\nThis query does not consider the hierarchy: it looks for reactions and enzymes only for the specified lipid.",
    "ground_truth_query": "PREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n# Example 16\nSELECT ?startId ?startName ?uniprot\nWHERE\n{\n  # SwissLipids query (list of) identifier(s)\n  VALUES ?startId { SWISSLIPID:000399814 }\n  # name\n  ?startId rdfs:label ?startName .\n  # ChEBI x-ref\n  ?startId owl:equivalentClass ?chebi .\n  # federated query to Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n  \t?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n  }    \n  # federated query to UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?uniprot up:reviewed true .\n    ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  }\n} \nORDER BY ?startId",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/16.ttl",
    "predicted_query": "# https://sparql.swisslipids.org/sparql/\nPREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?lipidId ?lipidName ?chebi ?rhea ?rheaEquation ?uniprot ?uniprotName\nWHERE\n{\n  # Specify the target lipid by its SwissLipids ID\n  VALUES ?lipidId { SWISSLIPID:000399814 }\n\n  # Get the lipid's name\n  ?lipidId rdfs:label ?lipidName .\n\n  # Get the corresponding ChEBI identifier for the lipid\n  ?lipidId owl:equivalentClass ?chebi .\n\n  # Federated query to Rhea to find reactions involving the ChEBI compound\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:equation ?rheaEquation .\n    ?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n  }\n\n  # Federated query to UniProt to find enzymes catalyzing these Rhea reactions\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?uniprot up:reviewed true . # Ensure only reviewed (Swiss-Prot) entries are returned\n    ?uniprot up:recommendedName/up:fullName ?uniprotName .\n    ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  }\n}\nORDER BY ?lipidId ?rhea ?uniprot",
    "predicted_endpoint": "https://sparql.swisslipids.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "d083327b-57e1-4764-9846-8d700235adf8",
    "evaluation_timestamp": "2025-05-21T21:58:56.819448",
    "question_understanding_prompt_tokens": 304,
    "question_understanding_completion_tokens": 57,
    "question_understanding_total_tokens": 361,
    "planning_prompt_tokens": 7503,
    "planning_completion_tokens": 217,
    "planning_total_tokens": 7720,
    "pattern_prompt_tokens": 16810,
    "pattern_completion_tokens": 326,
    "pattern_total_tokens": 17136,
    "assembler_prompt_tokens": 5096,
    "assembler_completion_tokens": 0,
    "assembler_total_tokens": 5096,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "The read operation timed out"
  },
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/6",
    "natural_language_question": "For a given lipid (SWISSLIPID:000399814, Ceramide), return a list of all corresponding reactions (Rhea IDs and equation), as well as their enzymes as annotated in UniProtKB/Swiss-Prot) enzymes themselves (ID and protein name).\nThis query does not consider the hierarchy: it looks for reactions and enzymes only for the specified lipid.",
    "ground_truth_query": "PREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n# Example 6\nSELECT ?startId ?startName ?chebi ?rhea ?rheaEquation ?uniprot ?uniprotName\nWHERE\n{\n  # SwissLipids query (list of) identifier(s)\n  VALUES ?startId { SWISSLIPID:000399814 }\n  # name\n  ?startId rdfs:label ?startName .\n  # ChEBI x-ref\n  ?startId owl:equivalentClass ?chebi .\n  # federated query to Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n  \t?rhea rh:equation ?rheaEquation .\n  \t?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n  }    \n  # federated query to UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?uniprot up:reviewed true .\n    ?uniprot up:recommendedName/up:fullName ?uniprotName .\n    ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  }\n} \nORDER BY ?startId",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/6.ttl",
    "predicted_query": "# https://sparql.swisslipids.org/sparql/\nPREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?rheaAccession ?rheaEquation ?uniprotId ?proteinName\nWHERE {\n  # 1. Start with the given lipid in SwissLipids (host endpoint)\n  VALUES ?lipid { SWISSLIPID:000399814 }\n  # Get the ChEBI equivalent for the lipid, which serves as a join variable to Rhea\n  ?lipid owl:equivalentClass ?chebi .\n\n  # 2. Federate to Rhea-DB to find reactions involving this ChEBI compound\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    # Find reactions where the lipid (identified by ?chebi) is a component\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n    ?compound (rh:chebi|rh:reactivePart/rh:chebi|rh:underlyingChebi/rh:chebi) ?chebi .\n\n    # Get Rhea ID (accession) and equation for the found reaction\n    ?rhea rh:accession ?rheaAccession .\n    ?rhea rh:equation ?rheaEquation .\n  }\n\n  # 3. Federate to UniProt to find enzymes catalyzing these Rhea reactions\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    # Link UniProt entries to the Rhea reactions found\n    ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n    # Filter for reviewed UniProtKB/Swiss-Prot entries\n    ?uniprot up:reviewed true .\n\n    # Get UniProt ID and protein full name\n    ?uniprot up:accession ?uniprotId .\n    ?uniprot up:recommendedName/up:fullName ?proteinName .\n  }\n}\nORDER BY ?rheaAccession ?uniprotId",
    "predicted_endpoint": "https://sparql.swisslipids.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "7c5c4186-25a2-41d1-a4f6-1684dcfd85a9",
    "evaluation_timestamp": "2025-05-21T23:47:01.379046",
    "question_understanding_prompt_tokens": 323,
    "question_understanding_completion_tokens": 89,
    "question_understanding_total_tokens": 412,
    "planning_prompt_tokens": 6444,
    "planning_completion_tokens": 193,
    "planning_total_tokens": 6637,
    "pattern_prompt_tokens": 17602,
    "pattern_completion_tokens": 628,
    "pattern_total_tokens": 18230,
    "assembler_prompt_tokens": 4518,
    "assembler_completion_tokens": 545,
    "assembler_total_tokens": 5063,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "The read operation timed out"
  },
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/5",
    "natural_language_question": "For a given lipid (SWISSLIPID:000399814, Ceramide), return a list of all corresponding reactions (Rhea IDs and equation).\nThis query does consider the hierarchy: it looks for reactions involving the specified lipid and/or its more specific forms.",
    "ground_truth_query": "PREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\n\n# Example 5\nSELECT ?startId ?startName ?id ?name ?chebi ?rhea ?rheaEquation \nWHERE\n{\n  # SwissLipids query (list of) identifier(s)\n  VALUES ?startId { SWISSLIPID:000399814 }\n  # name\n  ?startId rdfs:label ?startName .\n  # Retrieve children lipids \n  ?id rdfs:subClassOf* ?startId .\n  ?id rdfs:label ?name .\n  # ChEBI x-ref\n  ?id owl:equivalentClass ?chebi .\n  # federated query to Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n  \t?rhea rh:equation ?rheaEquation .\n  \t?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n  }    \n} \nORDER BY  ?startId ?id",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/5.ttl",
    "predicted_query": "# https://sparql.swisslipids.org/sparql/\nPREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?lipidId ?lipidName ?rhea ?equation\nWHERE {\n  # 1. Identify the target lipid and retrieve its ChEBI equivalent from the SwissLipids endpoint.\n  VALUES ?lipidId { SWISSLIPID:000399814 }\n  ?lipidId rdfs:label ?lipidName .\n  ?lipidId owl:equivalentClass ?chebiLipid . # This links the SwissLipids entry to its corresponding ChEBI ID\n\n  # 2. Federate to the Rhea endpoint to find reactions involving this ChEBI compound or its more specific forms.\n  SERVICE <https://sparql.rhea-db.org/sparql/> {\n    ?rhea rh:equation ?equation .\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n    # Link the compound in the Rhea reaction to its ChEBI ID.\n    # Rhea uses different properties to link to ChEBI, so we use a property path.\n    ?compound (rh:chebi | rh:reactivePart/rh:chebi | rh:underlyingChebi/rh:chebi) ?chebiInReaction .\n    # Ensure that the ChEBI compound found in the reaction (?chebiInReaction) is either the\n    # specified lipid's ChEBI ID (?chebiLipid) or a more specific form (a subclass of ?chebiLipid).\n    ?chebiInReaction rdfs:subClassOf* ?chebiLipid .\n  }\n}\nORDER BY ?rhea",
    "predicted_endpoint": "https://sparql.swisslipids.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "0e5333a9-6538-4227-9a07-f9fcfd658a21",
    "evaluation_timestamp": "2025-05-22T01:01:45.993469",
    "question_understanding_prompt_tokens": 299,
    "question_understanding_completion_tokens": 66,
    "question_understanding_total_tokens": 365,
    "planning_prompt_tokens": 6093,
    "planning_completion_tokens": 180,
    "planning_total_tokens": 6273,
    "pattern_prompt_tokens": 4517,
    "pattern_completion_tokens": 201,
    "pattern_total_tokens": 4718,
    "assembler_prompt_tokens": 4421,
    "assembler_completion_tokens": 480,
    "assembler_total_tokens": 4901,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.897338403041825,
    "result_eval_precision": 0.855072463768116,
    "result_eval_recall": 0.944,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/34",
    "natural_language_question": "Lipids affected by human enzymes",
    "ground_truth_query": "PREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?swisslipid  {\n  ?swisslipid owl:equivalentClass ?chebi .\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n\t?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?metabolite . \n  }\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?catalyticActivityAnnotation up:catalyticActivity/up:catalyzedReaction ?rhea .\n    ?protein up:annotation ?catalyticActivityAnnotation ;\n             up:organism taxon:9606 .\n  }\n}\nLIMIT 1",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/34.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?protein ?rhea ?chebi_id\nWHERE {\n  # UniProt: Find human enzymes and the reactions they catalyze\n  ?protein up:organism taxon:9606 . # Filter for human proteins (Homo sapiens)\n  ?protein up:annotation ?annotation .\n  ?annotation a up:Catalytic_Activity_Annotation .\n  ?annotation up:catalyticActivity ?catalyticActivity .\n  ?catalyticActivity up:catalyzedReaction ?rhea . # ?rhea is the reaction catalyzed by the human enzyme\n\n  # Rhea: Find reactions involving compounds that are lipids or subclasses of lipids\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:side ?side .\n    ?side rh:contains ?participant .\n    ?participant rh:compound ?compound .\n    ?compound rh:chebi ?chebi_id . # Get the ChEBI identifier for the compound\n    ?chebi_id rdfs:subClassOf* CHEBI:24940 . # Filter for compounds that are lipids (CHEBI:24940) or any of their subclasses\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "fe866d56-86e9-47c4-87d8-c178cf9b86bc",
    "evaluation_timestamp": "2025-05-22T01:20:07.033739",
    "question_understanding_prompt_tokens": 245,
    "question_understanding_completion_tokens": 20,
    "question_understanding_total_tokens": 265,
    "planning_prompt_tokens": 7633,
    "planning_completion_tokens": 133,
    "planning_total_tokens": 7766,
    "pattern_prompt_tokens": 26243,
    "pattern_completion_tokens": 520,
    "pattern_total_tokens": 26763,
    "assembler_prompt_tokens": 6192,
    "assembler_completion_tokens": 0,
    "assembler_total_tokens": 6192,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/118_biosodafrontend_rat_brain_human_cancer",
    "natural_language_question": "What are the Homo sapiens genes associated with cancer and their orthologs expressed in the Rattus norvegicus brain?",
    "ground_truth_query": "PREFIX up:<http://purl.uniprot.org/core/>\nPREFIX taxon:<http://purl.uniprot.org/taxonomy/>\nPREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>\nPREFIX orth:<http://purl.org/net/orth#>\nPREFIX dcterms:<http://purl.org/dc/terms/>\nPREFIX obo:<http://purl.obolibrary.org/obo/>\nPREFIX lscr:<http://purl.org/lscr#>\nPREFIX genex:<http://purl.org/genex#>\nPREFIX sio: <http://semanticscience.org/resource/>\nSELECT ?gene ?orthologous_protein2 WHERE {\n  {\n    SELECT ?protein1 WHERE {\n      ?protein1 a up:Protein;\n        up:organism/up:scientificName 'Homo sapiens' ;\n        up:annotation ?annotation .\n      ?annotation rdfs:comment ?annotation_text.\n      ?annotation a up:Disease_Annotation .\n      FILTER CONTAINS (?annotation_text, \"cancer\")\n    }\n  }\n  SERVICE <https://sparql.omabrowser.org/sparql/> {\n    SELECT ?orthologous_protein2 ?protein1 ?gene WHERE {\n      ?protein_OMA a orth:Protein .\n      ?orthologous_protein2 a orth:Protein .\n      ?cluster a orth:OrthologsCluster .\n      ?cluster orth:hasHomologousMember ?node1 .\n      ?cluster orth:hasHomologousMember ?node2 .\n      ?node2 orth:hasHomologousMember* ?protein_OMA .\n      ?node1 orth:hasHomologousMember* ?orthologous_protein2 \n      .?orthologous_protein2 orth:organism/obo:RO_0002162/up:scientificName 'Rattus norvegicus' .\n      ?orthologous_protein2 sio:SIO_010079 ?gene .\n      ?protein_OMA lscr:xrefUniprot ?protein1 .\n      FILTER(?node1 != ?node2)\n    }\n  }\n  SERVICE <https://www.bgee.org/sparql/> {\n    ?gene genex:isExpressedIn ?anatEntity .\n    ?anatEntity rdfs:label 'brain' .\n    ?gene orth:organism ?org . \n    ?org obo:RO_0002162 taxon:10116 .\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql",
    "federates_with": [
      "https://sparql.omabrowser.org/sparql/",
      "https://www.bgee.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/118_biosodafrontend_rat_brain_human_cancer.ttl",
    "predicted_query": "# Primary endpoint: https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX orth: <http://purl.org/net/orth#>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX RO: <http://purl.obolibrary.org/obo/RO_>\nPREFIX genex: <http://purl.org/genex#>\nPREFIX obo: <http://purl.obolibrary.org/obo/>\n\nSELECT DISTINCT ?humanGeneName ?humanProtein ?diseaseComment ?ratGeneName ?ratProtein ?brainLabel\nWHERE {\n  # UniProt: Find Homo sapiens proteins associated with cancer\n  ?humanProtein a up:Protein ;\n                up:organism taxon:9606 ; # Homo sapiens\n                up:encodedBy ?humanGene .\n  ?humanGene skos:prefLabel ?humanGeneName . # Get human gene preferred name\n\n  ?humanProtein up:annotation ?diseaseAnnotation .\n  ?diseaseAnnotation a up:Disease_Annotation ;\n                     rdfs:comment ?diseaseComment .\n  FILTER (CONTAINS(LCASE(?diseaseComment), \"cancer\"))\n\n  # OMA Browser: Find orthologs in Rattus norvegicus\n  SERVICE <https://sparql.omabrowser.org/sparql> {\n    ?orthoGroup orth:hasHomologousMember ?nodeHuman , ?nodeRat .\n\n    # Link OMA nodes to UniProt proteins\n    ?nodeHuman lscr:xrefUniprot ?humanProtein . # Join with UniProt human protein\n    ?nodeHuman orth:organism/RO:0002162 taxon:9606 . # Ensure human protein is from Homo sapiens\n\n    ?nodeRat lscr:xrefUniprot ?ratProtein . # Get UniProt ID for rat ortholog\n    ?nodeRat orth:organism/RO:0002162 taxon:10116 . # Ensure rat protein is from Rattus norvegicus\n  }\n\n  # UniProt (host): Get gene name and Ensembl ID for the identified rat ortholog\n  ?ratProtein a up:Protein ;\n              up:organism taxon:10116 ; # Rattus norvegicus\n              up:encodedBy ?ratGene .\n  ?ratGene skos:prefLabel ?ratGeneName . # Get rat gene preferred name\n\n  # Get Ensembl gene ID for the rat protein to link to Bgee\n  ?ratProtein rdfs:seeAlso ?ratEnsemblXref .\n  ?ratEnsemblXref up:transcribedFrom ?ratEnsemblGene . # This links to the Ensembl gene URI\n\n  # Bgee: Check expression in Rattus norvegicus brain\n  SERVICE <https://www.bgee.org/sparql> {\n    ?bgeeGene lscr:xrefEnsemblGene ?ratEnsemblGene . # Join with the rat Ensembl gene URI\n    ?bgeeGene genex:isExpressedIn obo:UBERON_0000955 . # Expression in brain (UBERON_0000955)\n    ?bgeeGene genex:hasTaxon taxon:10116 . # Ensure the gene in Bgee is from Rattus norvegicus\n\n    # Get the label for the brain anatomical entity\n    obo:UBERON_0000955 rdfs:label ?brainLabel .\n  }\n}",
    "predicted_endpoint": "Primary",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "7b356611-f39b-4c14-939b-d941fb8734f2",
    "evaluation_timestamp": "2025-05-22T01:31:51.645507",
    "question_understanding_prompt_tokens": 263,
    "question_understanding_completion_tokens": 47,
    "question_understanding_total_tokens": 310,
    "planning_prompt_tokens": 7481,
    "planning_completion_tokens": 232,
    "planning_total_tokens": 7713,
    "pattern_prompt_tokens": 26294,
    "pattern_completion_tokens": 982,
    "pattern_total_tokens": 27276,
    "assembler_prompt_tokens": 5453,
    "assembler_completion_tokens": 0,
    "assembler_total_tokens": 5453,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "unknown url type: 'Primary?query=%23+Primary+endpoint%3A+https%3A//sparql.uniprot.org/sparql%0APREFIX+up%3A+%3Chttp%3A//purl.uniprot.org/core/%3E%0APREFIX+taxon%3A+%3Chttp%3A//purl.uniprot.org/taxonomy/%3E%0APREFIX+rdfs%3A+%3Chttp%3A//www.w3.org/2000/01/rdf-schema%23%3E%0APREFIX+skos%3A+%3Chttp%3A//www.w3.org/2004/02/skos/core%23%3E%0APREFIX+orth%3A+%3Chttp%3A//purl.org/net/orth%23%3E%0APREFIX+lscr%3A+%3Chttp%3A//purl.org/lscr%23%3E%0APREFIX+RO%3A+%3Chttp%3A//purl.obolibrary.org/obo/RO_%3E%0APREFIX+genex%3A+%3Chttp%3A//purl.org/genex%23%3E%0APREFIX+obo%3A+%3Chttp%3A//purl.obolibrary.org/obo/%3E%0A%0ASELECT+DISTINCT+%3FhumanGeneName+%3FhumanProtein+%3FdiseaseComment+%3FratGeneName+%3FratProtein+%3FbrainLabel%0AWHERE+%7B%0A++%23+UniProt%3A+Find+Homo+sapiens+proteins+associated+with+cancer%0A++%3FhumanProtein+a+up%3AProtein+%3B%0A++++++++++++++++up%3Aorganism+taxon%3A9606+%3B+%23+Homo+sapiens%0A++++++++++++++++up%3AencodedBy+%3FhumanGene+.%0A++%3FhumanGene+skos%3AprefLabel+%3FhumanGeneName+.+%23+Get+human+gene+preferred+name%0A%0A++%3FhumanProtein+up%3Aannotation+%3FdiseaseAnnotation+.%0A++%3FdiseaseAnnotation+a+up%3ADisease_Annotation+%3B%0A+++++++++++++++++++++rdfs%3Acomment+%3FdiseaseComment+.%0A++FILTER+%28CONTAINS%28LCASE%28%3FdiseaseComment%29%2C+%22cancer%22%29%29%0A%0A++%23+OMA+Browser%3A+Find+orthologs+in+Rattus+norvegicus%0A++SERVICE+%3Chttps%3A//sparql.omabrowser.org/sparql%3E+%7B%0A++++%3ForthoGroup+orth%3AhasHomologousMember+%3FnodeHuman+%2C+%3FnodeRat+.%0A%0A++++%23+Link+OMA+nodes+to+UniProt+proteins%0A++++%3FnodeHuman+lscr%3AxrefUniprot+%3FhumanProtein+.+%23+Join+with+UniProt+human+protein%0A++++%3FnodeHuman+orth%3Aorganism/RO%3A0002162+taxon%3A9606+.+%23+Ensure+human+protein+is+from+Homo+sapiens%0A%0A++++%3FnodeRat+lscr%3AxrefUniprot+%3FratProtein+.+%23+Get+UniProt+ID+for+rat+ortholog%0A++++%3FnodeRat+orth%3Aorganism/RO%3A0002162+taxon%3A10116+.+%23+Ensure+rat+protein+is+from+Rattus+norvegicus%0A++%7D%0A%0A++%23+UniProt+%28host%29%3A+Get+gene+name+and+Ensembl+ID+for+the+identified+rat+ortholog%0A++%3FratProtein+a+up%3AProtein+%3B%0A++++++++++++++up%3Aorganism+taxon%3A10116+%3B+%23+Rattus+norvegicus%0A++++++++++++++up%3AencodedBy+%3FratGene+.%0A++%3FratGene+skos%3AprefLabel+%3FratGeneName+.+%23+Get+rat+gene+preferred+name%0A%0A++%23+Get+Ensembl+gene+ID+for+the+rat+protein+to+link+to+Bgee%0A++%3FratProtein+rdfs%3AseeAlso+%3FratEnsemblXref+.%0A++%3FratEnsemblXref+up%3AtranscribedFrom+%3FratEnsemblGene+.+%23+This+links+to+the+Ensembl+gene+URI%0A%0A++%23+Bgee%3A+Check+expression+in+Rattus+norvegicus+brain%0A++SERVICE+%3Chttps%3A//www.bgee.org/sparql%3E+%7B%0A++++%3FbgeeGene+lscr%3AxrefEnsemblGene+%3FratEnsemblGene+.+%23+Join+with+the+rat+Ensembl+gene+URI%0A++++%3FbgeeGene+genex%3AisExpressedIn+obo%3AUBERON_0000955+.+%23+Expression+in+brain+%28UBERON_0000955%29%0A++++%3FbgeeGene+genex%3AhasTaxon+taxon%3A10116+.+%23+Ensure+the+gene+in+Bgee+is+from+Rattus+norvegicus%0A%0A++++%23+Get+the+label+for+the+brain+anatomical+entity%0A++++obo%3AUBERON_0000955+rdfs%3Alabel+%3FbrainLabel+.%0A++%7D%0A%7D&format=json&output=json&results=json'"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/51",
    "natural_language_question": "Find all proteins linked to arachidonate (CHEBI:32395)",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n\nSELECT \n    DISTINCT\n        ?uniprot\n        ?uniprotID\n        ?recname\n        ?gene\n        ?chebi\n        ?uniprotName\nWHERE {\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n     VALUES (?chebi) { (CHEBI:32395) }\n     ?rhea rh:side/rh:contains/rh:compound ?compound .\n     ?compound rh:chebi ?chebi .\n     ?chebi up:name ?uniprotName .\n  }\n  ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  ?uniprot up:mnemonic ?uniprotID .\n  ?uniprot up:recommendedName/up:fullName ?recname .\n  OPTIONAL {?uniprot up:encodedBy/skos:prefLabel ?gene .}\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/51_all_proteins_linked_to_arachidonate.ttl",
    "predicted_query": "# Primary endpoint: https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT DISTINCT ?protein\nWHERE {\n  # Link UniProt proteins to Rhea reactions\n  ?protein up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n\n  # Query Rhea to find reactions involving arachidonate (CHEBI:32395)\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rdfs:subClassOf rh:Reaction ;\n          rh:side/rh:contains/rh:compound/rh:chebi CHEBI:32395 .\n  }\n}",
    "predicted_endpoint": "Primary",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "4e1159fb-45df-4f94-97d6-0c2eece8b9f8",
    "evaluation_timestamp": "2025-05-22T01:33:15.005005",
    "question_understanding_prompt_tokens": 258,
    "question_understanding_completion_tokens": 41,
    "question_understanding_total_tokens": 299,
    "planning_prompt_tokens": 5189,
    "planning_completion_tokens": 125,
    "planning_total_tokens": 5314,
    "pattern_prompt_tokens": 7517,
    "pattern_completion_tokens": 282,
    "pattern_total_tokens": 7799,
    "assembler_prompt_tokens": 3377,
    "assembler_completion_tokens": 0,
    "assembler_total_tokens": 3377,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "unknown url type: 'Primary?query=%23+Primary+endpoint%3A+https%3A//sparql.uniprot.org/sparql%0APREFIX+up%3A+%3Chttp%3A//purl.uniprot.org/core/%3E%0APREFIX+rh%3A+%3Chttp%3A//rdf.rhea-db.org/%3E%0APREFIX+CHEBI%3A+%3Chttp%3A//purl.obolibrary.org/obo/CHEBI_%3E%0APREFIX+rdfs%3A+%3Chttp%3A//www.w3.org/2000/01/rdf-schema%23%3E%0A%0ASELECT+DISTINCT+%3Fprotein%0AWHERE+%7B%0A++%23+Link+UniProt+proteins+to+Rhea+reactions%0A++%3Fprotein+up%3Aannotation/up%3AcatalyticActivity/up%3AcatalyzedReaction+%3Frhea+.%0A%0A++%23+Query+Rhea+to+find+reactions+involving+arachidonate+%28CHEBI%3A32395%29%0A++SERVICE+%3Chttps%3A//sparql.rhea-db.org/sparql%3E+%7B%0A++++%3Frhea+rdfs%3AsubClassOf+rh%3AReaction+%3B%0A++++++++++rh%3Aside/rh%3Acontains/rh%3Acompound/rh%3Achebi+CHEBI%3A32395+.%0A++%7D%0A%7D&format=json&output=json&results=json'"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/40",
    "natural_language_question": "Retrieve human enzymes that metabolize sphingolipids and are annotated in ChEMBL",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?protein ?chemblEntry\nWHERE {\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rdfs:subClassOf rh:Reaction ;\n      rh:side/rh:contains/rh:compound/rh:chebi/rdfs:subClassOf+ CHEBI:26739 .\n  }\n  ?ca up:catalyzedReaction ?rhea .\n  ?protein up:annotation/up:catalyticActivity ?ca ;\n    up:organism taxon:9606 ;\n    rdfs:seeAlso ?chemblEntry .\n  ?chemblEntry up:database <http://purl.uniprot.org/database/ChEMBL> .\n}\nLIMIT 10",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/40_human_enzymes_that_metabolize_sphingolipids.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX cco: <http://rdf.ebi.ac.uk/terms/chembl#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n\nSELECT DISTINCT ?protein ?proteinName ?reaction ?chebi ?chebiLabel ?chemblMolecule ?chemblMoleculePrefLabel\nWHERE {\n  # UniProt: Retrieve human enzymes and their catalyzed reactions\n  ?protein up:organism taxon:9606 .\n  ?protein up:reviewed true . # Filter for reviewed entries (high quality)\n  ?protein up:recommendedName/up:fullName ?proteinName .\n  ?protein up:annotation ?annotation .\n  ?annotation a up:Catalytic_Activity_Annotation .\n  ?annotation up:catalyticActivity ?catalyticActivity .\n  ?catalyticActivity up:catalyzedReaction ?reaction . # Join variable with Rhea\n\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    # Rhea: Find reactions involving sphingolipids\n    ?reaction rh:side ?reactionSide .\n    ?reactionSide rh:contains ?participant .\n    ?participant rh:compound ?compound .\n    ?compound rh:chebi ?chebi . # Join variable with ChEBI\n    ?chebi rdfs:subClassOf* CHEBI:74742 . # CHEBI:74742 is 'sphingolipid'\n    ?chebi rdfs:label ?chebiLabel .\n    # OPTIONAL { ?reaction rh:status rh:Approved . } # Optionally filter for approved reactions\n  }\n\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/idsm> {\n    # IDSM (ChEMBL): Find proteins annotated in ChEMBL\n    ?activity a cco:Activity .\n    ?activity cco:hasAssay ?assay .\n    ?assay cco:hasTarget ?target .\n    ?target cco:hasTargetComponent/cco:targetCmptXref ?protein . # Join variable with UniProt\n    ?protein a cco:UniprotRef .\n    ?activity cco:hasMolecule ?chemblMolecule .\n    ?chemblMolecule skos:prefLabel ?chemblMoleculePrefLabel .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "a9c21b20-5170-4eb4-a306-74c7701fc5b8",
    "evaluation_timestamp": "2025-05-22T01:50:21.671571",
    "question_understanding_prompt_tokens": 253,
    "question_understanding_completion_tokens": 33,
    "question_understanding_total_tokens": 286,
    "planning_prompt_tokens": 8302,
    "planning_completion_tokens": 154,
    "planning_total_tokens": 8456,
    "pattern_prompt_tokens": 27277,
    "pattern_completion_tokens": 605,
    "pattern_total_tokens": 27882,
    "assembler_prompt_tokens": 7144,
    "assembler_completion_tokens": 636,
    "assembler_total_tokens": 7780,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "The read operation timed out"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/49",
    "natural_language_question": "Retrieve the UniProtKB proteins, their catalyzed Rhea reactions, their encoding genes (Ensembl) and the anatomic entities where the genes are expressed (UBERON anatomic entites from Bgee expression data resource).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX genex: <http://purl.org/genex#>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?protein ?ensemblGene ?reaction ?anatomicEntityLabel ?anatomicEntity\nWHERE {\n  # federated query to Rhea enadpoint\n  {\n    SELECT DISTINCT ?reaction WHERE {\n      SERVICE <https://sparql.rhea-db.org/sparql> {\n        ?reaction rdfs:subClassOf rh:Reaction ;\n          rh:equation ?reactionEquation ;\n          rh:side ?reactionSide .\n        ?reactionSide rh:contains ?participant .\n        ?participant rh:compound ?compound .\n        # compound constraint (CHEBI:16113 == cholesterol)\n        ?compound rh:chebi CHEBI:16113 .\n      }\n    }\n  }\n  # taxonomy constraint (taxon:9606 == Homo sapiens)\n  ?protein up:organism taxon:9606 ;\n    up:annotation ?a ;\n    rdfs:seeAlso / up:transcribedFrom ?ensemblGene .\n  ?a a up:Catalytic_Activity_Annotation ;\n    up:catalyticActivity ?ca .\n  ?ca up:catalyzedReaction ?reaction .\n  # federated query to Bgee (expression data)\n  BIND(IRI(REPLACE(STR(?ensemblGene), \"\\\\.[0-9]+$\", \"\")) AS ?ensemblGeneNoVersion)\n  SERVICE <https://www.bgee.org/sparql/> {\n    ?gene lscr:xrefEnsemblGene ?ensemblGeneNoVersion ;\n      genex:isExpressedIn ?anatomicEntity .\n    ?anatomicEntity rdfs:label ?anatomicEntityLabel .\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql",
      "https://www.bgee.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/49_tissues_where_genes_metabolizing_cholestrol_are_expressed.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX genex: <http://purl.org/genex#>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX uberon: <http://purl.obolibrary.org/obo/uo#>\n\nSELECT DISTINCT ?protein ?rhea ?rheaAccession ?rheaEquation ?ensemblGene ?anatomicEntity\nWHERE {\n  # Retrieve UniProtKB proteins\n  ?protein a up:Protein ;\n           up:reviewed true . # Focus on reviewed UniProtKB entries (Swiss-Prot)\n\n  # Link UniProtKB proteins to their catalyzed Rhea reactions\n  ?protein up:annotation ?annotation .\n  ?annotation up:catalyticActivity ?catalyticActivity .\n  ?catalyticActivity up:catalyzedReaction ?rhea .\n\n  # Link UniProtKB proteins to their encoding Ensembl genes\n  ?protein rdfs:seeAlso ?ensemblTranscript .\n  ?ensemblTranscript up:database <http://purl.uniprot.org/database/Ensembl> .\n  ?ensemblTranscript up:transcribedFrom ?ensemblGene .\n\n  # Federate with Rhea to retrieve details about the catalyzed reactions\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:accession ?rheaAccession .\n    ?rhea rh:equation ?rheaEquation .\n  }\n\n  # Federate with Bgee to find anatomic entities where the Ensembl genes are expressed\n  SERVICE <https://www.bgee.org/sparql> {\n    # Find Bgee gene entities that cross-reference the Ensembl gene\n    ?bgeeGene lscr:xrefEnsembl ?ensemblGene .\n    # Find the anatomic entities where these Bgee genes are expressed\n    ?bgeeGene genex:isExpressedIn ?anatomicEntity .\n    # The ?anatomicEntity will be an UBERON URI, as indicated by the genex:isExpressedIn predicate\n    # and the provided UBERON prefix mapping.\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "60b85f7f-d2ff-4207-bba4-4013fc1c7de9",
    "evaluation_timestamp": "2025-05-22T03:23:58.535213",
    "question_understanding_prompt_tokens": 284,
    "question_understanding_completion_tokens": 71,
    "question_understanding_total_tokens": 355,
    "planning_prompt_tokens": 7796,
    "planning_completion_tokens": 185,
    "planning_total_tokens": 7981,
    "pattern_prompt_tokens": 12004,
    "pattern_completion_tokens": 349,
    "pattern_total_tokens": 12353,
    "assembler_prompt_tokens": 3712,
    "assembler_completion_tokens": 0,
    "assembler_total_tokens": 3712,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/53",
    "natural_language_question": "Find mouse homologs in OMABrowser of human enzymes that catalyze reactions involving sterols (CHEBI:15889). Federating with Rhea and OMABrowser.",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX orth: <http://purl.org/net/orth#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  DISTINCT\n    ?chebi\n    ?reaction\n    ?humanProtein\n    ?mouseProtein\n    ?cluster \nWHERE {\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf rh:Reaction .\n    ?reaction rh:side/rh:contains/rh:compound ?compound .\n    ?compound rh:chebi ?chebi .\n    ?chebi rdfs:subClassOf* CHEBI:15889\n  }\n\n  ?humanProtein up:organism taxon:9606 .\n  ?humanProtein up:annotation ?a .\n  ?a a up:Catalytic_Activity_Annotation .\n  ?a up:catalyticActivity ?ca .\n  ?ca up:catalyzedReaction ?reaction .\n\n  SERVICE  <https://sparql.omabrowser.org/sparql> {\n    ?cluster a orth:ParalogsCluster .\n    ?cluster orth:hasHomologousMember ?node1 , ?node2 .\n    ?node1 orth:hasHomologousMember* ?orthoProtein1 .\n    ?node2 orth:hasHomologousMember* ?orthoProtein2 .\n    ?orthoProtein1 lscr:xrefUniprot ?mouseProtein .\n    ?orthoProtein2 lscr:xrefUniprot ?humanProtein .\n    # inTaxon mouse\n    ?orthoProtein1 orth:organism/<http://purl.obolibrary.org/obo/RO_0002162> taxon:10090 . \n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql",
      "https://sparql.omabrowser.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/53_mouse_homologs_of_sterol_enzymes_via_omabrowser.ttl",
    "predicted_query": "# Primary endpoint: https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX oma: <http://purl.omabrowser.org/ontology/oma#>\n\nSELECT DISTINCT ?humanEnzyme ?humanEnzymeName ?mouseHomolog ?mouseHomologName ?reaction ?chebi\nWHERE {\n  # 1. Find reactions involving sterols (CHEBI:15889) from Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf rh:Reaction ;\n              rh:status rh:Approved ;\n              rh:side ?reactionSide .\n    ?reactionSide rh:contains ?participant .\n    ?participant rh:compound ?compound .\n    ?compound rh:chebi ?chebi .\n    ?chebi (rdfs:subClassOf)+ CHEBI:15889 .\n  }\n\n  # 2. Find human enzymes catalyzing these reactions in UniProt (host endpoint)\n  ?humanEnzyme up:organism taxon:9606 ;\n               up:annotation/up:catalyticActivity/up:catalyzedReaction ?reaction ;\n               up:accession ?humanUniprotAccession . # Get accession for OMA lookup\n  OPTIONAL { ?humanEnzyme up:recommendedName/up:fullName ?humanEnzymeName . } # Get human enzyme name\n\n  # 3. Find mouse homologs via OMA Browser\n  SERVICE <https://sparql.omabrowser.org/sparql> {\n    ?omaProteinHuman oma:hasUniprotId ?humanUniprotAccession .\n    ?omaProteinHuman oma:inGroup ?omaGroup .\n    \n    ?omaProteinMouse oma:inGroup ?omaGroup .\n    ?omaProteinMouse oma:organism taxon:10090 . # Mouse taxonomy ID\n    ?omaProteinMouse oma:hasUniprotId ?mouseUniprotAccession .\n    \n    FILTER (?humanUniprotAccession != ?mouseUniprotAccession) # Ensure it's a different protein (homolog, not self)\n  }\n\n  # 4. Get details for the mouse homologs from UniProt (host endpoint)\n  ?mouseHomolog up:accession ?mouseUniprotAccession ;\n                up:organism taxon:10090 . # Confirm organism for mouse homolog\n  OPTIONAL { ?mouseHomolog up:recommendedName/up:fullName ?mouseHomologName . } # Get mouse homolog name\n}",
    "predicted_endpoint": "Primary",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "5816a0c9-faf8-48ee-a1c1-1f560cce1961",
    "evaluation_timestamp": "2025-05-22T03:25:47.904453",
    "question_understanding_prompt_tokens": 277,
    "question_understanding_completion_tokens": 41,
    "question_understanding_total_tokens": 318,
    "planning_prompt_tokens": 8703,
    "planning_completion_tokens": 166,
    "planning_total_tokens": 8869,
    "pattern_prompt_tokens": 19043,
    "pattern_completion_tokens": 392,
    "pattern_total_tokens": 19435,
    "assembler_prompt_tokens": 5915,
    "assembler_completion_tokens": 0,
    "assembler_total_tokens": 5915,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "unknown url type: 'Primary?query=%23+Primary+endpoint%3A+https%3A//sparql.uniprot.org/sparql%0APREFIX+up%3A+%3Chttp%3A//purl.uniprot.org/core/%3E%0APREFIX+taxon%3A+%3Chttp%3A//purl.uniprot.org/taxonomy/%3E%0APREFIX+rdfs%3A+%3Chttp%3A//www.w3.org/2000/01/rdf-schema%23%3E%0APREFIX+rh%3A+%3Chttp%3A//rdf.rhea-db.org/%3E%0APREFIX+CHEBI%3A+%3Chttp%3A//purl.obolibrary.org/obo/CHEBI_%3E%0APREFIX+oma%3A+%3Chttp%3A//purl.omabrowser.org/ontology/oma%23%3E%0A%0ASELECT+DISTINCT+%3FhumanEnzyme+%3FhumanEnzymeName+%3FmouseHomolog+%3FmouseHomologName+%3Freaction+%3Fchebi%0AWHERE+%7B%0A++%23+1.+Find+reactions+involving+sterols+%28CHEBI%3A15889%29+from+Rhea%0A++SERVICE+%3Chttps%3A//sparql.rhea-db.org/sparql%3E+%7B%0A++++%3Freaction+rdfs%3AsubClassOf+rh%3AReaction+%3B%0A++++++++++++++rh%3Astatus+rh%3AApproved+%3B%0A++++++++++++++rh%3Aside+%3FreactionSide+.%0A++++%3FreactionSide+rh%3Acontains+%3Fparticipant+.%0A++++%3Fparticipant+rh%3Acompound+%3Fcompound+.%0A++++%3Fcompound+rh%3Achebi+%3Fchebi+.%0A++++%3Fchebi+%28rdfs%3AsubClassOf%29%2B+CHEBI%3A15889+.%0A++%7D%0A%0A++%23+2.+Find+human+enzymes+catalyzing+these+reactions+in+UniProt+%28host+endpoint%29%0A++%3FhumanEnzyme+up%3Aorganism+taxon%3A9606+%3B%0A+++++++++++++++up%3Aannotation/up%3AcatalyticActivity/up%3AcatalyzedReaction+%3Freaction+%3B%0A+++++++++++++++up%3Aaccession+%3FhumanUniprotAccession+.+%23+Get+accession+for+OMA+lookup%0A++OPTIONAL+%7B+%3FhumanEnzyme+up%3ArecommendedName/up%3AfullName+%3FhumanEnzymeName+.+%7D+%23+Get+human+enzyme+name%0A%0A++%23+3.+Find+mouse+homologs+via+OMA+Browser%0A++SERVICE+%3Chttps%3A//sparql.omabrowser.org/sparql%3E+%7B%0A++++%3FomaProteinHuman+oma%3AhasUniprotId+%3FhumanUniprotAccession+.%0A++++%3FomaProteinHuman+oma%3AinGroup+%3FomaGroup+.%0A++++%0A++++%3FomaProteinMouse+oma%3AinGroup+%3FomaGroup+.%0A++++%3FomaProteinMouse+oma%3Aorganism+taxon%3A10090+.+%23+Mouse+taxonomy+ID%0A++++%3FomaProteinMouse+oma%3AhasUniprotId+%3FmouseUniprotAccession+.%0A++++%0A++++FILTER+%28%3FhumanUniprotAccession+%21%3D+%3FmouseUniprotAccession%29+%23+Ensure+it%27s+a+different+protein+%28homolog%2C+not+self%29%0A++%7D%0A%0A++%23+4.+Get+details+for+the+mouse+homologs+from+UniProt+%28host+endpoint%29%0A++%3FmouseHomolog+up%3Aaccession+%3FmouseUniprotAccession+%3B%0A++++++++++++++++up%3Aorganism+taxon%3A10090+.+%23+Confirm+organism+for+mouse+homolog%0A++OPTIONAL+%7B+%3FmouseHomolog+up%3ArecommendedName/up%3AfullName+%3FmouseHomologName+.+%7D+%23+Get+mouse+homolog+name%0A%7D&format=json&output=json&results=json'"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/52",
    "natural_language_question": "Retrieve drugs that target human enzymes involved in sterol metabolism (federated query with Rhea and ChEMBL via IDSM/Elixir czech republic).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX cco: <http://rdf.ebi.ac.uk/terms/chembl#>\nPREFIX chebihash: <http://purl.obolibrary.org/obo/chebi#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n        DISTINCT\n            ?protein\n            ?proteinFullName\n            ?activityType\n            ?standardActivityValue\n            ?standardActivityUnit\n            ?chemblMolecule\n            ?chemlbMoleculePrefLabel\nWHERE\n  {\n  # ChEBI: retrieve members of the ChEBI class ChEBI:15889 (sterol)\n  # Rhea: retrieve the reactions involving these ChEBI as participants\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf  rh:Reaction ;\n\t      rh:status        rh:Approved ;\n\t      rh:side          ?reactionSide .\n    ?reactionSide\n\t      rh:contains      ?participant .\n    ?participant rh:compound  ?compound\n    {\n      ?compound  rh:chebi  ?chebi .\n      ?chebi (rdfs:subClassOf)+ CHEBI:15889\n    } UNION {\n      ?compound  rh:chebi           ?chebi .\n      ?chebi2   rdfs:subClassOf     ?chebiRestriction .\n      ?chebiRestriction\n\t\ta           owl:Restriction ;\n\t\towl:onProperty      chebihash:has_major_microspecies_at_pH_7_3 ;\n\t\towl:someValuesFrom  ?chebi .\n      ?chebi2 (rdfs:subClassOf)+ CHEBI:15889\n    }\n  }\n  # UniProt: retrieve the human (taxid:9606) enzymes catalyzing these Rhea reactions\n  ?ca       up:catalyzedReaction  ?reaction .\n  ?a        up:catalyticActivity  ?ca .\n  ?protein  up:annotation         ?a ;\n\t    up:organism           taxon:9606 ;\n\t    up:recommendedName    ?proteinRecName .\n  ?proteinRecName\n\t    up:fullName           ?proteinFullName .\n  # Find drugs in wikidata that interact with the UniProt Proteins\n  # ChEMBL: retrieve the corresponding targets and with drugs in clinical phase 4\n  # Via https://idsm.elixir-czech.cz/sparql/\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/idsm> {\n    ?activity a cco:Activity ;\n      cco:hasMolecule ?chemblMolecule ;\n      cco:hasAssay ?assay ;\n      cco:standardType ?activityType ;\n      cco:standardValue ?standardActivityValue ;\n      cco:standardUnits ?standardActivityUnit .\n    ?chemblMolecule cco:highestDevelopmentPhase ?highestDevelopmentPhase ;\n      rdfs:label ?chemblMoleculeLabel ;\n      skos:prefLabel ?chemlbMoleculePrefLabel .\n    FILTER (?highestDevelopmentPhase > 3)\n    ?assay cco:hasTarget ?target .\n    ?target cco:hasTargetComponent/cco:targetCmptXref ?protein .\n    ?protein a cco:UniprotRef .\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql",
      "https://idsm.elixir-czech.cz/sparql/endpoint/idsm"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/52_drugs_targeting_sterol_metabolism.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rh: <http://rdf.rhea-db.org/>\n\nSELECT DISTINCT ?drug ?enzyme ?reaction ?chebi\nWHERE {\n  # UniProt patterns (host endpoint)\n  ?enzyme up:organism taxon:9606 . # Human enzyme\n  ?enzyme up:annotation/up:catalyticActivity/up:catalyzedReaction ?reaction . # Enzyme involved in a Rhea reaction\n  ?enzyme rdfs:seeAlso ?drug . # Enzyme linked to a drug entry\n  ?drug up:database <http://purl.uniprot.org/database/ChEMBL> . # Drug from ChEMBL\n\n  # Rhea patterns (federated endpoint)\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf rh:Reaction .\n    ?reaction rh:side/rh:contains/rh:compound ?compound .\n    ?compound rh:chebi ?chebi .\n    ?chebi rdfs:subClassOf* CHEBI:15889 . # Sterol metabolism (CHEBI:15889)\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "d5d4084b-ab83-4800-8d45-5fb7b7f670e7",
    "evaluation_timestamp": "2025-05-22T03:26:51.596905",
    "question_understanding_prompt_tokens": 270,
    "question_understanding_completion_tokens": 28,
    "question_understanding_total_tokens": 298,
    "planning_prompt_tokens": 6388,
    "planning_completion_tokens": 161,
    "planning_total_tokens": 6549,
    "pattern_prompt_tokens": 10327,
    "pattern_completion_tokens": 336,
    "pattern_total_tokens": 10663,
    "assembler_prompt_tokens": 5233,
    "assembler_completion_tokens": 358,
    "assembler_total_tokens": 5591,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.7812500000000001,
    "result_eval_precision": 0.6410256410256411,
    "result_eval_recall": 1.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/54",
    "natural_language_question": "Proteins with binding sites for ligands similar to heme",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT \n  ?protein\n  ?mnemonic\n  ?proteinName\n  ?ligandSimilarityScore\n  ?ligand\nWHERE {\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n    ?ssc sachem:compound ?ligand; \n      sachem:score ?ligandSimilarityScore ;\n      sachem:similaritySearch ?sss .\n        # Smiles of Heme\n    ?sss    sachem:query \"CC1=C(CCC([O-])=O)C2=[N+]3C1=Cc1c(C)c(C=C)c4C=C5C(C)=C(C=C)C6=[N+]5[Fe-]3(n14)n1c(=C6)c(C)c(CCC([O-])=O)c1=C2\";\n      sachem:cutoff \"8e-1\"^^xsd:double ;\n      sachem:aromaticityMode sachem:aromaticityDetect ;\n      sachem:similarityRadius 1 ;\n      sachem:tautomerMode sachem:ignoreTautomers .\n  }\n  ?protein up:mnemonic ?mnemonic ;\n    up:recommendedName/up:fullName ?proteinName ;\n    up:annotation ?annotation .\n  ?annotation a up:Binding_Site_Annotation ;\n      up:ligand/rdfs:subClassOf ?ligand .\n}\nORDER BY DESC(?ligandSimilarityScore)",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/54_binding_sites_for_ligands_similar_to_heme_sachem.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?protein ?proteinName ?ligandName ?chebiId\nWHERE {\n  # Find proteins with binding site annotations\n  ?protein up:annotation ?bindingSiteAnnotation .\n  ?bindingSiteAnnotation rdf:type up:Binding_Site_Annotation .\n\n  # Get the CHEBI identifier for the ligand associated with the binding site\n  # The up:ligand property can point to a concept which then links to a CHEBI,\n  # or directly to a CHEBI. The path up:ligand/rdfs:subClassOf handles this.\n  ?bindingSiteAnnotation up:ligand/rdfs:subClassOf ?chebiId .\n\n  # Filter for ligands similar to Heme.\n  # Heme (CHEBI:147291) is a type of Porphyrin (CHEBI:24641).\n  # We consider ligands \"similar to heme\" if they are a subclass of Porphyrin.\n  # This includes Heme itself and other related porphyrin compounds.\n  ?chebiId rdfs:subClassOf+ CHEBI:24641 .\n\n  # Get the human-readable name for the ligand (from its CHEBI ID)\n  ?chebiId rdfs:label ?ligandName .\n\n  # Optionally get the recommended full name of the protein for better readability\n  OPTIONAL {\n    ?protein up:recommendedName ?recommendedName .\n    ?recommendedName up:fullName ?proteinName .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "52a10e01-fa52-4609-9b6f-151a74bae20a",
    "evaluation_timestamp": "2025-05-22T03:29:02.569071",
    "question_understanding_prompt_tokens": 248,
    "question_understanding_completion_tokens": 29,
    "question_understanding_total_tokens": 277,
    "planning_prompt_tokens": 5672,
    "planning_completion_tokens": 159,
    "planning_total_tokens": 5831,
    "pattern_prompt_tokens": 3782,
    "pattern_completion_tokens": 113,
    "pattern_total_tokens": 3895,
    "assembler_prompt_tokens": 3681,
    "assembler_completion_tokens": 450,
    "assembler_total_tokens": 4131,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/43",
    "natural_language_question": "Connect patents cited in UniProtKB with those in the patent database at EPO via publication number, whose grant date is more than twenty years in the past.",
    "ground_truth_query": "PREFIX patent: <http://data.epo.org/linked-data/def/patent/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?grantDate ?patent ?application ?applicationNo\nWHERE\n{\n    ?citation a up:Patent_Citation ;\n  skos:exactMatch ?patent .\n  BIND(SUBSTR(STR(?patent), 35) AS ?applicationNo)\n  BIND(SUBSTR(STR(?patent), 33, 2) AS ?countryCode)\n  SERVICE <https://data.epo.org/linked-data/query>{\n    ?publication patent:publicationNumber ?applicationNo ;\n      patent:application ?application .\n    ?application patent:grantDate ?grantDate .\n  }\n  BIND((year(now()) - 20) AS ?thisYearMinusTwenty)\n  BIND(year(?grantDate) AS ?grantYear)\n  FILTER(?grantYear < ?thisYearMinusTwenty)\n} ORDER BY ?grantYear",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://data.epo.org/linked-data/query"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/43_patents_used_in_uniprot_granted_twenty_years_in_the_past.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX patent: <http://data.epo.org/linked-data/def/patent/>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT ?citation ?uniprotPatentURI ?publicationNumber ?epoPatent ?grantDate\nWHERE\n{\n  # UniProtKB part: Identify patent citations and extract their publication numbers\n  ?citation a up:Patent_Citation ;\n            skos:exactMatch ?uniprotPatentURI .\n\n  # Extract the publication number from the UniProt patent URI.\n  # UniProt patent URIs are typically structured like http://purl.uniprot.org/patent/EP1234567.\n  # The substring starting from position 35 extracts \"EP1234567\".\n  BIND(SUBSTR(STR(?uniprotPatentURI), 35) AS ?publicationNumber)\n\n  # Filter for common patent authorities to improve efficiency of the federated query\n  # and ensure relevance for the EPO endpoint.\n  FILTER(CONTAINS(STR(?uniprotPatentURI), 'EP') || CONTAINS(STR(?uniprotPatentURI), 'US') || CONTAINS(STR(?uniprotPatentURI), 'WO'))\n\n  SERVICE <https://data.epo.org/linked-data/query>\n  {\n    # EPO part: Find patents by publication number and filter by grant date\n    ?epoPatent patent:publicationNumber ?publicationNumber ;\n               patent:grantDate ?grantDate .\n\n    # Filter for patents whose grant date is more than twenty years in the past.\n    # We compare the patent's grant date with a date 20 years prior to the current date.\n    # xsd:date(NOW()) ensures that NOW() (which is xsd:dateTime) is cast to xsd:date\n    # for a robust comparison with patent:grantDate (which is typically xsd:date).\n    FILTER (?grantDate < (xsd:date(NOW()) - \"P20Y\"^^xsd:yearMonthDuration))\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "0943615f-fa9f-40e2-9d3f-91fb6fa2bc84",
    "evaluation_timestamp": "2025-05-22T03:31:04.017973",
    "question_understanding_prompt_tokens": 270,
    "question_understanding_completion_tokens": 47,
    "question_understanding_total_tokens": 317,
    "planning_prompt_tokens": 4535,
    "planning_completion_tokens": 202,
    "planning_total_tokens": 4737,
    "pattern_prompt_tokens": 10529,
    "pattern_completion_tokens": 390,
    "pattern_total_tokens": 10919,
    "assembler_prompt_tokens": 3614,
    "assembler_completion_tokens": 527,
    "assembler_total_tokens": 4141,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/45",
    "natural_language_question": "Retrieve drugs that target human enzymes involved in sterol metabolism (federated query with WikiData and Rhea).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX chebihash: <http://purl.obolibrary.org/obo/chebi#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n\nSELECT DISTINCT ?protein ?proteinFullName ?wikiChemical ?wikiChemicalLabel ?medicalConditionTreatedLabel\nWHERE {\n  # ChEBI: retrieve members of the ChEBI class ChEBI:15889 (sterol)\n  # Rhea: retrieve the reactions involving these ChEBI as participants\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf rh:Reaction ;\n      rh:status rh:Approved ;\n      rh:side ?reactionSide .\n    ?reactionSide\n      rh:contains ?participant .\n    ?participant rh:compound ?compound\n    {\n      ?compound rh:chebi ?chebi .\n      ?chebi (rdfs:subClassOf)+ CHEBI:15889\n    } UNION {\n      ?compound rh:chebi ?chebi .\n      ?chebi2 rdfs:subClassOf ?chebiRestriction .\n      ?chebiRestriction\n\t\ta owl:Restriction ;\n\t\towl:onProperty chebihash:has_major_microspecies_at_pH_7_3 ;\n\t\towl:someValuesFrom ?chebi .\n      ?chebi2 (rdfs:subClassOf)+ CHEBI:15889\n    }\n  }\n  # UniProt: retrieve the human (taxid:9606) enzymes catalyzing these Rhea reactions\n  ?ca up:catalyzedReaction  ?reaction .\n  ?a up:catalyticActivity  ?ca .\n  ?proteinIRI  up:annotation ?a ;\n    up:organism taxon:9606 ;\n    up:recommendedName ?proteinRecName .\n  ?proteinRecName up:fullName ?proteinFullName .\n  # Find drugs in wikidata that interact with the UniProt Proteins\n  BIND (SUBSTR(STR(?proteinIRI), STRLEN(STR(uniprotkb:))+1) AS ?protein)\n  SERVICE <https://query.wikidata.org/sparql> {\n    ?wp wdt:P352  ?protein .\n    ?wikiChemical wdt:P129 ?wp . # Physically interacts with\n    ?wikiChemical rdfs:label ?wikiChemicalLabel .\n    ?wikiChemical wdt:P2175 ?wmc . # Medical conndition treated\n    ?wmc rdfs:label ?medicalConditionTreatedLabel .\n    FILTER(lang(?medicalConditionTreatedLabel) = 'en')\n    FILTER(lang(?wikiChemicalLabel) = 'en')\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://query.wikidata.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/45_drugs_targeting_human_sterol_metabolism_enzymes.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?enzyme ?enzymeName ?drug\nWHERE {\n  # UniProt patterns (main endpoint)\n  ?enzyme up:organism taxon:9606 . # Filter for human enzymes\n  ?enzyme up:annotation ?annotation .\n  ?annotation a up:Catalytic_Activity_Annotation .\n  ?annotation up:catalyticActivity ?catalyticActivity .\n  ?catalyticActivity up:catalyzedReaction ?reaction . # Join variable with Rhea\n  ?enzyme rdfs:seeAlso ?drug . # Link enzyme to external drug resource\n  ?drug up:database <http://purl.uniprot.org/database/ChEMBL> . # Filter for ChEMBL drugs\n  ?enzyme up:recommendedName/up:fullName ?enzymeName . # Get human-readable enzyme name\n\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    # Rhea patterns (federated endpoint)\n    ?reaction rdfs:subClassOf rh:Reaction . # Ensure ?reaction is a Rhea reaction\n    ?reaction rh:side/rh:contains/rh:compound ?compound . # Get compounds involved in the reaction\n    ?compound rh:chebi ?chebi . # Link compound to ChEBI\n    ?chebi rdfs:subClassOf* CHEBI:15889 . # Filter for compounds that are sterols or subclasses of sterols\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "43be3266-1d37-4469-98dc-a11269d9a1b3",
    "evaluation_timestamp": "2025-05-22T03:31:51.531148",
    "question_understanding_prompt_tokens": 259,
    "question_understanding_completion_tokens": 28,
    "question_understanding_total_tokens": 287,
    "planning_prompt_tokens": 6618,
    "planning_completion_tokens": 156,
    "planning_total_tokens": 6774,
    "pattern_prompt_tokens": 10035,
    "pattern_completion_tokens": 381,
    "pattern_total_tokens": 10416,
    "assembler_prompt_tokens": 5130,
    "assembler_completion_tokens": 431,
    "assembler_total_tokens": 5561,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/42",
    "natural_language_question": "Connect patents cited in UniProtKB with those in the patent database at EPO via publication number.",
    "ground_truth_query": "PREFIX patent: <http://data.epo.org/linked-data/def/patent/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?citation ?patent ?application ?applicationNo\nWHERE\n{\n  ?citation a up:Patent_Citation ;\n    skos:exactMatch ?patent .\n  FILTER(CONTAINS(STR(?patent), 'EP'))\n  BIND(SUBSTR(STR(?patent), 35) AS ?applicationNo)\n  SERVICE <https://data.epo.org/linked-data/query>{\n    ?application patent:publicationNumber ?applicationNo\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://data.epo.org/linked-data/query"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/42_connect_patents_to_epo.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX patent: <http://data.epo.org/linked-data/def/patent/>\n\nSELECT ?citation ?uniprotPatentURI ?publicationNumber ?epoPatentPublication ?epoPatentApplication\nWHERE {\n  # UniProtKB part: Find patent citations and extract the publication number\n  ?citation a up:Patent_Citation .\n  ?citation skos:exactMatch ?uniprotPatentURI .\n  # Extract the publication number from the UniProt-cited patent URI.\n  # Based on the provided example, the publication number starts at character 35\n  # of the patent URI (e.g., http://data.epo.org/linked-data/patent/EP1234567A1).\n  BIND(SUBSTR(STR(?uniprotPatentURI), 35) AS ?publicationNumber) .\n\n  # EPO part: Query the EPO endpoint using the extracted publication number\n  SERVICE <https://data.epo.org/linked-data/query> {\n    ?epoPatentPublication patent:publicationNumber ?publicationNumber .\n    ?epoPatentPublication patent:application ?epoPatentApplication .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "acbe2496-5a04-475a-bba3-9f4d6bc327c3",
    "evaluation_timestamp": "2025-05-22T03:33:45.708533",
    "question_understanding_prompt_tokens": 257,
    "question_understanding_completion_tokens": 35,
    "question_understanding_total_tokens": 292,
    "planning_prompt_tokens": 4936,
    "planning_completion_tokens": 122,
    "planning_total_tokens": 5058,
    "pattern_prompt_tokens": 15285,
    "pattern_completion_tokens": 282,
    "pattern_total_tokens": 15567,
    "assembler_prompt_tokens": 3405,
    "assembler_completion_tokens": 0,
    "assembler_total_tokens": 3405,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/67_draft_human_metabolome",
    "natural_language_question": "Generate a draft human metabolome",
    "ground_truth_query": "PREFIX chebislash: <http://purl.obolibrary.org/obo/chebi/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n?uniprot ?mnemonic ?rhea ?chebi ?smiles ?inchiKey\nWHERE\n{\n  ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea ;\n        up:organism taxon:9606 ;\n        up:mnemonic ?mnemonic .\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n\t?rhea rh:side/rh:contains/rh:compound ?compound .\n    ?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?chebi .\n   }\n   ?chebi chebislash:smiles ?smiles ;\n          chebislash:inchikey ?inchiKey .\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/67_draft_human_metabolome.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX keywords: <http://purl.uniprot.org/keywords/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?chebi ?compoundLabel ?reaction ?ecNumber ?protein\nWHERE {\n  # Part 1: Retrieve reactions and their associated compounds (metabolites) from Rhea\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved . # Filter for approved reactions\n  ?reaction rh:ec ?ecNumber .       # This EC number will be used to join with UniProt\n  ?reaction rh:side ?reactionSide .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi .       # Get the ChEBI identifier for the compound\n  OPTIONAL { ?compound rdfs:label ?compoundLabel . } # Get the label for the compound if available in Rhea\n\n  # Part 2: Retrieve human enzymes and their EC numbers from UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein up:reviewed true .\n    ?protein up:organism taxon:9606 . # Filter for human proteins (taxon:9606)\n    ?protein up:classifiedWith keywords:1185 . # Filter for proteins classified as enzymes\n\n    # Get the EC number(s) associated with the protein\n    { ?protein up:enzyme ?ecNumber . }\n    UNION\n    { ?protein up:domain/up:enzyme ?ecNumber . }\n    UNION\n    { ?protein up:component/up:enzyme ?ecNumber . }\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "d383ccdd-b362-4946-9e0f-8fbeeba4c5b7",
    "evaluation_timestamp": "2025-05-22T03:34:53.027601",
    "question_understanding_prompt_tokens": 245,
    "question_understanding_completion_tokens": 20,
    "question_understanding_total_tokens": 265,
    "planning_prompt_tokens": 5596,
    "planning_completion_tokens": 102,
    "planning_total_tokens": 5698,
    "pattern_prompt_tokens": 14729,
    "pattern_completion_tokens": 271,
    "pattern_total_tokens": 15000,
    "assembler_prompt_tokens": 4558,
    "assembler_completion_tokens": 0,
    "assembler_total_tokens": 4558,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.4152560531390615,
    "result_eval_precision": 0.6956209619526202,
    "result_eval_recall": 0.29596823457544286,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/36",
    "natural_language_question": "Find the orthologous proteins for UniProtKB entry P05067 using the <a href=\"http://www.orthod.org\">OrthoDB database</a>",
    "ground_truth_query": "PREFIX orthodb: <http://purl.orthodb.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  ?protein\n  ?orthoGroup\n  ?scientificName\n  ?functionComment\n  ?prefferedGeneName\n  ((STRLEN(?value) - ?medianLength) as ?deviationFromMedianLength)\nWHERE\n{\n  uniprotkb:P05067 a up:Protein ;\n        up:organism/up:scientificName ?scientificName ;\n        rdfs:seeAlso ?orthoGroup ;\n        up:encodedBy/skos:prefLabel ?prefferedGeneName ;\n          up:sequence/rdf:value ?value .\n  OPTIONAL {\n    ?protein up:annotation ?functionAnnotation .\n    ?functionAnnotation a up:Function_Annotation ;\n      rdfs:comment ?functionComment .\n  }\n  SERVICE <https://sparql.orthodb.org/sparql>{\n    ?orthoGroup orthodb:ogMedianProteinLength ?medianLength .\n    ?orthoGroup orthodb:hasMember ?xref .\n    ?xref orthodb:xref/orthodb:xrefResource uniprotkb:P05067 .\n  }\n}\nLIMIT 985915",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.orthodb.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/36_orthologous_proteins_via_orthodb.ttl",
    "predicted_query": "# Primary endpoint: https://sparql.uniprot.org/sparql\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX db: <http://purl.uniprot.org/database/>\n\nSELECT DISTINCT ?orthologProtein ?orthoDB_id\nWHERE {\n  # Define the target UniProtKB entry\n  BIND (uniprotkb:P05067 AS ?targetProtein)\n\n  # Find the OrthoDB cross-reference for the target protein\n  ?targetProtein up:dbReference ?targetOrthoDBRef .\n  ?targetOrthoDBRef up:database db:OrthoDB . # Link to the OrthoDB database\n  ?targetOrthoDBRef up:dbId ?orthoDB_id .   # Get the OrthoDB group identifier\n\n  # Find other UniProtKB proteins that also reference the same OrthoDB group identifier\n  ?orthologProtein up:dbReference ?orthologOrthoDBRef .\n  ?orthologOrthoDBRef up:database db:OrthoDB .\n  ?orthologOrthoDBRef up:dbId ?orthoDB_id .\n\n  # Exclude the original target protein from the list of orthologs\n  FILTER (?orthologProtein != ?targetProtein)\n}",
    "predicted_endpoint": "Primary",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "c12e25ce-1759-4b2a-8688-5dd115297625",
    "evaluation_timestamp": "2025-05-22T03:36:02.410268",
    "question_understanding_prompt_tokens": 271,
    "question_understanding_completion_tokens": 41,
    "question_understanding_total_tokens": 312,
    "planning_prompt_tokens": 4266,
    "planning_completion_tokens": 136,
    "planning_total_tokens": 4402,
    "pattern_prompt_tokens": 5760,
    "pattern_completion_tokens": 200,
    "pattern_total_tokens": 5960,
    "assembler_prompt_tokens": 2537,
    "assembler_completion_tokens": 0,
    "assembler_total_tokens": 2537,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "unknown url type: 'Primary?query=%23+Primary+endpoint%3A+https%3A//sparql.uniprot.org/sparql%0APREFIX+uniprotkb%3A+%3Chttp%3A//purl.uniprot.org/uniprot/%3E%0APREFIX+up%3A+%3Chttp%3A//purl.uniprot.org/core/%3E%0APREFIX+db%3A+%3Chttp%3A//purl.uniprot.org/database/%3E%0A%0ASELECT+DISTINCT+%3ForthologProtein+%3ForthoDB_id%0AWHERE+%7B%0A++%23+Define+the+target+UniProtKB+entry%0A++BIND+%28uniprotkb%3AP05067+AS+%3FtargetProtein%29%0A%0A++%23+Find+the+OrthoDB+cross-reference+for+the+target+protein%0A++%3FtargetProtein+up%3AdbReference+%3FtargetOrthoDBRef+.%0A++%3FtargetOrthoDBRef+up%3Adatabase+db%3AOrthoDB+.+%23+Link+to+the+OrthoDB+database%0A++%3FtargetOrthoDBRef+up%3AdbId+%3ForthoDB_id+.+++%23+Get+the+OrthoDB+group+identifier%0A%0A++%23+Find+other+UniProtKB+proteins+that+also+reference+the+same+OrthoDB+group+identifier%0A++%3ForthologProtein+up%3AdbReference+%3ForthologOrthoDBRef+.%0A++%3ForthologOrthoDBRef+up%3Adatabase+db%3AOrthoDB+.%0A++%3ForthologOrthoDBRef+up%3AdbId+%3ForthoDB_id+.%0A%0A++%23+Exclude+the+original+target+protein+from+the+list+of+orthologs%0A++FILTER+%28%3ForthologProtein+%21%3D+%3FtargetProtein%29%0A%7D&format=json&output=json&results=json'"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/60",
    "natural_language_question": "Find human proteins that catalyze reactions where substrates or product have a <a href=\"https://www.ebi.ac.uk/chebi/searchId.do?chebiId=CHEBI:35516\">Cholestane skeleton</a>",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  DISTINCT\n    ?protein\n    ?disease\n    ?rhea\n    ?chebi\n    ?omim\nWHERE {\n    # Find complete ChEBIs with a Cholestane skeleton, via the Czech Elixir node IDSM Sachem chemical substructure search.\n    SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n      ?chebi sachem:substructureSearch [\n        sachem:query\n\"[C@]12(CCC3CCCC[C@]3(C)[C@@]1([H])CC[C@]1(C)[C@@]([H])([C@@](C)([H])CCCC(C)C)CC[C@@]21[H])[H]\"\n].\n   }\n   # Use the fact that UniProt catalytic activities are annotated using Rhea \n   # Mapping the found ChEBIs to Rhea reactions\n   SERVICE <https://sparql.rhea-db.org/sparql>{\n     ?rhea rh:side/rh:contains/rh:compound/rdfs:subClassOf ?chebi .\n   }\n   # Match the found Rhea reactions with human UniProtKB proteins\n   ?protein up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n   ?protein up:organism taxon:9606 .\n   # Find only those human entries that have an annotated related disease, and optionaly map these to OMIM\n   ?protein up:annotation/up:disease ?disease .\n   OPTIONAL {\n     ?disease rdfs:seeAlso ?omim .\n     ?omim up:database <http://purl.uniprot.org/database/MIM>\n   }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/60_enzymes_working_on_substrate_with_Cholestene_backbone.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\n\nSELECT DISTINCT ?protein ?rhea ?chebi\nWHERE {\n  # Find reactions in Rhea where substrates or products are a subclass of CHEBI:35516 (Cholestane skeleton)\n  ?rhea rh:side ?reactionSide .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi .\n  ?chebi rdfs:subClassOf* CHEBI:35516 .\n\n  # Federate with UniProt to find human proteins catalyzing these reactions\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein up:reviewed true .\n    ?protein up:organism taxon:9606 . # Filter for human proteins (taxon:9606)\n    ?protein up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "f593dc52-a692-4690-be57-e77ceab0dea6",
    "evaluation_timestamp": "2025-05-22T03:37:16.448728",
    "question_understanding_prompt_tokens": 293,
    "question_understanding_completion_tokens": 38,
    "question_understanding_total_tokens": 331,
    "planning_prompt_tokens": 9922,
    "planning_completion_tokens": 130,
    "planning_total_tokens": 10052,
    "pattern_prompt_tokens": 21740,
    "pattern_completion_tokens": 263,
    "pattern_total_tokens": 22003,
    "assembler_prompt_tokens": 7349,
    "assembler_completion_tokens": 340,
    "assembler_total_tokens": 7689,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/70_enzymes_interacting_with_molecules_similar_to_dopamine",
    "natural_language_question": "Look for enzymes catalyzing reactions with molecules similar to dopamine.",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  ?protein\n  ?rhea\n  ?chebi\nWHERE {\n  # Use the smiles of dopamine CHEBI:18243\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi>{\n    ?chebi sachem:similarCompoundSearch [\n      sachem:query \"NCCc1ccc(O)c(O)c1\" ] .\n  }\n  GRAPH<https://sparql.rhea-db.org/rhea>{\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n    ?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?chebi .\n  }\n  ?protein up:reviewed true ;\n    up:annotation ?caa .\n  ?caa up:catalyticActivity/up:catalyzedReaction ?rhea .\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/70_enzymes_interacting_with_molecules_similar_to_dopamine.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?protein ?rhea ?chebi\nWHERE {\n  # Find compounds similar to dopamine (SMILES: NCCc1ccc(O)c(O)c1)\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n    ?chebi sachem:similarCompoundSearch [\n      sachem:query \"NCCc1ccc(O)c(O)c1\"\n    ] .\n  }\n\n  # Link the similar ChEBI compounds to Rhea reactions\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n    ?compound (rh:chebi | rh:reactivePart/rh:chebi | rh:underlyingChebi/rh:chebi) ?chebi .\n  }\n\n  # Find proteins (enzymes) in UniProt that catalyze these Rhea reactions\n  ?protein up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  ?protein a up:Protein . # Ensure it's a protein entry\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "e66d8b00-a46e-4dae-b2c3-565d5c4844f0",
    "evaluation_timestamp": "2025-05-22T03:38:21.680750",
    "question_understanding_prompt_tokens": 251,
    "question_understanding_completion_tokens": 26,
    "question_understanding_total_tokens": 277,
    "planning_prompt_tokens": 6002,
    "planning_completion_tokens": 135,
    "planning_total_tokens": 6137,
    "pattern_prompt_tokens": 17436,
    "pattern_completion_tokens": 260,
    "pattern_total_tokens": 17696,
    "assembler_prompt_tokens": 4102,
    "assembler_completion_tokens": 0,
    "assembler_total_tokens": 4102,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.054502160684363705,
    "result_eval_precision": 0.02801450589301904,
    "result_eval_recall": 1.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/38",
    "natural_language_question": "For the human entry P05067 (Amyloid-beta precursor protein) find the gene start ends in WikiData",
    "ground_truth_query": "PREFIX p: <http://www.wikidata.org/prop/>\nPREFIX pq: <http://www.wikidata.org/prop/qualifier/>\nPREFIX ps: <http://www.wikidata.org/prop/statement/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n\n\nSELECT \n\t?protein \n\t?begin\n\t?end\n\t?chromosome\n\t?assembly\nWHERE {\n    {\n        BIND(uniprotkb:P05067 AS ?proteinIRI)\n        BIND (SUBSTR(STR(?proteinIRI), STRLEN(STR(uniprotkb:))+1) AS ?protein)\n    }\n    SERVICE <https://query.wikidata.org/sparql> {\n        ?wp wdt:P352 ?protein ;\n            wdt:P702 ?wg . \n        ?wg p:P644   ?wgss .\n        ?wgss ps:P644        ?begin ;\n          pq:P1057/wdt:P1813 ?chromosome ;\n          pq:P659/rdfs:label ?assembly .\n        ?wg p:P645 ?wgse .\n        ?wgse ps:P645        ?end ;\n          pq:P1057/wdt:P1813 ?chromosome ;\n          pq:P659/rdfs:label ?assembly .\n        FILTER(lang(?assembly) = \"en\")\n  } \n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://query.wikidata.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/38_find_gene_region_in_wikidata_for_known_entry.ttl",
    "predicted_query": "# Primary endpoint: https://sparql.uniprot.org/sparql\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n\nSELECT ?proteinWikidataItem ?geneWikidataItem ?geneStart ?geneEnd\nWHERE {\n  # The UniProt ID P05067 is used directly within the Wikidata service block\n  # to find the corresponding Wikidata protein item.\n  # No direct join variable from UniProt is needed in this specific case,\n  # as the UniProt ID is a literal value in Wikidata.\n\n  SERVICE <https://query.wikidata.org/sparql> {\n    # Find the Wikidata item for the protein using its UniProt accession (P352)\n    ?proteinWikidataItem wdt:P352 \"P05067\" .\n\n    # Find the gene Wikidata item that encodes this protein (P702: encoded by)\n    ?proteinWikidataItem wdt:P702 ?geneWikidataItem .\n\n    # Get the gene start position (P644: gene start)\n    ?geneWikidataItem wdt:P644 ?geneStart .\n\n    # Get the gene end position (P645: gene end)\n    ?geneWikidataItem wdt:P645 ?geneEnd .\n  }\n}",
    "predicted_endpoint": "Primary",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "38f1aad9-7c4a-4d74-8634-07c08ca1048a",
    "evaluation_timestamp": "2025-05-22T03:39:46.777194",
    "question_understanding_prompt_tokens": 266,
    "question_understanding_completion_tokens": 52,
    "question_understanding_total_tokens": 318,
    "planning_prompt_tokens": 5757,
    "planning_completion_tokens": 185,
    "planning_total_tokens": 5942,
    "pattern_prompt_tokens": 11222,
    "pattern_completion_tokens": 422,
    "pattern_total_tokens": 11644,
    "assembler_prompt_tokens": 3909,
    "assembler_completion_tokens": 339,
    "assembler_total_tokens": 4248,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "unknown url type: 'Primary?query=%23+Primary+endpoint%3A+https%3A//sparql.uniprot.org/sparql%0APREFIX+uniprotkb%3A+%3Chttp%3A//purl.uniprot.org/uniprot/%3E%0APREFIX+wd%3A+%3Chttp%3A//www.wikidata.org/entity/%3E%0APREFIX+wdt%3A+%3Chttp%3A//www.wikidata.org/prop/direct/%3E%0A%0ASELECT+%3FproteinWikidataItem+%3FgeneWikidataItem+%3FgeneStart+%3FgeneEnd%0AWHERE+%7B%0A++%23+The+UniProt+ID+P05067+is+used+directly+within+the+Wikidata+service+block%0A++%23+to+find+the+corresponding+Wikidata+protein+item.%0A++%23+No+direct+join+variable+from+UniProt+is+needed+in+this+specific+case%2C%0A++%23+as+the+UniProt+ID+is+a+literal+value+in+Wikidata.%0A%0A++SERVICE+%3Chttps%3A//query.wikidata.org/sparql%3E+%7B%0A++++%23+Find+the+Wikidata+item+for+the+protein+using+its+UniProt+accession+%28P352%29%0A++++%3FproteinWikidataItem+wdt%3AP352+%22P05067%22+.%0A%0A++++%23+Find+the+gene+Wikidata+item+that+encodes+this+protein+%28P702%3A+encoded+by%29%0A++++%3FproteinWikidataItem+wdt%3AP702+%3FgeneWikidataItem+.%0A%0A++++%23+Get+the+gene+start+position+%28P644%3A+gene+start%29%0A++++%3FgeneWikidataItem+wdt%3AP644+%3FgeneStart+.%0A%0A++++%23+Get+the+gene+end+position+%28P645%3A+gene+end%29%0A++++%3FgeneWikidataItem+wdt%3AP645+%3FgeneEnd+.%0A++%7D%0A%7D&format=json&output=json&results=json'"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/117_biosodafrontend_glioblastoma_orthologs_rat",
    "natural_language_question": "Which are the proteins associated with glioblastoma and the orthologs expressed in the rat brain?",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX obo: <http://purl.obolibrary.org/obo/>\nPREFIX orth: <http://purl.org/net/orth#>\nPREFIX sio: <http://semanticscience.org/resource/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX genex: <http://purl.org/genex#>\nSELECT DISTINCT ?protein ?orthologous_protein ?gene ?annotation_text WHERE {\n  {\n  \tSELECT ?protein ?annotation_text WHERE {\n      ?protein a up:Protein ;\n          up:organism taxon:9606 ;\n          up:annotation ?annotation .\n      ?annotation rdfs:comment ?annotation_text .\n      ?annotation a up:Disease_Annotation .\n      FILTER CONTAINS (?annotation_text, \"glioblastoma\")\n    }\n  }\n  SERVICE <https://sparql.omabrowser.org/sparql/> {\n    SELECT ?orthologous_protein ?protein ?gene WHERE {\n    ?protein_OMA a orth:Protein .\n    ?orthologous_protein a orth:Protein .\n    ?cluster a orth:OrthologsCluster .\n    ?cluster orth:hasHomologousMember ?node1 .\n    ?cluster\n    orth:hasHomologousMember ?node2 .\n    ?node2 orth:hasHomologousMember* ?protein_OMA .\n    ?node1 orth:hasHomologousMember* ?orthologous_protein .\n    ?orthologous_protein orth:organism/obo:RO_0002162 taxon:10116 . # rattus norvegicus\n    ?orthologous_protein sio:SIO_010079 ?gene .\n    ?protein_OMA lscr:xrefUniprot ?protein .\n    FILTER(?node1 != ?node2)\n\t\t}\n\t}\n  SERVICE <https://www.bgee.org/sparql/> {\n    ?gene genex:isExpressedIn ?a .\n    ?a rdfs:label \"brain\" .\n    ?gene orth:organism ?s . \n    ?s obo:RO_0002162 taxon:10116.\n\t}\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql",
    "federates_with": [
      "https://sparql.omabrowser.org/sparql/",
      "https://www.bgee.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/117_biosodafrontend_glioblastoma_orthologs_rat.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX orthodb: <http://purl.orthodb.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n\nSELECT DISTINCT\n  ?glioblastomaProtein\n  ?glioblastomaProteinName\n  ?glioblastomaGeneName\n  ?ratOrthologProtein\n  ?ratOrthologProteinName\n  ?ratOrthologGeneName\n  ?ratOrganismName\nWHERE {\n  # 1. Find proteins associated with glioblastoma in UniProt\n  # The disease IRI for glioblastoma is http://purl.uniprot.org/diseases/2566\n  ?glioblastomaProtein up:annotation/up:disease <http://purl.uniprot.org/diseases/2566> .\n  ?glioblastomaProtein up:recommendedName/up:fullName ?glioblastomaProteinName .\n  OPTIONAL { ?glioblastomaProtein up:encodedBy/skos:prefLabel ?glioblastomaGeneName . }\n\n  # 2. Link the glioblastoma protein to its OrthoDB orthogroup\n  # UniProt entries often link to OrthoDB groups via rdfs:seeAlso\n  ?glioblastomaProtein rdfs:seeAlso ?orthoGroup .\n\n  # 3. Query OrthoDB for members of this orthogroup that are from 'rat'\n  SERVICE <https://sparql.orthodb.org/sparql> {\n    # Find members of the identified orthogroup\n    ?orthoGroup orthodb:hasMember ?orthoMember .\n    # Get the xref node for the member\n    ?orthoMember orthodb:xref ?xrefNode .\n    # Filter for members whose taxon is 'rat' (http://purl.uniprot.org/taxonomy/10116)\n    ?xrefNode orthodb:xrefTaxon <http://purl.uniprot.org/taxonomy/10116> .\n    # Get the UniProt URI of the ortholog protein from the xref node\n    ?xrefNode orthodb:xrefResource ?ratOrthologProtein .\n  }\n\n  # 4. Get details for the identified rat ortholog protein from UniProt\n  # These triples run on the primary UniProt endpoint, as ?ratOrthologProtein is a UniProt URI\n  ?ratOrthologProtein a up:Protein .\n  ?ratOrthologProtein up:recommendedName/up:fullName ?ratOrthologProteinName .\n  OPTIONAL { ?ratOrthologProtein up:encodedBy/skos:prefLabel ?ratOrthologGeneName . }\n  ?ratOrthologProtein up:organism ?ratOrganism .\n  ?ratOrganism up:scientificName ?ratOrganismName .\n  # Explicitly confirm the organism is rat, although OrthoDB already filtered by taxon\n  FILTER (?ratOrganism = <http://purl.uniprot.org/taxonomy/10116>)\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "15c49df5-9abb-4763-8e76-e6c561e200ce",
    "evaluation_timestamp": "2025-05-22T03:40:47.902868",
    "question_understanding_prompt_tokens": 258,
    "question_understanding_completion_tokens": 40,
    "question_understanding_total_tokens": 298,
    "planning_prompt_tokens": 6025,
    "planning_completion_tokens": 167,
    "planning_total_tokens": 6192,
    "pattern_prompt_tokens": 12958,
    "pattern_completion_tokens": 300,
    "pattern_total_tokens": 13258,
    "assembler_prompt_tokens": 4398,
    "assembler_completion_tokens": 722,
    "assembler_total_tokens": 5120,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "The read operation timed out"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/116_biosodafrontend_rabit_mouse_orthologs",
    "natural_language_question": "Rabbit's proteins encoded by genes that are orthologous to Mouse's HBB-Y gene and their cross reference links to Uniprot",
    "ground_truth_query": "PREFIX lscr: <http://purl.org/lscr#>\nPREFIX orth: <http://purl.org/net/orth#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX obo: <http://purl.obolibrary.org/obo/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?PROTEIN_1 ?PROTEIN_2 ?UNIPROT_XREF_1 ?UNIPROT_XREF_2 WHERE {\n\t?taxon_1 up:commonName 'Mouse' .\n\t?taxon_2 up:commonName 'Rabbit' .\n\tSERVICE <https://sparql.omabrowser.org/sparql/> {\n\t\t?cluster a orth:OrthologsCluster .\n\t\t?cluster orth:hasHomologousMember ?node1 .\n\t\t?cluster orth:hasHomologousMember ?node2 .\n\t\t?node2 orth:hasHomologousMember* ?PROTEIN_2 .\n\t\t?node1 orth:hasHomologousMember* ?PROTEIN_1 .\n\t\t?PROTEIN_1 a orth:Protein .\n\t\t?PROTEIN_1 orth:organism/obo:RO_0002162 ?taxon_1 ;\n\t\t\trdfs:label 'HBB-Y' ;\n\t\t\tlscr:xrefUniprot ?UNIPROT_XREF_1 .\n\t\t?PROTEIN_2 a orth:Protein .\n\t\t?PROTEIN_2 orth:organism/obo:RO_0002162 ?taxon_2 .\n\t\t?PROTEIN_2 lscr:xrefUniprot ?UNIPROT_XREF_2 .\n\t\tFILTER ( ?node1 != ?node2 )\n\t}\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql",
    "federates_with": [
      "https://sparql.omabrowser.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/116_biosodafrontend_rabit_mouse_orthologs.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX orthodb: <http://purl.orthodb.org/>\n\nSELECT DISTINCT ?rabbitProtein ?rabbitGene ?crossRef\nWHERE {\n  # 1. Find the Mouse HBB-Y gene and its associated protein in UniProt\n  ?mouseGene skos:prefLabel \"HBB-Y\" .\n  ?mouseProtein up:encodedBy ?mouseGene .\n  ?mouseProtein up:organism taxon:10090 . # Mouse (Mus musculus)\n\n  # 2. Find the OrthoDB orthogroup associated with the Mouse HBB-Y protein\n  # UniProt proteins are linked to OrthoDB orthogroups via rdfs:seeAlso\n  ?mouseProtein rdfs:seeAlso ?orthoGroup .\n\n  # 3. Query the OrthoDB endpoint to find members of this orthogroup that are from Rabbit\n  SERVICE <https://sparql.orthodb.org/sparql> {\n    ?orthoGroup orthodb:hasMember ?orthoMember .\n    ?orthoMember orthodb:xref ?orthoMemberXref .\n    # The orthodb:xrefResource points back to the UniProt URI of the protein\n    ?orthoMemberXref orthodb:xrefResource ?rabbitProtein .\n    # Filter for members belonging to the Rabbit taxonomy\n    ?orthoMember orthodb:xrefTaxon taxon:9986 . # Rabbit (Oryctolagus cuniculus)\n  }\n\n  # 4. Retrieve details for the identified Rabbit proteins from the main UniProt endpoint\n  ?rabbitProtein a up:Protein .\n  ?rabbitProtein up:organism taxon:9986 . # Confirm it's a rabbit protein\n  ?rabbitProtein up:encodedBy ?rabbitGene . # Get the gene encoding this protein\n  ?rabbitProtein rdfs:seeAlso ?crossRef . # Get cross-reference links for the protein\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "ddd72a70-a15c-4d4c-87f5-29b959f3eb9f",
    "evaluation_timestamp": "2025-05-22T04:38:55.971176",
    "question_understanding_prompt_tokens": 264,
    "question_understanding_completion_tokens": 49,
    "question_understanding_total_tokens": 313,
    "planning_prompt_tokens": 6017,
    "planning_completion_tokens": 159,
    "planning_total_tokens": 6176,
    "pattern_prompt_tokens": 3299,
    "pattern_completion_tokens": 138,
    "pattern_total_tokens": 3437,
    "assembler_prompt_tokens": 3222,
    "assembler_completion_tokens": 530,
    "assembler_total_tokens": 3752,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/29",
    "natural_language_question": "Use <a href=\"http://allie.dbcls.jp/\">ALLIE</a> a service for Abbreviation / Long Form in Japanese and English to search in UniProt using Japanese.",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?protein ?englishLabelStr\nWHERE {\n    SERVICE <https://data.allie.dbcls.jp/sparql>{\n        ?x rdfs:label \"アミロイド前駆体タンパク質\"@ja ;\n            rdfs:label ?englishLabel .\n        FILTER(lang(?englishLabel) = \"en\")\n    }\n    BIND (STR(?englishLabel) AS ?englishLabelStr)\n    ?protein a up:Protein .\n    {\n        ?protein (up:recommendedName|up:alternativeName) ?structuredName .\n    }\n    UNION\n    {\n        VALUES(?partType){(up:domain) (up:component)}\n            ?protein ?partType ?part .\n        ?part (up:recommendedName|up:alternativeName) ?structuredName .\n    }\n    ?structuredName ?anyKindOfName  ?englishLabelStr .\n    ?anyKindOfName rdfs:subPropertyOf up:structuredNameType .\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://data.allie.dbcls.jp/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/29_search_uniprot_in_japanese_with_allie.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT DISTINCT ?protein ?uniprotEnglishLabel\nWHERE {\n  # Step 1: Use ALLIE to find the English equivalent of a Japanese term.\n  # For demonstration, \"デオキシリボ核酸\" (Deoxyribonucleic acid) is used as an example Japanese term.\n  # You can replace \"デオキシリボ核酸\" with your desired Japanese term.\n  SERVICE <https://data.allie.dbcls.jp/sparql> {\n    ?allieEntry rdfs:label \"デオキシリボ核酸\"@ja ; # The Japanese term to search for\n                rdfs:label ?allieEnglishLabel .\n    FILTER (lang(?allieEnglishLabel) = \"en\") # Ensure we get the English form\n  }\n\n  # Step 2: Search UniProt for proteins whose recommended full name matches\n  # the English term obtained from ALLIE.\n  ?protein a up:Protein .\n  ?protein up:recommendedName ?recommendedName .\n  ?recommendedName up:fullName ?uniprotEnglishLabel .\n\n  # Join condition: The English full name from UniProt must match the English translation from ALLIE.\n  # Using LCASE(STR()) for case-insensitive comparison of string values.\n  FILTER (LCASE(STR(?uniprotEnglishLabel)) = LCASE(STR(?allieEnglishLabel)))\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "766ea261-d7f7-4603-8d7d-184d19cbbaac",
    "evaluation_timestamp": "2025-05-22T04:41:06.224397",
    "question_understanding_prompt_tokens": 277,
    "question_understanding_completion_tokens": 31,
    "question_understanding_total_tokens": 308,
    "planning_prompt_tokens": 5495,
    "planning_completion_tokens": 128,
    "planning_total_tokens": 5623,
    "pattern_prompt_tokens": 6990,
    "pattern_completion_tokens": 208,
    "pattern_total_tokens": 7198,
    "assembler_prompt_tokens": 3468,
    "assembler_completion_tokens": 365,
    "assembler_total_tokens": 3833,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "The read operation timed out"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/94_Select_all_approved_reactions_with_CHEBI_or_one_of_its_descendant_optional_UniProtKB_reviewed_EC",
    "natural_language_question": "Select all approved reactions with CHEBI:17815 (a 1,2-diacyl-sn-glycerol) or one of its descendant. Display links to UniProtKB/Swiss-Prot entries via EC numbers if the link rhea-ec exists.",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX CHEBI:<http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX up:<http://purl.uniprot.org/core/>\n\nSELECT\n  distinct\n    ?reaction\n    ?enzyme\n    (count(distinct ?protein) as ?proteinCount)\nWHERE {\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:side ?reactionSide .\n\n  OPTIONAL {?reaction rh:ec ?enzyme .\n    SERVICE <https://sparql.uniprot.org/sparql> {\n      ?protein up:reviewed true .\n      ?protein up:enzyme ?enzyme.\n    }\n  } .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi .\n  ?chebi rdfs:subClassOf* CHEBI:17815 .\n}\nGROUP BY ?reaction ?enzyme\nORDER BY ?reaction\nLIMIT 985915",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/94_Select_all_approved_reactions_with_CHEBI_or_one_of_its_descendant_optional_UniProtKB_reviewed_EC.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX enzyme: <http://purl.uniprot.org/enzyme/>\n\nSELECT DISTINCT ?reaction ?ecNumber ?uniprotEntry\nWHERE {\n  # Part 1: Find approved reactions in Rhea-DB involving CHEBI:17815 or its descendants\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:side ?reactionSide .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi .\n  ?chebi rdfs:subClassOf* CHEBI:17815 .\n\n  # Part 2: Optionally link to UniProtKB/Swiss-Prot entries via EC numbers\n  OPTIONAL {\n    ?reaction rh:ec ?ecNumber . # Get EC number from Rhea (e.g., \"1.2.3.4\")\n\n    SERVICE <https://sparql.uniprot.org/sparql> {\n      # Construct the UniProt EC URI from the literal EC number\n      BIND(IRI(CONCAT(STR(enzyme:), ?ecNumber)) AS ?ecUri)\n      \n      # Find UniProt entries associated with this EC number\n      ?uniprotEntry up:enzyme ?ecUri .\n    }\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "39f9ad92-8931-4776-830c-a4ad8ccfa9aa",
    "evaluation_timestamp": "2025-05-22T05:42:32.822772",
    "question_understanding_prompt_tokens": 295,
    "question_understanding_completion_tokens": 88,
    "question_understanding_total_tokens": 383,
    "planning_prompt_tokens": 4914,
    "planning_completion_tokens": 180,
    "planning_total_tokens": 5094,
    "pattern_prompt_tokens": 11173,
    "pattern_completion_tokens": 239,
    "pattern_total_tokens": 11412,
    "assembler_prompt_tokens": 3767,
    "assembler_completion_tokens": 404,
    "assembler_total_tokens": 4171,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "Query timed out after 610 seconds (enforced by asyncio). Results may be partial."
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/11",
    "natural_language_question": "Distribution of reactions according to the first class of the enzyme classification (federated query)",
    "ground_truth_query": "PREFIX ec: <http://purl.uniprot.org/enzyme/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n\n# Query 11\n# Retrieve the count of reactions mapped to each level (main class) of the enzyme classification\n#\n# This query mimics the Filter section of the Rhea website (Browse all reactions)\n# https://www.rhea-db.org/rhea?query=\nSELECT ?ecClass (STR(?ecName) AS ?ecClassName) (COUNT(?rhea) AS ?rheaCount)\nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    VALUES (?ecClass) { (ec:1.-.-.-)(ec:2.-.-.-)(ec:3.-.-.-)(ec:4.-.-.-)(ec:5.-.-.-) (ec:6.-.-.-) (ec:7.-.-.-)}\n    ?ecNumber rdfs:subClassOf ?ecClass .\n    ?ecClass skos:prefLabel ?ecName .\n  }\n  ?rhea rdfs:subClassOf rh:Reaction .\n  ?rhea rh:ec ?ecNumber .\n} GROUP BY ?ecClass ?ecName",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/11.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX ec: <http://purl.uniprot.org/enzyme/>\n\nSELECT\n  ?ecClass\n  (str(?ecName) as ?ecClassName)\n  (count(?reaction) as ?reactionCount)\nWHERE\n{\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    # Define the first level EC classes\n    VALUES (?ecClass) {\n      (ec:1.-.-.-)\n      (ec:2.-.-.-)\n      (ec:3.-.-.-)\n      (ec:4.-.-.-)\n      (ec:5.-.-.-)\n      (ec:6.-.-.-)\n      (ec:7.-.-.-)\n    }\n    # Link specific EC numbers to their first level class\n    ?ecNumber rdfs:subClassOf ?ecClass .\n    # Get the preferred label for the EC class\n    ?ecClass skos:prefLabel ?ecName .\n  }\n  # Find all Rhea reactions\n  ?reaction rdfs:subClassOf rh:Reaction .\n  # Link Rhea reactions to their EC numbers\n  ?reaction rh:ec ?ecNumber .\n}\nGROUP BY ?ecClass ?ecName\nORDER BY ?ecClass",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "5e2d5aa3-1b62-47ee-8b30-9da89daec3a0",
    "evaluation_timestamp": "2025-05-22T05:53:25.632445",
    "question_understanding_prompt_tokens": 254,
    "question_understanding_completion_tokens": 24,
    "question_understanding_total_tokens": 278,
    "planning_prompt_tokens": 5156,
    "planning_completion_tokens": 120,
    "planning_total_tokens": 5276,
    "pattern_prompt_tokens": 17720,
    "pattern_completion_tokens": 96,
    "pattern_total_tokens": 17816,
    "assembler_prompt_tokens": 4259,
    "assembler_completion_tokens": 369,
    "assembler_total_tokens": 4628,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 1.0,
    "result_eval_precision": 1.0,
    "result_eval_recall": 1.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/109_Distribution_of_reactions_according_to_the_first_level_of_enzyme_classification",
    "natural_language_question": "Distribution of reactions according to the first level of enzyme classification",
    "ground_truth_query": "\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>\nPREFIX skos:<http://www.w3.org/2004/02/skos/core#>\n\nSELECT\n  ?ecClass\n  (str(?ecName) as ?ecClassName)\n  (count(?reaction) as ?reactionCount)\nWHERE\n{\n  SERVICE <http://sparql.uniprot.org/sparql> {\n    VALUES (?ecClass) { (ec:1.-.-.-)(ec:2.-.-.-)(ec:3.-.-.-)(ec:4.-.-.-)(ec:5.-.-.-) (ec:6.-.-.-) (ec:7.-.-.-) }\n    ?ecNumber rdfs:subClassOf ?ecClass .\n    ?ecClass skos:prefLabel ?ecName .\n  }\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:ec ?ecNumber .\n}\nGROUP BY ?ecClass ?ecName\n",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "http://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/109_Distribution_of_reactions_according_to_the_first_level_of_enzyme_classification.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql/\nPREFIX ec: <http://purl.uniprot.org/enzyme/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n\nSELECT ?ecClass (STR(?ecName) AS ?ecClassName) (COUNT(?rhea) AS ?rheaCount)\nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    VALUES (?ecClass) { (ec:1.-.-.-)(ec:2.-.-.-)(ec:3.-.-.-)(ec:4.-.-.-)(ec:5.-.-.-) (ec:6.-.-.-) (ec:7.-.-.-)}\n    ?ecNumber rdfs:subClassOf ?ecClass .\n    ?ecClass skos:prefLabel ?ecName .\n  }\n  ?rhea rdfs:subClassOf rh:Reaction .\n  ?rhea rh:ec ?ecNumber .\n}\nGROUP BY ?ecClass ?ecName\nORDER BY ?ecClass",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "918cdc0c-1c23-41c8-b1ad-1a64ebf01f09",
    "evaluation_timestamp": "2025-05-22T05:54:04.215127",
    "question_understanding_prompt_tokens": 251,
    "question_understanding_completion_tokens": 27,
    "question_understanding_total_tokens": 278,
    "planning_prompt_tokens": 5123,
    "planning_completion_tokens": 180,
    "planning_total_tokens": 5303,
    "pattern_prompt_tokens": 0,
    "pattern_completion_tokens": 0,
    "pattern_total_tokens": 0,
    "assembler_prompt_tokens": 3272,
    "assembler_completion_tokens": 0,
    "assembler_total_tokens": 3272,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 1.0,
    "result_eval_precision": 1.0,
    "result_eval_recall": 1.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/12",
    "natural_language_question": "Select all Rhea reactions linked to protein sequences (enzymes and transporters) in UniProtKB",
    "ground_truth_query": "PREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n# Query 12\n# Select all Rhea reactions used to annotate enzyme sequences in UniProtKB\n# return the number of UniProtKB entries\n# Federated query using a service to UniProt SPARQL endpoint\n#\n# This query corresponds to the Rhea website query:\n# https://www.rhea-db.org/rhea?query=uniprot:*\n#\nSELECT ?uniprotCount ?rhea ?accession ?equation \nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> { \n  \tSELECT ?rhea (count(?uniprot) as ?uniprotCount) {\n      ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea . \n  \t}\n  \tGROUP BY ?rhea\n  }\n  ?rhea rh:accession ?accession .\n  ?rhea rh:equation ?equation .\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/12.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT DISTINCT ?protein ?rhea ?rheaAccession ?rheaEquation\nWHERE {\n  # Filter for reviewed UniProtKB entries (Swiss-Prot) for quality\n  ?protein up:reviewed true .\n\n  { # Path for enzymes: proteins with catalytic activity linked to Rhea reactions\n    ?protein up:annotation ?annotation .\n    ?annotation up:catalyticActivity ?catalyticActivity .\n    ?catalyticActivity up:catalyzedReaction ?rhea .\n  }\n  UNION\n  { # Path for transporters: proteins with transporter activity linked to Rhea reactions\n    ?protein up:annotation ?annotation .\n    ?annotation up:transporterActivity ?transporterActivity .\n    ?transporterActivity up:transportedReaction ?rhea .\n  }\n  \n  # Federated call to the Rhea-DB endpoint to retrieve details about the Rhea reaction\n  SERVICE <https://sparql.rhea-db.org/sparql/> {\n    # Get the Rhea accession number\n    ?rhea rh:accession ?rheaAccession .\n    # Get the Rhea reaction equation\n    ?rhea rh:equation ?rheaEquation .\n    # Ensure that ?rhea is indeed a Rhea Reaction (as per Rhea schema)\n    ?rhea rdfs:subClassOf rh:Reaction .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "5d606755-897d-426a-9196-0047caeea86c",
    "evaluation_timestamp": "2025-05-22T05:55:06.361630",
    "question_understanding_prompt_tokens": 255,
    "question_understanding_completion_tokens": 30,
    "question_understanding_total_tokens": 285,
    "planning_prompt_tokens": 5303,
    "planning_completion_tokens": 116,
    "planning_total_tokens": 5419,
    "pattern_prompt_tokens": 0,
    "pattern_completion_tokens": 0,
    "pattern_total_tokens": 0,
    "assembler_prompt_tokens": 3451,
    "assembler_completion_tokens": 0,
    "assembler_total_tokens": 3451,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.9953913481274932,
    "result_eval_precision": 0.9910542145446133,
    "result_eval_recall": 0.9997666096156839,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/112_Total_number_of_reaction_ec_protein_links",
    "natural_language_question": "Total number of <reaction> <ec> <protein> links",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX up:<http://purl.uniprot.org/core/>\n\nSELECT\n  (count(?reaction) as ?reactionEcProteinLinkCount)\nWHERE {\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:ec ?enzyme\n  SERVICE <http://sparql.uniprot.org/sparql> {\n    ?protein up:reviewed true .\n    ?protein up:enzyme ?enzyme.\n  }\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "http://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/112_Total_number_of_reaction_ec_protein_links.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX ec: <http://purl.uniprot.org/enzyme/>\n\nSELECT (COUNT(*) AS ?totalReactionECProteinLinks)\nWHERE {\n  # Get reactions and their associated EC numbers from Rhea-DB\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:ec ?enzyme . # ?enzyme is the join variable\n\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    # Get proteins linked to the same EC numbers from UniProt\n    ?protein up:reviewed true . # Filter for reviewed proteins\n    ?protein up:enzyme ?enzyme . # Join with ?enzyme from Rhea-DB\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "24f097a3-cf04-4aed-bbec-0f1a25ff5d32",
    "evaluation_timestamp": "2025-05-22T05:58:21.052118",
    "question_understanding_prompt_tokens": 255,
    "question_understanding_completion_tokens": 21,
    "question_understanding_total_tokens": 276,
    "planning_prompt_tokens": 5208,
    "planning_completion_tokens": 137,
    "planning_total_tokens": 5345,
    "pattern_prompt_tokens": 15525,
    "pattern_completion_tokens": 102,
    "pattern_total_tokens": 15627,
    "assembler_prompt_tokens": 3333,
    "assembler_completion_tokens": 0,
    "assembler_total_tokens": 3333,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/19_draft_human_metabolome",
    "natural_language_question": "Generate a draft human metabolome",
    "ground_truth_query": "PREFIX chebislash: <http://purl.obolibrary.org/obo/chebi/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  ?uniprot ?mnemonic ?rhea ?chebi ?smiles ?inchiKey\nWHERE\n{\n  ?rhea rh:side/rh:contains/rh:compound ?compound .\n  ?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?chebi .\n  ?chebi chebislash:smiles ?smiles ;\n          chebislash:inchikey ?inchiKey .\n  SERVICE <https://sparql.uniprot.org/sparql> {\n     ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea ;\n                                             up:organism taxon:9606 ;\n                                             up:mnemonic ?mnemonic .\n\n   }\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/19_draft_human_metabolome.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX keywords: <http://purl.uniprot.org/keywords/>\nPREFIX ec: <http://purl.uniprot.org/enzyme/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT\n  ?chebi\n  ?reaction\n  ?ecNumber\n  ?protein\n  ?ensemblTranscript\n  ?ensemblGene\nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein up:reviewed true .\n    ?protein up:organism taxon:9606 . # Human\n    ?protein up:classifiedWith keywords:1185 . # Metabolome\n\n    # Link protein to EC number\n    { ?protein up:enzyme ?ecNumber . }\n    UNION\n    { ?protein up:domain/up:enzyme ?ecNumber . }\n    UNION\n    { ?protein up:component/up:enzyme ?ecNumber . }\n\n    # Link protein to Ensembl gene/transcript\n    OPTIONAL { # Make these optional as not all proteins might have Ensembl links\n      ?protein rdfs:seeAlso ?ensemblTranscript .\n      ?ensemblTranscript a up:Transcript_Resource .\n      ?ensemblTranscript up:database <http://purl.uniprot.org/database/Ensembl> .\n      ?ensemblTranscript up:transcribedFrom ?ensemblGene .\n    }\n  }\n\n  # Rhea part: Find reactions associated with the EC numbers and their compounds\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:ec ?ecNumber . # Join variable with UniProt\n  ?reaction rh:side ?reactionSide .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi . # The ChEBI identifier for the metabolite\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "db5d49ab-d841-41db-940e-57367ee506d6",
    "evaluation_timestamp": "2025-05-22T05:59:46.864919",
    "question_understanding_prompt_tokens": 244,
    "question_understanding_completion_tokens": 20,
    "question_understanding_total_tokens": 264,
    "planning_prompt_tokens": 5596,
    "planning_completion_tokens": 102,
    "planning_total_tokens": 5698,
    "pattern_prompt_tokens": 9804,
    "pattern_completion_tokens": 366,
    "pattern_total_tokens": 10170,
    "assembler_prompt_tokens": 4994,
    "assembler_completion_tokens": 546,
    "assembler_total_tokens": 5540,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.4152560531390615,
    "result_eval_precision": 0.6956209619526202,
    "result_eval_recall": 0.29596823457544286,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/20_search_chemical_names_in_japanese",
    "natural_language_question": "Search for Chemical names starting in Japanese, translated to english using allie",
    "ground_truth_query": "PREFIX oboInOwl: <http://www.geneontology.org/formats/oboInOwl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT\n*\nWHERE {\nSERVICE <https://data.allie.dbcls.jp/sparql>{\n        ?x rdfs:label \"1,2,4-トリクロロベンゼン\"@ja ;\n            rdfs:label ?englishLabel .\n        FILTER(lang(?englishLabel) = \"en\")\n    }\n  BIND(STR(?englishLabel) AS ?englishLabelStr)\n  ?chebi rdfs:label|oboInOwl:hasSynonym ?englishLabelStr .\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql/",
    "federates_with": [
      "https://data.allie.dbcls.jp/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/20_search_chemical_names_in_japanese.ttl",
    "predicted_query": "# Primary endpoint: https://sparql.rhea-db.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT ?compound ?japaneseLabel ?englishLabel\nWHERE {\n  # Get ChEBI entities linked to Rhea compounds from the primary Rhea-DB endpoint\n  ?compound rh:chebi ?chebiEntity .\n\n  # Federate with Allie to get Japanese and English labels for the same ChEBI entity\n  SERVICE <https://data.allie.dbcls.jp/sparql> {\n    # ?chebiEntity is the join variable, representing the chemical entity\n    ?chebiEntity rdfs:label ?japaneseLabel .\n    ?chebiEntity rdfs:label ?englishLabel .\n    FILTER (lang(?japaneseLabel) = \"ja\")\n    FILTER (lang(?englishLabel) = \"en\")\n  }\n}",
    "predicted_endpoint": "Primary",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "0b9ee692-1799-4bc3-92cf-9cf00891ab4d",
    "evaluation_timestamp": "2025-05-22T06:03:26.820055",
    "question_understanding_prompt_tokens": 255,
    "question_understanding_completion_tokens": 23,
    "question_understanding_total_tokens": 278,
    "planning_prompt_tokens": 4476,
    "planning_completion_tokens": 121,
    "planning_total_tokens": 4597,
    "pattern_prompt_tokens": 7482,
    "pattern_completion_tokens": 252,
    "pattern_total_tokens": 7734,
    "assembler_prompt_tokens": 3346,
    "assembler_completion_tokens": 0,
    "assembler_total_tokens": 3346,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "unknown url type: 'Primary?query=%23+Primary+endpoint%3A+https%3A//sparql.rhea-db.org/sparql%0APREFIX+rdfs%3A+%3Chttp%3A//www.w3.org/2000/01/rdf-schema%23%3E%0APREFIX+rh%3A+%3Chttp%3A//rdf.rhea-db.org/%3E%0APREFIX+CHEBI%3A+%3Chttp%3A//purl.obolibrary.org/obo/CHEBI_%3E%0A%0ASELECT+%3Fcompound+%3FjapaneseLabel+%3FenglishLabel%0AWHERE+%7B%0A++%23+Get+ChEBI+entities+linked+to+Rhea+compounds+from+the+primary+Rhea-DB+endpoint%0A++%3Fcompound+rh%3Achebi+%3FchebiEntity+.%0A%0A++%23+Federate+with+Allie+to+get+Japanese+and+English+labels+for+the+same+ChEBI+entity%0A++SERVICE+%3Chttps%3A//data.allie.dbcls.jp/sparql%3E+%7B%0A++++%23+%3FchebiEntity+is+the+join+variable%2C+representing+the+chemical+entity%0A++++%3FchebiEntity+rdfs%3Alabel+%3FjapaneseLabel+.%0A++++%3FchebiEntity+rdfs%3Alabel+%3FenglishLabel+.%0A++++FILTER+%28lang%28%3FjapaneseLabel%29+%3D+%22ja%22%29%0A++++FILTER+%28lang%28%3FenglishLabel%29+%3D+%22en%22%29%0A++%7D%0A%7D&format=json&output=json&results=json'"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/117_Retrieve_parent_reactions_and_their_catalyzing_enzymes_for_a_metabolite_that_is_not_directly_involved_in_a_reaction",
    "natural_language_question": "Retrieve parent reactions (and their catalyzing enzymes) for a metabolite that is not directly involved in a reaction (ex: CHEBI:83137).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX up:<http://purl.uniprot.org/core/>\nPREFIX taxon:<http://purl.uniprot.org/taxonomy/>\nPREFIX keywords:<http://purl.uniprot.org/keywords/>\n\nSELECT\n  ?chebi\n  ?ecNumber\n  (count(?protein) as ?proteinCount)\n  ?reaction\n  ?equation\nWHERE {\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:equation ?equation .\n  ?reaction rh:ec ?ecNumber .\n  ?reaction rh:side ?reactionSide .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi .\n  CHEBI:83137 rdfs:subClassOf+ ?chebi.\n\n  SERVICE <https://sparql.uniprot.org/sparql> {\n  ?protein a up:Protein .\n  ?protein up:reviewed true .\n    {?protein up:enzyme ?ecNumber}\n  UNION\n    {?protein up:domain/up:enzyme ?ecNumber}\n  UNION\n    {?protein up:component/up:enzyme ?ecNumber} .\n  }\n} \nGROUP BY ?chebi ?ecNumber ?reaction ?equation",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/117_Retrieve_parent_reactions_and_their_catalyzing_enzymes_for_a_metabolite_that_is_not_directly_involved_in_a_reaction.ttl",
    "predicted_query": "# Primary endpoint: https://sparql.rhea-db.org/sparql\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX ec: <http://purl.uniprot.org/enzyme/>\n\nSELECT DISTINCT ?parentReaction ?parentReactionEquation ?ecNumber ?protein ?chebiCompoundInReaction ?reactionWithMetabolite\nWHERE {\n  # Define the target CHEBI ID for the metabolite\n  BIND (chebi:83137 AS ?targetChebi)\n\n  # Part 1: Find reactions in RHEA where a superclass of the target CHEBI is involved\n  # This addresses \"metabolite that is not directly involved in a reaction (ex: CHEBI:83137)\"\n  ?reactionWithMetabolite rh:side/rh:contains/rh:compound ?compoundNode .\n  ?compoundNode rh:chebi ?chebiCompoundInReaction .\n  ?targetChebi rdfs:subClassOf* ?chebiCompoundInReaction . # ?chebiCompoundInReaction is a superclass (or the same) of ?targetChebi\n\n  # Ensure ?reactionWithMetabolite is an approved RHEA reaction\n  ?reactionWithMetabolite rdfs:subClassOf rh:Reaction .\n  ?reactionWithMetabolite rh:status rh:Approved .\n\n  # Part 2: Find parent reactions of these reactions\n  ?reactionWithMetabolite rdfs:subClassOf ?parentReaction .\n  ?parentReaction rdfs:subClassOf rh:Reaction . # Ensure ?parentReaction is a RHEA reaction\n  ?parentReaction rh:status rh:Approved . # Ensure parent reaction is approved\n  OPTIONAL { ?parentReaction rh:equation ?parentReactionEquation . } # Get the equation for the parent reaction\n\n  # Part 3: Find the catalyzing EC number for the parent reaction\n  ?parentReaction rh:ec ?ecNumber .\n\n  # Part 4: Federate with UniProt to find proteins associated with the EC number\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein up:reviewed true . # Filter for reviewed proteins for better quality results\n\n    # Link protein to the EC number (?ecNumber) obtained from RHEA\n    {?protein up:enzyme ?ecNumber .}\n    UNION\n    {?protein up:domain/up:enzyme ?ecNumber .}\n    UNION\n    {?protein up:component/up:enzyme ?ecNumber .}\n  }\n}\nORDER BY ?parentReaction ?ecNumber ?protein",
    "predicted_endpoint": "Primary",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "6bd189f7-2cec-481a-aa37-8033003f87a8",
    "evaluation_timestamp": "2025-05-22T06:05:42.704736",
    "question_understanding_prompt_tokens": 270,
    "question_understanding_completion_tokens": 37,
    "question_understanding_total_tokens": 307,
    "planning_prompt_tokens": 5871,
    "planning_completion_tokens": 152,
    "planning_total_tokens": 6023,
    "pattern_prompt_tokens": 12796,
    "pattern_completion_tokens": 454,
    "pattern_total_tokens": 13250,
    "assembler_prompt_tokens": 4438,
    "assembler_completion_tokens": 647,
    "assembler_total_tokens": 5085,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "unknown url type: 'Primary?query=%23+Primary+endpoint%3A+https%3A//sparql.rhea-db.org/sparql%0APREFIX+rh%3A+%3Chttp%3A//rdf.rhea-db.org/%3E%0APREFIX+rdfs%3A+%3Chttp%3A//www.w3.org/2000/01/rdf-schema%23%3E%0APREFIX+chebi%3A+%3Chttp%3A//purl.obolibrary.org/obo/CHEBI_%3E%0APREFIX+up%3A+%3Chttp%3A//purl.uniprot.org/core/%3E%0APREFIX+ec%3A+%3Chttp%3A//purl.uniprot.org/enzyme/%3E%0A%0ASELECT+DISTINCT+%3FparentReaction+%3FparentReactionEquation+%3FecNumber+%3Fprotein+%3FchebiCompoundInReaction+%3FreactionWithMetabolite%0AWHERE+%7B%0A++%23+Define+the+target+CHEBI+ID+for+the+metabolite%0A++BIND+%28chebi%3A83137+AS+%3FtargetChebi%29%0A%0A++%23+Part+1%3A+Find+reactions+in+RHEA+where+a+superclass+of+the+target+CHEBI+is+involved%0A++%23+This+addresses+%22metabolite+that+is+not+directly+involved+in+a+reaction+%28ex%3A+CHEBI%3A83137%29%22%0A++%3FreactionWithMetabolite+rh%3Aside/rh%3Acontains/rh%3Acompound+%3FcompoundNode+.%0A++%3FcompoundNode+rh%3Achebi+%3FchebiCompoundInReaction+.%0A++%3FtargetChebi+rdfs%3AsubClassOf%2A+%3FchebiCompoundInReaction+.+%23+%3FchebiCompoundInReaction+is+a+superclass+%28or+the+same%29+of+%3FtargetChebi%0A%0A++%23+Ensure+%3FreactionWithMetabolite+is+an+approved+RHEA+reaction%0A++%3FreactionWithMetabolite+rdfs%3AsubClassOf+rh%3AReaction+.%0A++%3FreactionWithMetabolite+rh%3Astatus+rh%3AApproved+.%0A%0A++%23+Part+2%3A+Find+parent+reactions+of+these+reactions%0A++%3FreactionWithMetabolite+rdfs%3AsubClassOf+%3FparentReaction+.%0A++%3FparentReaction+rdfs%3AsubClassOf+rh%3AReaction+.+%23+Ensure+%3FparentReaction+is+a+RHEA+reaction%0A++%3FparentReaction+rh%3Astatus+rh%3AApproved+.+%23+Ensure+parent+reaction+is+approved%0A++OPTIONAL+%7B+%3FparentReaction+rh%3Aequation+%3FparentReactionEquation+.+%7D+%23+Get+the+equation+for+the+parent+reaction%0A%0A++%23+Part+3%3A+Find+the+catalyzing+EC+number+for+the+parent+reaction%0A++%3FparentReaction+rh%3Aec+%3FecNumber+.%0A%0A++%23+Part+4%3A+Federate+with+UniProt+to+find+proteins+associated+with+the+EC+number%0A++SERVICE+%3Chttps%3A//sparql.uniprot.org/sparql%3E+%7B%0A++++%3Fprotein+a+up%3AProtein+.%0A++++%3Fprotein+up%3Areviewed+true+.+%23+Filter+for+reviewed+proteins+for+better+quality+results%0A%0A++++%23+Link+protein+to+the+EC+number+%28%3FecNumber%29+obtained+from+RHEA%0A++++%7B%3Fprotein+up%3Aenzyme+%3FecNumber+.%7D%0A++++UNION%0A++++%7B%3Fprotein+up%3Adomain/up%3Aenzyme+%3FecNumber+.%7D%0A++++UNION%0A++++%7B%3Fprotein+up%3Acomponent/up%3Aenzyme+%3FecNumber+.%7D%0A++%7D%0A%7D%0AORDER+BY+%3FparentReaction+%3FecNumber+%3Fprotein&format=json&output=json&results=json'"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/18",
    "natural_language_question": "Use <a href=\"https://idsm.elixir-czech.cz/sparql\">IDSM Sachem</a> to find ChEBIs with a a <a href=\"https://www.ebi.ac.uk/chebi/searchId.do?chebiId=CHEBI:35516\">Cholestane</a> skeleton (in SMILES). Then match returned ChEBIs to Rhea undirected reactions.",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\n\n\nSELECT \n  ?rhea \n  ?chebi\nWHERE {\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n    ?chebi sachem:substructureSearch [\n        sachem:query \"[C@]12(CCC3CCCC[C@]3(C)[C@@]1([H])CC[C@]1(C)[C@@]([H])([C@@](C)([H])CCCC(C)C)CC[C@@]21[H])[H]\" ].\n  }\n  ?rhea rh:side/rh:contains/rh:compound/rdfs:subClassOf ?chebi .\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/18.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX sachem: <http://bioinfo.cz/schema/sachem#>\n\nSELECT DISTINCT ?chebi ?reaction ?equation\nWHERE {\n  # Part 1: Find ChEBIs with a Cholestane skeleton using IDSM Sachem\n  SERVICE <https://idsm.elixir-czech.cz/sparql> {\n    ?chebi sachem:smiles ?smiles .\n    # SMILES for Cholestane (CHEBI:35516)\n    FILTER (sachem:substructureSearch(?smiles, \"C[C@H](CCCC(C)C)[C@H]1CC[C@@H]2[C@@]1(C)CC[C@H]3[C@H]2CCC4=CC=C[C@@H]34\"))\n  }\n\n  # Part 2: Match these ChEBIs to Rhea undirected reactions\n  ?reaction rdfs:subClassOf rh:UndirectedReaction .\n  ?reaction rh:equation ?equation .\n  ?reaction rh:side/rh:contains/rh:compound ?compound .\n  ?compound (rh:chebi | rh:reactivePart/rh:chebi | rh:underlyingChebi/rh:chebi) ?chebi .\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "212f62f6-ef5b-4e2b-a86a-724cd639d242",
    "evaluation_timestamp": "2025-05-22T06:06:30.135396",
    "question_understanding_prompt_tokens": 332,
    "question_understanding_completion_tokens": 52,
    "question_understanding_total_tokens": 384,
    "planning_prompt_tokens": 6374,
    "planning_completion_tokens": 150,
    "planning_total_tokens": 6524,
    "pattern_prompt_tokens": 4614,
    "pattern_completion_tokens": 132,
    "pattern_total_tokens": 4746,
    "assembler_prompt_tokens": 4528,
    "assembler_completion_tokens": 367,
    "assembler_total_tokens": 4895,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/115_Retrieve_the_set_of_metabolites_involved_in_reactions_catalyzed_by_human_genes_HUMAN_reference_proteome",
    "natural_language_question": "Retrieve the set of metabolites involved in reactions catalyzed by human genes (HUMAN reference proteome)",
    "ground_truth_query": "\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX taxon:<http://purl.uniprot.org/taxonomy/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up:<http://purl.uniprot.org/core/>\nPREFIX keywords:<http://purl.uniprot.org/keywords/>\n\nSELECT\n  ?chebi\n  ?reaction\n  ?ecNumber\n  ?protein\n  ?ensemblTranscript\n  ?ensemblGene\nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein up:reviewed true .\n    ?protein up:organism taxon:9606 .\n    ?protein up:classifiedWith keywords:1185 .\n\n    ?protein rdfs:seeAlso ?ensemblTranscript .\n    ?ensemblTranscript a up:Transcript_Resource .\n    ?ensemblTranscript up:database <http://purl.uniprot.org/database/Ensembl> .\n    ?ensemblTranscript up:transcribedFrom ?ensemblGene .\n\n      {?protein up:enzyme ?ecNumber .}\n    UNION\n      {?protein up:domain/up:enzyme ?ecNumber .}\n    UNION\n      {?protein up:component/up:enzyme ?ecNumber .}\n  }\n\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:ec ?ecNumber .\n  ?reaction rh:side ?reactionSide .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi . # only considering small molecules participants\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/115_Retrieve_the_set_of_metabolites_involved_in_reactions_catalyzed_by_human_genes_HUMAN_reference_proteome.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?protein ?rhea ?chebi\nWHERE {\n  # Part 1: Find human proteins and the Rhea reactions they catalyze (from UniProt)\n  ?protein a up:Protein .\n  ?protein up:organism taxon:9606 . # Filter for human proteins\n  ?protein up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea . # Link protein to catalyzed Rhea reaction\n\n  # Part 2: Find metabolites involved in these Rhea reactions (from Rhea-DB)\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:side/rh:contains/rh:compound ?compound . # Find compounds involved in the reaction\n    ?compound (rh:chebi|rh:reactivePart/rh:chebi|rh:underlyingChebi/rh:chebi) ?chebi . # Get the CHEBI identifier for the compound\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "3106ff15-3a51-4d92-96db-ecd70eba909b",
    "evaluation_timestamp": "2025-05-22T06:07:20.438687",
    "question_understanding_prompt_tokens": 256,
    "question_understanding_completion_tokens": 26,
    "question_understanding_total_tokens": 282,
    "planning_prompt_tokens": 6743,
    "planning_completion_tokens": 167,
    "planning_total_tokens": 6910,
    "pattern_prompt_tokens": 10305,
    "pattern_completion_tokens": 234,
    "pattern_total_tokens": 10539,
    "assembler_prompt_tokens": 5121,
    "assembler_completion_tokens": 304,
    "assembler_total_tokens": 5425,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.20615900012884936,
    "result_eval_precision": 0.11609661415108886,
    "result_eval_recall": 0.919342095812684,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  }
]