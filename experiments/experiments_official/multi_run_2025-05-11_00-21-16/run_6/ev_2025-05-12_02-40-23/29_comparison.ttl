
# Natural Language Question
# =======================
Use <a href="http://allie.dbcls.jp/">ALLIE</a> a service for Abbreviation / Long Form in Japanese and English to search in UniProt using Japanese.

# Target Endpoint
# ===============
https://sparql.uniprot.org/sparql/

# Ground Truth Query
# =================
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT ?protein ?englishLabelStr
WHERE {
    SERVICE <https://data.allie.dbcls.jp/sparql>{
        ?x rdfs:label "アミロイド前駆体タンパク質"@ja ;
            rdfs:label ?englishLabel .
        FILTER(lang(?englishLabel) = "en")
    }
    BIND (STR(?englishLabel) AS ?englishLabelStr)
    ?protein a up:Protein .
    {
        ?protein (up:recommendedName|up:alternativeName) ?structuredName .
    }
    UNION
    {
        VALUES(?partType){(up:domain) (up:component)}
            ?protein ?partType ?part .
        ?part (up:recommendedName|up:alternativeName) ?structuredName .
    }
    ?structuredName ?anyKindOfName  ?englishLabelStr .
    ?anyKindOfName rdfs:subPropertyOf up:structuredNameType .
}

# Predicted Query
# ==============
# https://sparql.uniprot.org/sparql
# This query attempts to find UniProt entries related to Japanese abbreviations/long forms.
# It assumes ALLIE provides a mapping to UniProt identifiers (e.g., accession, gene name).
# Since direct ALLIE access isn't available, it uses a placeholder for the Japanese term.
# Replace "YOUR_JAPANESE_TERM_OR_MAPPING" with the actual term or mapping from ALLIE.

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT ?protein ?proteinName ?geneName
WHERE {
  # Search for proteins that have a name or gene name related to the Japanese term.
  ?protein a up:Protein .
  ?protein rdfs:label ?proteinName . # Get the protein name

  # Attempt to find gene names associated with the protein.
  OPTIONAL {
    ?protein up:gene ?gene .
    ?gene rdfs:label ?geneName .
    FILTER (CONTAINS(lcase(?geneName), "YOUR_JAPANESE_TERM_OR_MAPPING"))  # Filter gene names (case-insensitive)
  }
  
  FILTER (CONTAINS(lcase(?proteinName), "YOUR_JAPANESE_TERM_OR_MAPPING")) # Filter protein names (case-insensitive)
}
