
# Natural Language Question
# =======================
Generate a draft human metabolome

# Target Endpoint
# ===============
https://sparql.rhea-db.org/sparql/

# Ground Truth Query
# =================
PREFIX chebislash: <http://purl.obolibrary.org/obo/chebi/>
PREFIX rh: <http://rdf.rhea-db.org/>
PREFIX taxon: <http://purl.uniprot.org/taxonomy/>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT
  ?uniprot ?mnemonic ?rhea ?chebi ?smiles ?inchiKey
WHERE
{
  ?rhea rh:side/rh:contains/rh:compound ?compound .
  ?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?chebi .
  ?chebi chebislash:smiles ?smiles ;
          chebislash:inchikey ?inchiKey .
  SERVICE <https://sparql.uniprot.org/sparql> {
     ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea ;
                                             up:organism taxon:9606 ;
                                             up:mnemonic ?mnemonic .

   }
}

# Predicted Query
# ==============
# https://sparql.uniprot.org/sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX up: <http://purl.uniprot.org/core/>
PREFIX taxon: <http://purl.uniprot.org/taxonomy/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rhea: <http://rdf.rhea-db.org/>

SELECT DISTINCT ?metabolite ?metaboliteName
WHERE {
  # Find proteins associated with Homo sapiens in UniProt
  SERVICE <https://sparql.uniprot.org/sparql> {
    ?protein a up:Protein .
    ?protein up:organism taxon:9606 .  # Homo sapiens
    ?protein rdfs:seeAlso ?rheaReaction . # Link to Rhea reaction
  }

  # Get the Rhea reaction details and extract reactants/products (metabolites)
  SERVICE <https://sparql.rhea-db.org/sparql> {
    ?rheaReaction rdf:type rhea:Reaction .
    {
      ?rheaReaction rhea:left ?participant .  # Reactants
    }
    UNION
    {
      ?rheaReaction rhea:right ?participant . # Products
    }
    ?participant rhea:compound ?metabolite .
    ?metabolite rdfs:label ?metaboliteName .
  }
  
  #OPTIONAL: Integrate SwissLipids (example - requires further refinement based on specific lipid-reaction links)
  #SERVICE <https://sparql.swisslipids.org/sparql/> {
  #  ?lipid a <http://www.swisslipids.org/rdf/SwissLipids#Lipid> .
  #  ?lipid rdfs:label ?lipidName .
  #  FILTER (CONTAINS(lcase(?lipidName), "human")) #Example filter - refine based on actual links
  #  BIND(?lipid AS ?metabolite)
  #  BIND(?lipidName AS ?metaboliteName)
  #}
}
