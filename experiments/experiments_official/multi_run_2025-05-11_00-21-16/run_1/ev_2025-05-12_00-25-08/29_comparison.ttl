
# Natural Language Question
# =======================
Use <a href="http://allie.dbcls.jp/">ALLIE</a> a service for Abbreviation / Long Form in Japanese and English to search in UniProt using Japanese.

# Target Endpoint
# ===============
https://sparql.uniprot.org/sparql/

# Ground Truth Query
# =================
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT ?protein ?englishLabelStr
WHERE {
    SERVICE <https://data.allie.dbcls.jp/sparql>{
        ?x rdfs:label "アミロイド前駆体タンパク質"@ja ;
            rdfs:label ?englishLabel .
        FILTER(lang(?englishLabel) = "en")
    }
    BIND (STR(?englishLabel) AS ?englishLabelStr)
    ?protein a up:Protein .
    {
        ?protein (up:recommendedName|up:alternativeName) ?structuredName .
    }
    UNION
    {
        VALUES(?partType){(up:domain) (up:component)}
            ?protein ?partType ?part .
        ?part (up:recommendedName|up:alternativeName) ?structuredName .
    }
    ?structuredName ?anyKindOfName  ?englishLabelStr .
    ?anyKindOfName rdfs:subPropertyOf up:structuredNameType .
}

# Predicted Query
# ==============
# https://sparql.uniprot.org/sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX up: <http://purl.uniprot.org/core/>

# Query UniProt for entries related to a search term (e.g., the result from ALLIE).
# This query searches for the term in rdfs:label, skos:prefLabel, skos:altLabel, and up:annotation.
# Replace "your_search_term" with the actual term obtained from ALLIE.

SELECT DISTINCT ?entity ?label
WHERE {
  {
    ?entity rdfs:label ?label .
    FILTER (CONTAINS(LCASE(?label), "your_search_term"))  # Case-insensitive search in rdfs:label
  }
  UNION
  {
    ?entity skos:prefLabel ?label .
    FILTER (CONTAINS(LCASE(?label), "your_search_term"))  # Case-insensitive search in skos:prefLabel
  }
  UNION
  {
    ?entity skos:altLabel ?label .
    FILTER (CONTAINS(LCASE(?label), "your_search_term"))  # Case-insensitive search in skos:altLabel
  }
  UNION
  {
    ?entity up:annotation ?label .
    FILTER (CONTAINS(LCASE(?label), "your_search_term"))  # Case-insensitive search in up:annotation
  }
}
