
# Natural Language Question
# =======================
Select all Rhea reactions linked to protein sequences (enzymes and transporters) in UniProtKB

# Target Endpoint
# ===============
https://sparql.rhea-db.org/sparql

# Ground Truth Query
# =================
PREFIX rh: <http://rdf.rhea-db.org/>
PREFIX up: <http://purl.uniprot.org/core/>

# Query 12
# Select all Rhea reactions used to annotate enzyme sequences in UniProtKB
# return the number of UniProtKB entries
# Federated query using a service to UniProt SPARQL endpoint
#
# This query corresponds to the Rhea website query:
# https://www.rhea-db.org/rhea?query=uniprot:*
#
SELECT ?uniprotCount ?rhea ?accession ?equation 
WHERE {
  SERVICE <https://sparql.uniprot.org/sparql> { 
  	SELECT ?rhea (count(?uniprot) as ?uniprotCount) {
      ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea . 
  	}
  	GROUP BY ?rhea
  }
  ?rhea rh:accession ?accession .
  ?rhea rh:equation ?equation .
}

# Predicted Query
# ==============
# https://sparql.rhea-db.org/sparql
PREFIX rhea: <http://rdf.rhea-db.org/>
PREFIX uniprot: <http://purl.uniprot.org/core/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?rheaReaction ?rheaReactionId ?protein ?proteinName
WHERE {
  # Query Rhea for reactions
  SERVICE <https://sparql.rhea-db.org/sparql> {
    ?rheaReaction rdf:type rhea:Reaction .
    BIND(STRAFTER(STR(?rheaReaction), "http://rdf.rhea-db.org/") AS ?rheaReactionId)
  }
  
  # Query UniProtKB for proteins that are enzymes or transporters and link to Rhea
  SERVICE <https://sparql.uniprot.org/sparql> {
    ?protein a uniprot:Protein .
    ?protein rdfs:seeAlso ?rheaReaction . # Assuming rdfs:seeAlso links to Rhea
    ?protein uniprot:recommendedName ?proteinName .
    # Filter for enzymes or transporters (example, adjust as needed based on UniProt ontology)
    #FILTER (CONTAINS(LCASE(?proteinName), "enzyme") || CONTAINS(LCASE(?proteinName), "transferase") || CONTAINS(LCASE(?proteinName), "transporter"))
  }
}
