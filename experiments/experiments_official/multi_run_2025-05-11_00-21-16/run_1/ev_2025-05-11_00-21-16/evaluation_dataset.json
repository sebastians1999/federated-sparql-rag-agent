[
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/16",
    "natural_language_question": "For a given lipid (SWISSLIPID:000399814, Ceramide), return a list of all enzymes in UniProtKB/Swiss-Prot annotated to catalyze reactions involving that lipid.\nThis query does not consider the hierarchy: it looks for reactions and enzymes only for the specified lipid.",
    "ground_truth_query": "PREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n# Example 16\nSELECT ?startId ?startName ?uniprot\nWHERE\n{\n  # SwissLipids query (list of) identifier(s)\n  VALUES ?startId { SWISSLIPID:000399814 }\n  # name\n  ?startId rdfs:label ?startName .\n  # ChEBI x-ref\n  ?startId owl:equivalentClass ?chebi .\n  # federated query to Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n  \t?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n  }    \n  # federated query to UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?uniprot up:reviewed true .\n    ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  }\n} \nORDER BY ?startId",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/16.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n\nSELECT DISTINCT ?enzyme ?enzymeName\nWHERE {\n  # Find UniProt entries that are enzymes\n  ?enzyme a up:Protein .\n  ?enzyme rdfs:label ?enzymeName .\n  ?enzyme up:annotation ?annotation .\n  ?annotation rdf:type <http://purl.uniprot.org/core/CatalyticActivity> .\n\n  # Link enzymes to reactions (via Rhea, if applicable, or directly via SwissLipids)\n  OPTIONAL {\n    ?enzyme up:catalyticActivity ?rheaReaction .\n    ?rheaReaction rdfs:label ?reactionName .\n  }\n\n  # Subquery to find reactions in SwissLipids involving the specified lipid\n  SERVICE <https://sparql.swisslipids.org/sparql/> {\n    PREFIX sl: <http://swisslipids.org/rdf/>\n    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\n    # Find reactions involving the specific lipid\n    ?reaction sl:participants <http://swisslipids.org/rdf/SWISSLIPID:000399814> .\n    ?reaction rdfs:label ?swissLipidsReactionName .\n  }\n\n  # Filter UniProt enzymes to only include those that catalyze reactions found in SwissLipids\n  FILTER (REGEX(?swissLipidsReactionName, ?reactionName, \"i\") || !bound(?reactionName)) # \"i\" for case-insensitive matching. If no reaction name is found in UniProt, include the enzyme.\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "c4539b90-d6bd-47b6-92f5-1d309e1dca00",
    "evaluation_timestamp": "2025-05-11T00:21:34.292642",
    "question_understanding_prompt_tokens": 305,
    "question_understanding_completion_tokens": 73,
    "question_understanding_total_tokens": 378,
    "sparql_query_construction_prompt_tokens": 3313,
    "sparql_query_construction_completion_tokens": 670,
    "sparql_query_construction_total_tokens": 3983,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Encountered \" \"prefix\" \"PREFIX \"\" at line 22, column 5.\nWas expecting one of:\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n    \"select\" ...\n    \"values\" ...\n    \"graph\" ...\n    \"optional\" ...\n    \"minus\" ...\n    \"bind\" ...\n    \"service\" ...\n    \"filter\" ...\n    \"true\" ...\n    \"false\" ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n    \"(\" ...\n     ...\n    \"{\" ...\n    \"}\" ...\n    \"[\" ...\n     ...\n    \"<<(\" ...\n    \"<<\" ...",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "syntactically not correct"
  },
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/6",
    "natural_language_question": "For a given lipid (SWISSLIPID:000399814, Ceramide), return a list of all corresponding reactions (Rhea IDs and equation), as well as their enzymes as annotated in UniProtKB/Swiss-Prot) enzymes themselves (ID and protein name).\nThis query does not consider the hierarchy: it looks for reactions and enzymes only for the specified lipid.",
    "ground_truth_query": "PREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n# Example 6\nSELECT ?startId ?startName ?chebi ?rhea ?rheaEquation ?uniprot ?uniprotName\nWHERE\n{\n  # SwissLipids query (list of) identifier(s)\n  VALUES ?startId { SWISSLIPID:000399814 }\n  # name\n  ?startId rdfs:label ?startName .\n  # ChEBI x-ref\n  ?startId owl:equivalentClass ?chebi .\n  # federated query to Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n  \t?rhea rh:equation ?rheaEquation .\n  \t?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n  }    \n  # federated query to UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?uniprot up:reviewed true .\n    ?uniprot up:recommendedName/up:fullName ?uniprotName .\n    ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  }\n} \nORDER BY ?startId",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/6.ttl",
    "predicted_query": "# https://sparql.swisslipids.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX sl: <http://swisslipids.org/rdf#>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?rheaId ?equation ?enzymeId ?proteinName\nWHERE {\n  # Find reactions associated with the given lipid from SwissLipids\n  VALUES ?lipid { sl:SWISSLIPID_000399814 } # SWISSLIPID:000399814 = Ceramide\n  ?reaction sl:reaction_lipid ?lipid .\n  ?reaction sl:reaction_rhea ?rheaId .\n\n  # Get the reaction equation from Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rheaId rdfs:label ?equation .\n  }\n\n  # Find enzymes associated with the reaction from SwissLipids\n  ?reaction sl:reaction_enzyme ?enzymeResource .\n\n  # Get the enzyme ID and protein name from UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?enzymeResource rdfs:seeAlso ?enzymeId . # Assuming rdfs:seeAlso links to UniProt\n    ?enzymeId rdf:type <http://purl.uniprot.org/core/Protein> .\n    ?enzymeId rdfs:label ?proteinName .\n  }\n}",
    "predicted_endpoint": "https://sparql.swisslipids.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "9ce319a3-bd11-4956-9ea4-836efda1ab87",
    "evaluation_timestamp": "2025-05-11T00:21:49.213277",
    "question_understanding_prompt_tokens": 314,
    "question_understanding_completion_tokens": 89,
    "question_understanding_total_tokens": 403,
    "sparql_query_construction_prompt_tokens": 3328,
    "sparql_query_construction_completion_tokens": 489,
    "sparql_query_construction_total_tokens": 3817,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/5",
    "natural_language_question": "For a given lipid (SWISSLIPID:000399814, Ceramide), return a list of all corresponding reactions (Rhea IDs and equation).\nThis query does consider the hierarchy: it looks for reactions involving the specified lipid and/or its more specific forms.",
    "ground_truth_query": "PREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\n\n# Example 5\nSELECT ?startId ?startName ?id ?name ?chebi ?rhea ?rheaEquation \nWHERE\n{\n  # SwissLipids query (list of) identifier(s)\n  VALUES ?startId { SWISSLIPID:000399814 }\n  # name\n  ?startId rdfs:label ?startName .\n  # Retrieve children lipids \n  ?id rdfs:subClassOf* ?startId .\n  ?id rdfs:label ?name .\n  # ChEBI x-ref\n  ?id owl:equivalentClass ?chebi .\n  # federated query to Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n  \t?rhea rh:equation ?rheaEquation .\n  \t?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n  }    \n} \nORDER BY  ?startId ?id",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/5.ttl",
    "predicted_query": "# https://sparql.swisslipids.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX sl: <http://swisslipids.org/rdf#>\n\nSELECT DISTINCT ?rheaId ?equation\nWHERE {\n  { # Reactions directly involving the specified lipid\n    VALUES ?lipid { <http://swisslipids.org/rdf/SL_000399814> } # SWISSLIPID:000399814\n    ?reaction sl:reaction_participant ?lipid .\n    ?reaction sl:rhea_id ?rheaId .\n  }\n  UNION\n  { # Reactions involving subclasses of the specified lipid\n    VALUES ?parentLipid { <http://swisslipids.org/rdf/SL_000399814> } # SWISSLIPID:000399814\n    ?lipid rdfs:subClassOf ?parentLipid .\n    ?reaction sl:reaction_participant ?lipid .\n    ?reaction sl:rhea_id ?rheaId .\n  }\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    BIND (IRI(CONCAT(\"http://rdf.rhea-db.org/\", ?rheaId)) AS ?rheaURI) # Construct Rhea URI\n    ?rheaURI rdfs:comment ?equation . # Get reaction equation\n  }\n}",
    "predicted_endpoint": "https://sparql.swisslipids.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "3c83a53e-745a-4572-a511-f0c1f4537e54",
    "evaluation_timestamp": "2025-05-11T00:22:05.773465",
    "question_understanding_prompt_tokens": 299,
    "question_understanding_completion_tokens": 66,
    "question_understanding_total_tokens": 365,
    "sparql_query_construction_prompt_tokens": 2464,
    "sparql_query_construction_completion_tokens": 643,
    "sparql_query_construction_total_tokens": 3107,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/34",
    "natural_language_question": "Lipids affected by human enzymes",
    "ground_truth_query": "PREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?swisslipid  {\n  ?swisslipid owl:equivalentClass ?chebi .\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n\t?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?metabolite . \n  }\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?catalyticActivityAnnotation up:catalyticActivity/up:catalyzedReaction ?rhea .\n    ?protein up:annotation ?catalyticActivityAnnotation ;\n             up:organism taxon:9606 .\n  }\n}\nLIMIT 1",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/34.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?lipidName\nWHERE {\n  # Find human proteins (enzymes) in UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein up:organism <http://purl.uniprot.org/taxonomy/9606> . # Human\n    ?protein rdfs:label ?enzymeName .\n  }\n\n  # Find reactions in Rhea DB that involve these enzymes\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rhea:enzyme ?protein .\n    ?reaction rhea:has_participant ?participant .\n    ?participant rdf:type chebi:CHEBI_16708 . #CHEBI ID for chemical entity\n    ?participant rdfs:label ?lipidName .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "9865c237-82ef-4917-b91c-6daedfc7e20c",
    "evaluation_timestamp": "2025-05-11T00:22:18.268874",
    "question_understanding_prompt_tokens": 246,
    "question_understanding_completion_tokens": 20,
    "question_understanding_total_tokens": 266,
    "sparql_query_construction_prompt_tokens": 1690,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 1690,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/118_biosodafrontend_rat_brain_human_cancer",
    "natural_language_question": "What are the Homo sapiens genes associated with cancer and their orthologs expressed in the Rattus norvegicus brain?",
    "ground_truth_query": "PREFIX up:<http://purl.uniprot.org/core/>\nPREFIX taxon:<http://purl.uniprot.org/taxonomy/>\nPREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>\nPREFIX orth:<http://purl.org/net/orth#>\nPREFIX dcterms:<http://purl.org/dc/terms/>\nPREFIX obo:<http://purl.obolibrary.org/obo/>\nPREFIX lscr:<http://purl.org/lscr#>\nPREFIX genex:<http://purl.org/genex#>\nPREFIX sio: <http://semanticscience.org/resource/>\nSELECT ?gene ?orthologous_protein2 WHERE {\n  {\n    SELECT ?protein1 WHERE {\n      ?protein1 a up:Protein;\n        up:organism/up:scientificName 'Homo sapiens' ;\n        up:annotation ?annotation .\n      ?annotation rdfs:comment ?annotation_text.\n      ?annotation a up:Disease_Annotation .\n      FILTER CONTAINS (?annotation_text, \"cancer\")\n    }\n  }\n  SERVICE <https://sparql.omabrowser.org/sparql/> {\n    SELECT ?orthologous_protein2 ?protein1 ?gene WHERE {\n      ?protein_OMA a orth:Protein .\n      ?orthologous_protein2 a orth:Protein .\n      ?cluster a orth:OrthologsCluster .\n      ?cluster orth:hasHomologousMember ?node1 .\n      ?cluster orth:hasHomologousMember ?node2 .\n      ?node2 orth:hasHomologousMember* ?protein_OMA .\n      ?node1 orth:hasHomologousMember* ?orthologous_protein2 \n      .?orthologous_protein2 orth:organism/obo:RO_0002162/up:scientificName 'Rattus norvegicus' .\n      ?orthologous_protein2 sio:SIO_010079 ?gene .\n      ?protein_OMA lscr:xrefUniprot ?protein1 .\n      FILTER(?node1 != ?node2)\n    }\n  }\n  SERVICE <https://www.bgee.org/sparql/> {\n    ?gene genex:isExpressedIn ?anatEntity .\n    ?anatEntity rdfs:label 'brain' .\n    ?gene orth:organism ?org . \n    ?org obo:RO_0002162 taxon:10116 .\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql",
    "federates_with": [
      "https://sparql.omabrowser.org/sparql/",
      "https://www.bgee.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/118_biosodafrontend_rat_brain_human_cancer.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX disease: <http://purl.uniprot.org/diseases/>\n\nSELECT DISTINCT ?humanGene ?ratOrtholog\nWHERE {\n  # Find human genes associated with cancer\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?humanGene a up:Protein .\n    ?humanGene up:organism taxon:9606 .  # Homo sapiens\n    ?humanGene up:annotation ?diseaseAnnotation .\n    ?diseaseAnnotation a up:Disease_Annotation .\n    ?diseaseAnnotation rdfs:seeAlso ?disease .\n    FILTER (CONTAINS(str(?disease), \"purl.uniprot.org/diseases\")) # Ensure it's a disease URI\n    FILTER (regex(str(?diseaseAnnotation), \"cancer\", \"i\")) # Filter for cancer-related annotations\n  }\n\n  # Find rat orthologs of the human genes\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?ratOrtholog a up:Protein .\n    ?ratOrtholog up:organism taxon:10116 . # Rattus norvegicus\n    ?ratOrtholog up:gene ?gene .\n    ?gene up:name ?geneName .\n    ?humanGene up:gene ?humanGeneName .\n    FILTER (?geneName = ?humanGeneName) # Assuming gene names are the same for orthologs.  This is a simplification.\n    #OPTIONAL { ?ratOrtholog up:expression ?expression .  FILTER (contains(lcase(str(?expression)), \"brain\")) .} #Attempt to filter by brain expression.  This is unlikely to work directly.\n  }\n  #Expression data is not available in UniProt SPARQL.\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "010c9622-2acb-48bb-9b16-376f52ecd8c6",
    "evaluation_timestamp": "2025-05-11T00:22:58.761310",
    "question_understanding_prompt_tokens": 259,
    "question_understanding_completion_tokens": 47,
    "question_understanding_total_tokens": 306,
    "sparql_query_construction_prompt_tokens": 3112,
    "sparql_query_construction_completion_tokens": 662,
    "sparql_query_construction_total_tokens": 3774,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/51",
    "natural_language_question": "Find all proteins linked to arachidonate (CHEBI:32395)",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n\nSELECT \n    DISTINCT\n        ?uniprot\n        ?uniprotID\n        ?recname\n        ?gene\n        ?chebi\n        ?uniprotName\nWHERE {\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n     VALUES (?chebi) { (CHEBI:32395) }\n     ?rhea rh:side/rh:contains/rh:compound ?compound .\n     ?compound rh:chebi ?chebi .\n     ?chebi up:name ?uniprotName .\n  }\n  ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  ?uniprot up:mnemonic ?uniprotID .\n  ?uniprot up:recommendedName/up:fullName ?recname .\n  OPTIONAL {?uniprot up:encodedBy/skos:prefLabel ?gene .}\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/51_all_proteins_linked_to_arachidonate.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?protein ?proteinName\nWHERE {\n  # Query UniProt for proteins\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein rdfs:label ?proteinName .\n    # Look for proteins that might be related to reactions involving arachidonate\n    FILTER EXISTS {\n      # Subquery to link to Rhea and find reactions involving arachidonate\n      SERVICE <https://sparql.rhea-db.org/sparql> {\n        PREFIX rhea: <http://rdf.rhea-db.org/>\n        PREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\n\n        ?reaction rhea: Rhea_has_participant chebi:CHEBI_32395 . # arachidonate\n        # Attempt to link the reaction to a protein (this might require further refinement based on Rhea's schema)\n        ?reaction rdfs:comment ?proteinName . #Trying to link reaction to protein name\n      }\n      \n    }\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "3cca8246-be1e-4925-8bb1-2b386defccb6",
    "evaluation_timestamp": "2025-05-11T00:23:11.260786",
    "question_understanding_prompt_tokens": 255,
    "question_understanding_completion_tokens": 31,
    "question_understanding_total_tokens": 286,
    "sparql_query_construction_prompt_tokens": 1980,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 1980,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Encountered \" \"prefix\" \"PREFIX \"\" at line 15, column 9.\nWas expecting one of:\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n    \"select\" ...\n    \"values\" ...\n    \"graph\" ...\n    \"optional\" ...\n    \"minus\" ...\n    \"bind\" ...\n    \"service\" ...\n    \"filter\" ...\n    \"true\" ...\n    \"false\" ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n    \"(\" ...\n     ...\n    \"{\" ...\n    \"}\" ...\n    \"[\" ...\n     ...\n    \"<<(\" ...\n    \"<<\" ...",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "syntactically not correct"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/40",
    "natural_language_question": "Retrieve human enzymes that metabolize sphingolipids and are annotated in ChEMBL",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?protein ?chemblEntry\nWHERE {\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rdfs:subClassOf rh:Reaction ;\n      rh:side/rh:contains/rh:compound/rh:chebi/rdfs:subClassOf+ CHEBI:26739 .\n  }\n  ?ca up:catalyzedReaction ?rhea .\n  ?protein up:annotation/up:catalyticActivity ?ca ;\n    up:organism taxon:9606 ;\n    rdfs:seeAlso ?chemblEntry .\n  ?chemblEntry up:database <http://purl.uniprot.org/database/ChEMBL> .\n}\nLIMIT 10",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/40_human_enzymes_that_metabolize_sphingolipids.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\n\nSELECT DISTINCT ?enzyme ?enzymeName\nWHERE {\n  # Find human proteins (enzymes) in UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?enzyme a up:Protein .\n    ?enzyme up:organism taxon:9606 .  # 9606 is the NCBI taxonomy ID for Homo sapiens\n    ?enzyme rdfs:label ?enzymeName .\n  }\n\n  # Find lipids metabolized by enzymes in SwissLipids and filter for sphingolipids\n  SERVICE <https://sparql.swisslipids.org/sparql/> {\n    ?reaction a <http://rdf.swisslipids.org/vocabulary/Reaction> .\n    ?reaction <http://rdf.swisslipids.org/vocabulary/enzyme> ?enzyme .\n    ?reaction <http://rdf.swisslipids.org/vocabulary/substrate> ?lipid .\n    ?lipid rdfs:label ?lipidName .\n    FILTER (contains(lcase(?lipidName), \"sphingolipid\")) # Filter for sphingolipids\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "e6cef168-1ed8-4356-ad3f-68f5c09cedd5",
    "evaluation_timestamp": "2025-05-11T00:23:21.707186",
    "question_understanding_prompt_tokens": 256,
    "question_understanding_completion_tokens": 33,
    "question_understanding_total_tokens": 289,
    "sparql_query_construction_prompt_tokens": 2039,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 2039,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/49",
    "natural_language_question": "Retrieve the UniProtKB proteins, their catalyzed Rhea reactions, their encoding genes (Ensembl) and the anatomic entities where the genes are expressed (UBERON anatomic entites from Bgee expression data resource).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX genex: <http://purl.org/genex#>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?protein ?ensemblGene ?reaction ?anatomicEntityLabel ?anatomicEntity\nWHERE {\n  # federated query to Rhea enadpoint\n  {\n    SELECT DISTINCT ?reaction WHERE {\n      SERVICE <https://sparql.rhea-db.org/sparql> {\n        ?reaction rdfs:subClassOf rh:Reaction ;\n          rh:equation ?reactionEquation ;\n          rh:side ?reactionSide .\n        ?reactionSide rh:contains ?participant .\n        ?participant rh:compound ?compound .\n        # compound constraint (CHEBI:16113 == cholesterol)\n        ?compound rh:chebi CHEBI:16113 .\n      }\n    }\n  }\n  # taxonomy constraint (taxon:9606 == Homo sapiens)\n  ?protein up:organism taxon:9606 ;\n    up:annotation ?a ;\n    rdfs:seeAlso / up:transcribedFrom ?ensemblGene .\n  ?a a up:Catalytic_Activity_Annotation ;\n    up:catalyticActivity ?ca .\n  ?ca up:catalyzedReaction ?reaction .\n  # federated query to Bgee (expression data)\n  BIND(IRI(REPLACE(STR(?ensemblGene), \"\\\\.[0-9]+$\", \"\")) AS ?ensemblGeneNoVersion)\n  SERVICE <https://www.bgee.org/sparql/> {\n    ?gene lscr:xrefEnsemblGene ?ensemblGeneNoVersion ;\n      genex:isExpressedIn ?anatomicEntity .\n    ?anatomicEntity rdfs:label ?anatomicEntityLabel .\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql",
      "https://www.bgee.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/49_tissues_where_genes_metabolizing_cholestrol_are_expressed.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX uniprot:<http://purl.uniprot.org/uniprot/>\n\nSELECT DISTINCT ?protein ?proteinName ?reaction ?gene ?anatomicalEntity\nWHERE {\n  # Get UniProt proteins\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein rdfs:label ?proteinName .\n    # Link to Rhea reactions via cross-reference\n    ?protein up:database ?rheaRef .\n    ?rheaRef rdf:type up: Rhea_Entry .\n    ?rheaRef rdfs:comment ?reactionId . # Assuming reaction ID is in the comment\n    BIND(iri(concat(\"http://rdf.rhea-db.org/\", ?reactionId)) AS ?reaction)\n  }\n\n  # Get Ensembl gene identifiers linked to UniProt proteins\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein up:database ?ensemblRef .\n    ?ensemblRef rdf:type up:Ensembl .\n    ?ensemblRef rdfs:id ?geneId .\n    BIND(STR(?geneId) AS ?geneString) # Convert gene ID to string for Bgee query\n  }\n\n  # Query Rhea for reaction details (optional, can be removed if only IDs are needed)\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:label ?reactionLabel .\n  }\n\n  # Query Bgee for anatomical entities where the gene is expressed\n  SERVICE <http://bgee.unil.ch/sparql/> {\n    # Assuming Bgee uses Ensembl gene IDs directly\n    # and has a property linking genes to anatomical entities\n    # Replace bgee:expressedIn and bgee:UBERON with the actual properties\n    ?expression a <http://purl.obolibrary.org/obo/UBERON_0000061> . # Expression class\n    ?expression <http://vocab.geneontology.org/gaf#geneProduct> ?geneURI .\n    FILTER(CONTAINS(STR(?geneURI), ?geneString)) . # Filter to match Ensembl gene ID\n    ?expression <http://purl.obolibrary.org/obo/BFO_0000050> ?anatomicalEntity . # part_of relation to anatomical entity\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "dbd43abe-1c5e-471c-908e-5895db4c46ef",
    "evaluation_timestamp": "2025-05-11T00:23:55.008903",
    "question_understanding_prompt_tokens": 281,
    "question_understanding_completion_tokens": 70,
    "question_understanding_total_tokens": 351,
    "sparql_query_construction_prompt_tokens": 4633,
    "sparql_query_construction_completion_tokens": 796,
    "sparql_query_construction_total_tokens": 5429,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Lexical error at line 16, column 37.  Encountered: '32' (32), after prefix \"Rhea_Entry\"",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "syntactically not correct"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/53",
    "natural_language_question": "Find mouse homologs in OMABrowser of human enzymes that catalyze reactions involving sterols (CHEBI:15889). Federating with Rhea and OMABrowser.",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX orth: <http://purl.org/net/orth#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  DISTINCT\n    ?chebi\n    ?reaction\n    ?humanProtein\n    ?mouseProtein\n    ?cluster \nWHERE {\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf rh:Reaction .\n    ?reaction rh:side/rh:contains/rh:compound ?compound .\n    ?compound rh:chebi ?chebi .\n    ?chebi rdfs:subClassOf* CHEBI:15889\n  }\n\n  ?humanProtein up:organism taxon:9606 .\n  ?humanProtein up:annotation ?a .\n  ?a a up:Catalytic_Activity_Annotation .\n  ?a up:catalyticActivity ?ca .\n  ?ca up:catalyzedReaction ?reaction .\n\n  SERVICE  <https://sparql.omabrowser.org/sparql> {\n    ?cluster a orth:ParalogsCluster .\n    ?cluster orth:hasHomologousMember ?node1 , ?node2 .\n    ?node1 orth:hasHomologousMember* ?orthoProtein1 .\n    ?node2 orth:hasHomologousMember* ?orthoProtein2 .\n    ?orthoProtein1 lscr:xrefUniprot ?mouseProtein .\n    ?orthoProtein2 lscr:xrefUniprot ?humanProtein .\n    # inTaxon mouse\n    ?orthoProtein1 orth:organism/<http://purl.obolibrary.org/obo/RO_0002162> taxon:10090 . \n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql",
      "https://sparql.omabrowser.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/53_mouse_homologs_of_sterol_enzymes_via_omabrowser.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql/\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX uniprot: <http://purl.uniprot.org/core/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n\nSELECT DISTINCT ?mouse_homolog\nWHERE {\n  # Find reactions in Rhea that involve sterols (CHEBI:15889)\n  {\n    ?reaction rhea: Rhea_has_reactant chebi:15889 .\n  }\n  UNION\n  {\n    ?reaction rhea: Rhea_has_product chebi:15889 .\n  }\n\n  # Find the enzyme (UniProt ID) that catalyzes the reaction\n  ?reaction rhea: Rhea_has_enzyme ?enzyme_uri .\n  BIND(IRI(REPLACE(STR(?enzyme_uri), \"http://purl.uniprot.org/uniprot/\", \"http://purl.uniprot.org/core/\")) AS ?enzyme)\n\n  # Get the UniProt ID from the enzyme URI\n  ?enzyme rdf:type uniprot:Protein .\n  BIND(STRAFTER(STR(?enzyme), \"http://purl.uniprot.org/core/\") AS ?uniprot_id)\n\n  # Find the human protein in UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?human_protein uniprot:database ?uniprot .\n    FILTER(STR(?uniprot) = ?uniprot_id) .\n    ?human_protein uniprot:organism <http://purl.uniprot.org/taxonomy/9606> . # Human\n    BIND(STR(replace(str(?human_protein), \"http://purl.uniprot.org/uniprot/\", \"\", \"i\")) AS ?human_protein_id)\n  }\n\n  # Find the mouse homolog in OMABrowser (assuming a SPARQL endpoint exists)\n  SERVICE <http://sparql.omabrowser.org/> { # Replace with the actual OMABrowser SPARQL endpoint\n    ?homology_relationship a <http://purl.org/net/orth#OrthologousRelation> .\n    ?homology_relationship <http://purl.org/net/orth#source> ?human_gene .\n    ?homology_relationship <http://purl.org/net/orth#target> ?mouse_gene .\n\n    FILTER(CONTAINS(STR(?human_gene), ?human_protein_id)) .\n    FILTER(CONTAINS(STR(?mouse_gene), \"MOUSE\")) . # Assuming mouse genes are tagged with \"MOUSE\"\n    BIND(STRAFTER(STR(?mouse_gene), \"http://omabrowser.org/gene/\") AS ?mouse_homolog)\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "c6fd1fb4-977d-4f75-9a69-e5eeae369928",
    "evaluation_timestamp": "2025-05-11T00:24:09.118733",
    "question_understanding_prompt_tokens": 277,
    "question_understanding_completion_tokens": 41,
    "question_understanding_total_tokens": 318,
    "sparql_query_construction_prompt_tokens": 2745,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 2745,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Lexical error at line 11, column 38.  Encountered: '32' (32), after prefix \"Rhea_has_reactant\"",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "syntactically not correct"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/52",
    "natural_language_question": "Retrieve drugs that target human enzymes involved in sterol metabolism (federated query with Rhea and ChEMBL via IDSM/Elixir czech republic).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX cco: <http://rdf.ebi.ac.uk/terms/chembl#>\nPREFIX chebihash: <http://purl.obolibrary.org/obo/chebi#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n        DISTINCT\n            ?protein\n            ?proteinFullName\n            ?activityType\n            ?standardActivityValue\n            ?standardActivityUnit\n            ?chemblMolecule\n            ?chemlbMoleculePrefLabel\nWHERE\n  {\n  # ChEBI: retrieve members of the ChEBI class ChEBI:15889 (sterol)\n  # Rhea: retrieve the reactions involving these ChEBI as participants\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf  rh:Reaction ;\n\t      rh:status        rh:Approved ;\n\t      rh:side          ?reactionSide .\n    ?reactionSide\n\t      rh:contains      ?participant .\n    ?participant rh:compound  ?compound\n    {\n      ?compound  rh:chebi  ?chebi .\n      ?chebi (rdfs:subClassOf)+ CHEBI:15889\n    } UNION {\n      ?compound  rh:chebi           ?chebi .\n      ?chebi2   rdfs:subClassOf     ?chebiRestriction .\n      ?chebiRestriction\n\t\ta           owl:Restriction ;\n\t\towl:onProperty      chebihash:has_major_microspecies_at_pH_7_3 ;\n\t\towl:someValuesFrom  ?chebi .\n      ?chebi2 (rdfs:subClassOf)+ CHEBI:15889\n    }\n  }\n  # UniProt: retrieve the human (taxid:9606) enzymes catalyzing these Rhea reactions\n  ?ca       up:catalyzedReaction  ?reaction .\n  ?a        up:catalyticActivity  ?ca .\n  ?protein  up:annotation         ?a ;\n\t    up:organism           taxon:9606 ;\n\t    up:recommendedName    ?proteinRecName .\n  ?proteinRecName\n\t    up:fullName           ?proteinFullName .\n  # Find drugs in wikidata that interact with the UniProt Proteins\n  # ChEMBL: retrieve the corresponding targets and with drugs in clinical phase 4\n  # Via https://idsm.elixir-czech.cz/sparql/\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/idsm> {\n    ?activity a cco:Activity ;\n      cco:hasMolecule ?chemblMolecule ;\n      cco:hasAssay ?assay ;\n      cco:standardType ?activityType ;\n      cco:standardValue ?standardActivityValue ;\n      cco:standardUnits ?standardActivityUnit .\n    ?chemblMolecule cco:highestDevelopmentPhase ?highestDevelopmentPhase ;\n      rdfs:label ?chemblMoleculeLabel ;\n      skos:prefLabel ?chemlbMoleculePrefLabel .\n    FILTER (?highestDevelopmentPhase > 3)\n    ?assay cco:hasTarget ?target .\n    ?target cco:hasTargetComponent/cco:targetCmptXref ?protein .\n    ?protein a cco:UniprotRef .\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql",
      "https://idsm.elixir-czech.cz/sparql/endpoint/idsm"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/52_drugs_targeting_sterol_metabolism.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX obo: <http://purl.obolibrary.org/obo/>\n\nSELECT DISTINCT ?drug\nWHERE {\n  # Find Rhea reactions involving sterols\n  {\n    SELECT DISTINCT ?reaction\n    WHERE {\n      ?reaction rhea: Rhea.equation ?equation .\n      ?reaction rhea: Rhea.side ?side .\n      ?participant rhea: Rhea.participant_of ?side .\n      ?participant rhea: Rhea.chebi ?sterol .\n      ?sterol a chebi:CHEBI_15889 .  # Sterol CHEBI ID\n    }\n  }\n\n  # Find human enzymes involved in these reactions\n  {\n    SELECT DISTINCT ?enzyme\n    WHERE {\n      ?reaction rhea: Rhea.catalyzed_by ?enzymeURI .\n      ?enzymeURI rdfs:label ?enzyme .\n      FILTER (CONTAINS(LCASE(?enzyme), \"human\")) # Filter for human enzymes\n    }\n  }\n\n  # Find drugs that target these enzymes using the IDSM/Elixir czech republic endpoint\n  SERVICE <https://idsm.elixir-czech.cz/sparql> {\n    PREFIX chembl: <http://rdf.ebi.ac.uk/terms/chembl#>\n    PREFIX idsm: <https://idsm.elixir-czech.cz/vocab/>\n    ?target a chembl:Target .\n    ?target idsm:name ?enzyme . # Match enzyme names\n    ?activity chembl:target ?target .\n    ?activity chembl:pchembl_value ?pchembl .\n    ?molecule chembl:activity ?activity .\n    ?drug a chembl:Molecule;\n          chembl:prefLabel ?molecule .\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "950509de-7795-47ad-8388-85ac0a16a692",
    "evaluation_timestamp": "2025-05-11T00:24:18.131971",
    "question_understanding_prompt_tokens": 270,
    "question_understanding_completion_tokens": 29,
    "question_understanding_total_tokens": 299,
    "sparql_query_construction_prompt_tokens": 2137,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 2137,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Lexical error at line 12, column 36.  Encountered: '32' (32), after prefix \"Rhea.equation\"",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "syntactically not correct"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/54",
    "natural_language_question": "Proteins with binding sites for ligands similar to heme",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT \n  ?protein\n  ?mnemonic\n  ?proteinName\n  ?ligandSimilarityScore\n  ?ligand\nWHERE {\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n    ?ssc sachem:compound ?ligand; \n      sachem:score ?ligandSimilarityScore ;\n      sachem:similaritySearch ?sss .\n        # Smiles of Heme\n    ?sss    sachem:query \"CC1=C(CCC([O-])=O)C2=[N+]3C1=Cc1c(C)c(C=C)c4C=C5C(C)=C(C=C)C6=[N+]5[Fe-]3(n14)n1c(=C6)c(C)c(CCC([O-])=O)c1=C2\";\n      sachem:cutoff \"8e-1\"^^xsd:double ;\n      sachem:aromaticityMode sachem:aromaticityDetect ;\n      sachem:similarityRadius 1 ;\n      sachem:tautomerMode sachem:ignoreTautomers .\n  }\n  ?protein up:mnemonic ?mnemonic ;\n    up:recommendedName/up:fullName ?proteinName ;\n    up:annotation ?annotation .\n  ?annotation a up:Binding_Site_Annotation ;\n      up:ligand/rdfs:subClassOf ?ligand .\n}\nORDER BY DESC(?ligandSimilarityScore)",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/54_binding_sites_for_ligands_similar_to_heme_sachem.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?protein ?proteinName\nWHERE {\n  # Find proteins\n  ?protein a up:Protein .\n  ?protein rdfs:label ?proteinName .\n\n  # Find binding sites associated with the protein\n  ?protein up:annotation ?annotation .\n  ?annotation a up:Binding_Site .\n  ?annotation rdfs:label ?bindingSiteLabel .\n\n  # Find ligands that bind to the binding site\n  ?annotation up:ligand ?ligand .\n  ?ligand rdfs:label ?ligandLabel .\n\n  # Filter ligands similar to Heme (using a simple string match for demonstration)\n  FILTER (CONTAINS(LCASE(?ligandLabel), \"heme\"))\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "27a59ce1-685b-4679-aa8f-0cc560d884b9",
    "evaluation_timestamp": "2025-05-11T00:24:26.730236",
    "question_understanding_prompt_tokens": 249,
    "question_understanding_completion_tokens": 38,
    "question_understanding_total_tokens": 287,
    "sparql_query_construction_prompt_tokens": 2622,
    "sparql_query_construction_completion_tokens": 457,
    "sparql_query_construction_total_tokens": 3079,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/45",
    "natural_language_question": "Retrieve drugs that target human enzymes involved in sterol metabolism (federated query with WikiData and Rhea).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX chebihash: <http://purl.obolibrary.org/obo/chebi#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n\nSELECT DISTINCT ?protein ?proteinFullName ?wikiChemical ?wikiChemicalLabel ?medicalConditionTreatedLabel\nWHERE {\n  # ChEBI: retrieve members of the ChEBI class ChEBI:15889 (sterol)\n  # Rhea: retrieve the reactions involving these ChEBI as participants\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf rh:Reaction ;\n      rh:status rh:Approved ;\n      rh:side ?reactionSide .\n    ?reactionSide\n      rh:contains ?participant .\n    ?participant rh:compound ?compound\n    {\n      ?compound rh:chebi ?chebi .\n      ?chebi (rdfs:subClassOf)+ CHEBI:15889\n    } UNION {\n      ?compound rh:chebi ?chebi .\n      ?chebi2 rdfs:subClassOf ?chebiRestriction .\n      ?chebiRestriction\n\t\ta owl:Restriction ;\n\t\towl:onProperty chebihash:has_major_microspecies_at_pH_7_3 ;\n\t\towl:someValuesFrom ?chebi .\n      ?chebi2 (rdfs:subClassOf)+ CHEBI:15889\n    }\n  }\n  # UniProt: retrieve the human (taxid:9606) enzymes catalyzing these Rhea reactions\n  ?ca up:catalyzedReaction  ?reaction .\n  ?a up:catalyticActivity  ?ca .\n  ?proteinIRI  up:annotation ?a ;\n    up:organism taxon:9606 ;\n    up:recommendedName ?proteinRecName .\n  ?proteinRecName up:fullName ?proteinFullName .\n  # Find drugs in wikidata that interact with the UniProt Proteins\n  BIND (SUBSTR(STR(?proteinIRI), STRLEN(STR(uniprotkb:))+1) AS ?protein)\n  SERVICE <https://query.wikidata.org/sparql> {\n    ?wp wdt:P352  ?protein .\n    ?wikiChemical wdt:P129 ?wp . # Physically interacts with\n    ?wikiChemical rdfs:label ?wikiChemicalLabel .\n    ?wikiChemical wdt:P2175 ?wmc . # Medical conndition treated\n    ?wmc rdfs:label ?medicalConditionTreatedLabel .\n    FILTER(lang(?medicalConditionTreatedLabel) = 'en')\n    FILTER(lang(?wikiChemicalLabel) = 'en')\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://query.wikidata.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/45_drugs_targeting_human_sterol_metabolism_enzymes.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?drug ?enzymeLabel WHERE {\n  # Find reactions in Rhea related to sterol metabolism\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:label ?reactionLabel .\n    FILTER (CONTAINS(LCASE(?reactionLabel), \"sterol\")) .\n    ?reaction rh:side ?side .\n    ?side rh:contains ?entity .\n    ?entity a rh:ProteinParticipant ;\n            rdfs:label ?enzymeLabel ;\n            up:reviewed ?uniprotID . # Assuming enzymes have UniProt IDs\n  }\n\n  # Find drugs in Wikidata that target the enzymes (using UniProt ID as a bridge)\n  SERVICE <https://query.wikidata.org/sparql> {\n    ?drug wdt:P2194 ?uniprotID .  # P2194 is the UniProt ID property in Wikidata\n    ?drug rdfs:label ?drugLabel .\n    FILTER (LANG(?drugLabel) = \"en\") # Optional: Filter for English labels\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "8d34cd60-4dcb-4d28-9926-a45b455320c7",
    "evaluation_timestamp": "2025-05-11T00:24:52.126462",
    "question_understanding_prompt_tokens": 262,
    "question_understanding_completion_tokens": 28,
    "question_understanding_total_tokens": 290,
    "sparql_query_construction_prompt_tokens": 2043,
    "sparql_query_construction_completion_tokens": 622,
    "sparql_query_construction_total_tokens": 2665,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Line 21, column 11: Unresolved prefixed name: wdt:P2194",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "syntactically not correct"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/42",
    "natural_language_question": "Connect patents cited in UniProtKB with those in the patent database at EPO via publication number.",
    "ground_truth_query": "PREFIX patent: <http://data.epo.org/linked-data/def/patent/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?citation ?patent ?application ?applicationNo\nWHERE\n{\n  ?citation a up:Patent_Citation ;\n    skos:exactMatch ?patent .\n  FILTER(CONTAINS(STR(?patent), 'EP'))\n  BIND(SUBSTR(STR(?patent), 35) AS ?applicationNo)\n  SERVICE <https://data.epo.org/linked-data/query>{\n    ?application patent:publicationNumber ?applicationNo\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://data.epo.org/linked-data/query"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/42_connect_patents_to_epo.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT ?uniprotEntry ?patentPublicationNumber\nWHERE {\n  # Query UniProtKB for entries with patent citations\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?uniprotEntry a up:Protein ; # Assuming UniProt entries are of type Protein\n                  up:citation ?citation . # Retrieving citation information\n\n    ?citation up:publicationNumber ?patentPublicationNumber . # Assuming publicationNumber property exists for patents\n    FILTER CONTAINS(str(?citation), \"patent\") # Filter to ensure the citation is a patent\n  }\n  # Since there is no EPO endpoint, I will skip this part.\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "50f3e6a8-993d-41cf-97b1-ede570f6634c",
    "evaluation_timestamp": "2025-05-11T00:24:58.806802",
    "question_understanding_prompt_tokens": 259,
    "question_understanding_completion_tokens": 35,
    "question_understanding_total_tokens": 294,
    "sparql_query_construction_prompt_tokens": 1900,
    "sparql_query_construction_completion_tokens": 394,
    "sparql_query_construction_total_tokens": 2294,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/67_draft_human_metabolome",
    "natural_language_question": "Generate a draft human metabolome",
    "ground_truth_query": "PREFIX chebislash: <http://purl.obolibrary.org/obo/chebi/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n?uniprot ?mnemonic ?rhea ?chebi ?smiles ?inchiKey\nWHERE\n{\n  ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea ;\n        up:organism taxon:9606 ;\n        up:mnemonic ?mnemonic .\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n\t?rhea rh:side/rh:contains/rh:compound ?compound .\n    ?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?chebi .\n   }\n   ?chebi chebislash:smiles ?smiles ;\n          chebislash:inchikey ?inchiKey .\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/67_draft_human_metabolome.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?metabolite ?metaboliteName\nWHERE {\n  # Find human proteins in UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein up:organism taxon:9606 .  # Homo sapiens\n    ?protein rdfs:seeAlso ?rheaReaction .\n    FILTER (CONTAINS(str(?rheaReaction), \"rhea-db.org\")) # Ensure it's a Rhea reaction\n  }\n\n  # Get metabolites from RheaDB reactions\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rheaReaction rdfs:sameAs ?rheaId .\n    {\n      ?rheaId rhea:has_reactant ?metabolite .\n    } UNION {\n      ?rheaId rhea:has_product ?metabolite .\n    }\n    ?metabolite rdfs:label ?metaboliteName .\n    FILTER(STRSTARTS(str(?metabolite), str(chebi:))) # Filter for ChEBI metabolites\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "aa90d4f5-c302-4e1e-947b-c0b115d03ad2",
    "evaluation_timestamp": "2025-05-11T00:25:09.124543",
    "question_understanding_prompt_tokens": 247,
    "question_understanding_completion_tokens": 20,
    "question_understanding_total_tokens": 267,
    "sparql_query_construction_prompt_tokens": 1449,
    "sparql_query_construction_completion_tokens": 612,
    "sparql_query_construction_total_tokens": 2061,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/36",
    "natural_language_question": "Find the orthologous proteins for UniProtKB entry P05067 using the <a href=\"http://www.orthod.org\">OrthoDB database</a>",
    "ground_truth_query": "PREFIX orthodb: <http://purl.orthodb.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  ?protein\n  ?orthoGroup\n  ?scientificName\n  ?functionComment\n  ?prefferedGeneName\n  ((STRLEN(?value) - ?medianLength) as ?deviationFromMedianLength)\nWHERE\n{\n  uniprotkb:P05067 a up:Protein ;\n        up:organism/up:scientificName ?scientificName ;\n        rdfs:seeAlso ?orthoGroup ;\n        up:encodedBy/skos:prefLabel ?prefferedGeneName ;\n          up:sequence/rdf:value ?value .\n  OPTIONAL {\n    ?protein up:annotation ?functionAnnotation .\n    ?functionAnnotation a up:Function_Annotation ;\n      rdfs:comment ?functionComment .\n  }\n  SERVICE <https://sparql.orthodb.org/sparql>{\n    ?orthoGroup orthodb:ogMedianProteinLength ?medianLength .\n    ?orthoGroup orthodb:hasMember ?xref .\n    ?xref orthodb:xref/orthodb:xrefResource uniprotkb:P05067 .\n  }\n}\nLIMIT 985915",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.orthodb.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/36_orthologous_proteins_via_orthodb.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?orthologousProtein ?orthoDBGroup\nWHERE {\n  # Find the OrthoDB group associated with the UniProt entry P05067\n  {\n    SELECT ?orthoDBGroup WHERE {\n      VALUES ?uniprotEntry { <http://purl.uniprot.org/uniprot/P05067> } # Specify the UniProt entry\n      ?uniprotEntry up:databaseCrossReference ?dbXref .\n      ?dbXref rdf:type up:OrthoDB . # Filter for OrthoDB cross-references\n      ?dbXref rdfs:seeAlso ?orthoDBGroup . # Get the OrthoDB group identifier\n    }\n  }\n\n  # Find other UniProt entries that belong to the same OrthoDB group\n  SERVICE <https://sparql.uniprot.org/sparql> { # Query UniProt SPARQL endpoint\n    ?orthologousProtein up:databaseCrossReference ?otherDbXref .\n    ?otherDbXref rdf:type up:OrthoDB . # Filter for OrthoDB cross-references\n    ?otherDbXref rdfs:seeAlso ?orthoDBGroup . # Match the OrthoDB group\n    FILTER (?orthologousProtein != <http://purl.uniprot.org/uniprot/P05067>) # Exclude the original UniProt entry\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "eac6cfe9-c7c4-420e-84a4-e4b5110de9b6",
    "evaluation_timestamp": "2025-05-11T00:25:42.140579",
    "question_understanding_prompt_tokens": 273,
    "question_understanding_completion_tokens": 44,
    "question_understanding_total_tokens": 317,
    "sparql_query_construction_prompt_tokens": 2814,
    "sparql_query_construction_completion_tokens": 502,
    "sparql_query_construction_total_tokens": 3316,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/60",
    "natural_language_question": "Find human proteins that catalyze reactions where substrates or product have a <a href=\"https://www.ebi.ac.uk/chebi/searchId.do?chebiId=CHEBI:35516\">Cholestane skeleton</a>",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  DISTINCT\n    ?protein\n    ?disease\n    ?rhea\n    ?chebi\n    ?omim\nWHERE {\n    # Find complete ChEBIs with a Cholestane skeleton, via the Czech Elixir node IDSM Sachem chemical substructure search.\n    SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n      ?chebi sachem:substructureSearch [\n        sachem:query\n\"[C@]12(CCC3CCCC[C@]3(C)[C@@]1([H])CC[C@]1(C)[C@@]([H])([C@@](C)([H])CCCC(C)C)CC[C@@]21[H])[H]\"\n].\n   }\n   # Use the fact that UniProt catalytic activities are annotated using Rhea \n   # Mapping the found ChEBIs to Rhea reactions\n   SERVICE <https://sparql.rhea-db.org/sparql>{\n     ?rhea rh:side/rh:contains/rh:compound/rdfs:subClassOf ?chebi .\n   }\n   # Match the found Rhea reactions with human UniProtKB proteins\n   ?protein up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n   ?protein up:organism taxon:9606 .\n   # Find only those human entries that have an annotated related disease, and optionaly map these to OMIM\n   ?protein up:annotation/up:disease ?disease .\n   OPTIONAL {\n     ?disease rdfs:seeAlso ?omim .\n     ?omim up:database <http://purl.uniprot.org/database/MIM>\n   }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/60_enzymes_working_on_substrate_with_Cholestene_backbone.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX chebi: <http://purl.obolibrary.org/obo/>\n\nSELECT DISTINCT ?protein ?proteinName ?reaction\nWHERE {\n  # Find human proteins\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein ;\n             up:organism taxon:9606 ; # Homo sapiens\n             rdfs:label ?proteinName ;\n             up:catalyticActivity ?reaction .\n  }\n\n  # Find reactions in Rhea that are catalyzed by the protein and involve Cholestane skeleton as substrate or product\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:sameAs ?rheaReaction .\n    {\n      ?rheaReaction rhea:substrate ?substrate .\n      ?substrate chebi:CHEBI ?chebiSubstrate .\n      FILTER (?chebiSubstrate = chebi:CHEBI_35516) # Cholestane skeleton\n    }\n    UNION\n    {\n      ?rheaReaction rhea:product ?product .\n      ?product chebi:CHEBI ?chebiProduct .\n      FILTER (?chebiProduct = chebi:CHEBI_35516) # Cholestane skeleton\n    }\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "dab2659f-2937-46fc-8d53-13a1eb3a32da",
    "evaluation_timestamp": "2025-05-11T00:26:04.481870",
    "question_understanding_prompt_tokens": 289,
    "question_understanding_completion_tokens": 38,
    "question_understanding_total_tokens": 327,
    "sparql_query_construction_prompt_tokens": 3040,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 3040,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/70_enzymes_interacting_with_molecules_similar_to_dopamine",
    "natural_language_question": "Look for enzymes catalyzing reactions with molecules similar to dopamine.",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  ?protein\n  ?rhea\n  ?chebi\nWHERE {\n  # Use the smiles of dopamine CHEBI:18243\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi>{\n    ?chebi sachem:similarCompoundSearch [\n      sachem:query \"NCCc1ccc(O)c(O)c1\" ] .\n  }\n  GRAPH<https://sparql.rhea-db.org/rhea>{\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n    ?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?chebi .\n  }\n  ?protein up:reviewed true ;\n    up:annotation ?caa .\n  ?caa up:catalyticActivity/up:catalyzedReaction ?rhea .\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/70_enzymes_interacting_with_molecules_similar_to_dopamine.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX uniprot: <http://purl.uniprot.org/core/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n\nSELECT DISTINCT ?enzyme ?enzymeName ?reaction ?reactionEquation\nWHERE {\n  # Find reactions in Rhea that involve dopamine\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rhea:equation ?reactionEquation .\n    ?reaction rhea:hasParticipant chebi:18258 .  # CHEBI ID for dopamine\n    ?reaction rhea:catalyzedBy ?enzyme .\n  }\n  \n  # Get enzyme name from UniProt using the Rhea enzyme ID\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?enzyme uniprot:recommendedName ?recName .\n    ?recName rdf:value ?enzymeName .\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "ebbf07f3-50bf-4f43-bc1f-57a00208f222",
    "evaluation_timestamp": "2025-05-11T00:26:21.903328",
    "question_understanding_prompt_tokens": 247,
    "question_understanding_completion_tokens": 26,
    "question_understanding_total_tokens": 273,
    "sparql_query_construction_prompt_tokens": 2103,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 2103,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/38",
    "natural_language_question": "For the human entry P05067 (Amyloid-beta precursor protein) find the gene start ends in WikiData",
    "ground_truth_query": "PREFIX p: <http://www.wikidata.org/prop/>\nPREFIX pq: <http://www.wikidata.org/prop/qualifier/>\nPREFIX ps: <http://www.wikidata.org/prop/statement/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n\n\nSELECT \n\t?protein \n\t?begin\n\t?end\n\t?chromosome\n\t?assembly\nWHERE {\n    {\n        BIND(uniprotkb:P05067 AS ?proteinIRI)\n        BIND (SUBSTR(STR(?proteinIRI), STRLEN(STR(uniprotkb:))+1) AS ?protein)\n    }\n    SERVICE <https://query.wikidata.org/sparql> {\n        ?wp wdt:P352 ?protein ;\n            wdt:P702 ?wg . \n        ?wg p:P644   ?wgss .\n        ?wgss ps:P644        ?begin ;\n          pq:P1057/wdt:P1813 ?chromosome ;\n          pq:P659/rdfs:label ?assembly .\n        ?wg p:P645 ?wgse .\n        ?wgse ps:P645        ?end ;\n          pq:P1057/wdt:P1813 ?chromosome ;\n          pq:P659/rdfs:label ?assembly .\n        FILTER(lang(?assembly) = \"en\")\n  } \n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://query.wikidata.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/38_find_gene_region_in_wikidata_for_known_entry.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX uniprot: <http://purl.uniprot.org/uniprot/>\n\nSELECT ?gene ?geneStart ?geneEnd\nWHERE {\n  # Find the UniProt entry for Amyloid-beta precursor protein (P05067)\n  VALUES ?protein { uniprot:P05067 }\n  ?protein rdf:type up:Protein .\n  ?protein up:encodedBy ?gene .\n\n  #Federate with WikiData to get the gene start and end positions\n  SERVICE <https://query.wikidata.org/sparql> {\n    OPTIONAL {\n      ?gene wdt:P637 ?geneStart .  #Gene start position\n    }\n    OPTIONAL {\n      ?gene wdt:P638 ?geneEnd .    #Gene end position\n    }\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "64c8d408-308d-42c4-805c-05475c56f725",
    "evaluation_timestamp": "2025-05-11T00:26:34.030793",
    "question_understanding_prompt_tokens": 266,
    "question_understanding_completion_tokens": 52,
    "question_understanding_total_tokens": 318,
    "sparql_query_construction_prompt_tokens": 2813,
    "sparql_query_construction_completion_tokens": 462,
    "sparql_query_construction_total_tokens": 3275,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Line 17, column 13: Unresolved prefixed name: wdt:P637",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "syntactically not correct"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/117_biosodafrontend_glioblastoma_orthologs_rat",
    "natural_language_question": "Which are the proteins associated with glioblastoma and the orthologs expressed in the rat brain?",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX obo: <http://purl.obolibrary.org/obo/>\nPREFIX orth: <http://purl.org/net/orth#>\nPREFIX sio: <http://semanticscience.org/resource/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX genex: <http://purl.org/genex#>\nSELECT DISTINCT ?protein ?orthologous_protein ?gene ?annotation_text WHERE {\n  {\n  \tSELECT ?protein ?annotation_text WHERE {\n      ?protein a up:Protein ;\n          up:organism taxon:9606 ;\n          up:annotation ?annotation .\n      ?annotation rdfs:comment ?annotation_text .\n      ?annotation a up:Disease_Annotation .\n      FILTER CONTAINS (?annotation_text, \"glioblastoma\")\n    }\n  }\n  SERVICE <https://sparql.omabrowser.org/sparql/> {\n    SELECT ?orthologous_protein ?protein ?gene WHERE {\n    ?protein_OMA a orth:Protein .\n    ?orthologous_protein a orth:Protein .\n    ?cluster a orth:OrthologsCluster .\n    ?cluster orth:hasHomologousMember ?node1 .\n    ?cluster\n    orth:hasHomologousMember ?node2 .\n    ?node2 orth:hasHomologousMember* ?protein_OMA .\n    ?node1 orth:hasHomologousMember* ?orthologous_protein .\n    ?orthologous_protein orth:organism/obo:RO_0002162 taxon:10116 . # rattus norvegicus\n    ?orthologous_protein sio:SIO_010079 ?gene .\n    ?protein_OMA lscr:xrefUniprot ?protein .\n    FILTER(?node1 != ?node2)\n\t\t}\n\t}\n  SERVICE <https://www.bgee.org/sparql/> {\n    ?gene genex:isExpressedIn ?a .\n    ?a rdfs:label \"brain\" .\n    ?gene orth:organism ?s . \n    ?s obo:RO_0002162 taxon:10116.\n\t}\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql",
    "federates_with": [
      "https://sparql.omabrowser.org/sparql/",
      "https://www.bgee.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/117_biosodafrontend_glioblastoma_orthologs_rat.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\n\nSELECT DISTINCT ?protein ?proteinName ?ratOrthologName\nWHERE {\n  # Find proteins associated with glioblastoma\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?disease a up:Disease .\n    ?disease rdfs:label ?diseaseName .\n    FILTER (CONTAINS(lcase(?diseaseName), \"glioblastoma\")) . # Filter for glioblastoma\n\n    ?protein up:classifiedWith ?disease .\n    ?protein rdfs:label ?proteinName .\n  }\n\n  # Find rat orthologs of the proteins\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?ratTaxon a up:Taxon .\n    ?ratTaxon rdfs:label ?ratTaxonName .\n    FILTER (CONTAINS(lcase(?ratTaxonName), \"rat\")) . # Filter for rat\n\n    ?ratOrtholog up:organism ?ratTaxon .\n    ?ratOrtholog rdfs:label ?ratOrthologName .\n    ?ratOrtholog up:sequence ?sequence . # Ensure it's a protein with a sequence\n\n    # Link the rat ortholog to the human protein via orthologous relationship\n    ?ratOrtholog up:orthologousTo ?protein .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "f3db77e1-baeb-4db1-be80-4f5f6c4672a0",
    "evaluation_timestamp": "2025-05-11T00:26:44.416195",
    "question_understanding_prompt_tokens": 254,
    "question_understanding_completion_tokens": 40,
    "question_understanding_total_tokens": 294,
    "sparql_query_construction_prompt_tokens": 2262,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 2262,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/116_biosodafrontend_rabit_mouse_orthologs",
    "natural_language_question": "Rabbit's proteins encoded by genes that are orthologous to Mouse's HBB-Y gene and their cross reference links to Uniprot",
    "ground_truth_query": "PREFIX lscr: <http://purl.org/lscr#>\nPREFIX orth: <http://purl.org/net/orth#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX obo: <http://purl.obolibrary.org/obo/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?PROTEIN_1 ?PROTEIN_2 ?UNIPROT_XREF_1 ?UNIPROT_XREF_2 WHERE {\n\t?taxon_1 up:commonName 'Mouse' .\n\t?taxon_2 up:commonName 'Rabbit' .\n\tSERVICE <https://sparql.omabrowser.org/sparql/> {\n\t\t?cluster a orth:OrthologsCluster .\n\t\t?cluster orth:hasHomologousMember ?node1 .\n\t\t?cluster orth:hasHomologousMember ?node2 .\n\t\t?node2 orth:hasHomologousMember* ?PROTEIN_2 .\n\t\t?node1 orth:hasHomologousMember* ?PROTEIN_1 .\n\t\t?PROTEIN_1 a orth:Protein .\n\t\t?PROTEIN_1 orth:organism/obo:RO_0002162 ?taxon_1 ;\n\t\t\trdfs:label 'HBB-Y' ;\n\t\t\tlscr:xrefUniprot ?UNIPROT_XREF_1 .\n\t\t?PROTEIN_2 a orth:Protein .\n\t\t?PROTEIN_2 orth:organism/obo:RO_0002162 ?taxon_2 .\n\t\t?PROTEIN_2 lscr:xrefUniprot ?UNIPROT_XREF_2 .\n\t\tFILTER ( ?node1 != ?node2 )\n\t}\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql",
    "federates_with": [
      "https://sparql.omabrowser.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/116_biosodafrontend_rabit_mouse_orthologs.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\n\nSELECT DISTINCT ?rabbitProtein ?rabbitProteinName ?uniprotCrossReference\nWHERE {\n  # Find mouse proteins associated with the gene HBB-Y\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    SELECT DISTINCT ?mouseProtein WHERE {\n      ?mouseProtein a up:Protein .\n      ?mouseProtein up:organism taxon:114892 . # Mouse taxon ID\n    }\n  }\n\n  # Find rabbit proteins orthologous to the mouse proteins\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?rabbitProtein a up:Protein .\n    ?rabbitProtein up:organism taxon:2697570 . # Rabbit taxon ID\n    ?rabbitProtein up:gene ?gene.\n    ?gene rdfs:label ?rabbitProteinName .\n    # Assuming orthology is indicated via a relationship to the mouse protein\n    ?rabbitProtein up:sequence ?sequence . # Added to ensure it's a protein\n    FILTER EXISTS {\n      ?rabbitProtein up:ortholog ?mouseProtein .\n    }\n    OPTIONAL { ?rabbitProtein up:database ?uniprotCrossReference .}\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "430dc7bf-d7a4-4843-953f-a4f1bc11e122",
    "evaluation_timestamp": "2025-05-11T00:27:03.525738",
    "question_understanding_prompt_tokens": 266,
    "question_understanding_completion_tokens": 49,
    "question_understanding_total_tokens": 315,
    "sparql_query_construction_prompt_tokens": 3425,
    "sparql_query_construction_completion_tokens": 555,
    "sparql_query_construction_total_tokens": 3980,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/94_Select_all_approved_reactions_with_CHEBI_or_one_of_its_descendant_optional_UniProtKB_reviewed_EC",
    "natural_language_question": "Select all approved reactions with CHEBI:17815 (a 1,2-diacyl-sn-glycerol) or one of its descendant. Display links to UniProtKB/Swiss-Prot entries via EC numbers if the link rhea-ec exists.",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX CHEBI:<http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX up:<http://purl.uniprot.org/core/>\n\nSELECT\n  distinct\n    ?reaction\n    ?enzyme\n    (count(distinct ?protein) as ?proteinCount)\nWHERE {\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:side ?reactionSide .\n\n  OPTIONAL {?reaction rh:ec ?enzyme .\n    SERVICE <https://sparql.uniprot.org/sparql> {\n      ?protein up:reviewed true .\n      ?protein up:enzyme ?enzyme.\n    }\n  } .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi .\n  ?chebi rdfs:subClassOf* CHEBI:17815 .\n}\nGROUP BY ?reaction ?enzyme\nORDER BY ?reaction\nLIMIT 985915",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/94_Select_all_approved_reactions_with_CHEBI_or_one_of_its_descendant_optional_UniProtKB_reviewed_EC.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n\nSELECT DISTINCT ?reaction ?reactionName ?ecNumber ?uniprotEntry\nWHERE {\n  # Find CHEBI:17815 and its descendants\n  {\n    VALUES ?chebiEntity { chebi:17815 }\n  }\n  UNION\n  {\n    ?chebiEntity rdfs:subClassOf chebi:17815 .\n  }\n\n  # Find reactions that have ?chebiEntity as a participant\n  ?reaction rhea:hasParticipant ?chebiEntity .\n  ?reaction rdf:type rhea:Reaction .\n  ?reaction rdfs:label ?reactionName .\n\n  # Filter for approved reactions\n  FILTER EXISTS { ?reaction rhea:status rhea:approved . }\n\n  # Optional: Link to EC number\n  OPTIONAL {\n    ?reaction rhea:ec ?ecNumber .\n\n    #Federate with UniProt to find UniProtKB entries via EC number\n    SERVICE <https://sparql.uniprot.org/sparql> {\n      ?uniprotEntry <http://purl.uniprot.org/core/annotation> ?annotation .\n      ?annotation <http://purl.uniprot.org/core/classifiedWith> ?ecNumber .\n    }\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "c07ca852-6b37-4fb2-a6d2-b91859a8ae0c",
    "evaluation_timestamp": "2025-05-11T00:27:32.596733",
    "question_understanding_prompt_tokens": 295,
    "question_understanding_completion_tokens": 71,
    "question_understanding_total_tokens": 366,
    "sparql_query_construction_prompt_tokens": 2097,
    "sparql_query_construction_completion_tokens": 615,
    "sparql_query_construction_total_tokens": 2712,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/11",
    "natural_language_question": "Distribution of reactions according to the first class of the enzyme classification (federated query)",
    "ground_truth_query": "PREFIX ec: <http://purl.uniprot.org/enzyme/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n\n# Query 11\n# Retrieve the count of reactions mapped to each level (main class) of the enzyme classification\n#\n# This query mimics the Filter section of the Rhea website (Browse all reactions)\n# https://www.rhea-db.org/rhea?query=\nSELECT ?ecClass (STR(?ecName) AS ?ecClassName) (COUNT(?rhea) AS ?rheaCount)\nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    VALUES (?ecClass) { (ec:1.-.-.-)(ec:2.-.-.-)(ec:3.-.-.-)(ec:4.-.-.-)(ec:5.-.-.-) (ec:6.-.-.-) (ec:7.-.-.-)}\n    ?ecNumber rdfs:subClassOf ?ecClass .\n    ?ecClass skos:prefLabel ?ecName .\n  }\n  ?rhea rdfs:subClassOf rh:Reaction .\n  ?rhea rh:ec ?ecNumber .\n} GROUP BY ?ecClass ?ecName",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/11.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT ?enzymeClass (COUNT(DISTINCT ?reaction) AS ?reactionCount)\nWHERE {\n  # Get reactions from Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdf:type rhea:Reaction .\n    ?reaction rhea:equation ?equation .\n  }\n\n  # Attempt to link reactions to UniProt enzyme via Rhea participants (compounds)\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    OPTIONAL {\n      ?enzyme uniprot:enzyme ?enzymeClass . # Get enzyme class from UniProt\n      ?enzyme rdfs:seeAlso ?rheaReaction .\n      FILTER(CONTAINS(STR(?rheaReaction), \"rhea-db.org\"))\n      BIND(IRI(STR(?rheaReaction)) AS ?reaction)\n    }\n  }\n  FILTER(BOUND(?enzymeClass))\n}\nGROUP BY ?enzymeClass\nORDER BY DESC(?reactionCount)",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "f4044f2b-97b6-4dc8-9383-e6db675b6100",
    "evaluation_timestamp": "2025-05-11T00:27:40.956017",
    "question_understanding_prompt_tokens": 255,
    "question_understanding_completion_tokens": 24,
    "question_understanding_total_tokens": 279,
    "sparql_query_construction_prompt_tokens": 1378,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 1378,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Line 17, column 15: Unresolved prefixed name: uniprot:enzyme",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "syntactically not correct"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/109_Distribution_of_reactions_according_to_the_first_level_of_enzyme_classification",
    "natural_language_question": "Distribution of reactions according to the first level of enzyme classification",
    "ground_truth_query": "\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>\nPREFIX skos:<http://www.w3.org/2004/02/skos/core#>\n\nSELECT\n  ?ecClass\n  (str(?ecName) as ?ecClassName)\n  (count(?reaction) as ?reactionCount)\nWHERE\n{\n  SERVICE <http://sparql.uniprot.org/sparql> {\n    VALUES (?ecClass) { (ec:1.-.-.-)(ec:2.-.-.-)(ec:3.-.-.-)(ec:4.-.-.-)(ec:5.-.-.-) (ec:6.-.-.-) (ec:7.-.-.-) }\n    ?ecNumber rdfs:subClassOf ?ecClass .\n    ?ecClass skos:prefLabel ?ecName .\n  }\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:ec ?ecNumber .\n}\nGROUP BY ?ecClass ?ecName\n",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "http://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/109_Distribution_of_reactions_according_to_the_first_level_of_enzyme_classification.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX uniprot: <http://purl.uniprot.org/core/>\n\nSELECT ?enzymeClass (COUNT(DISTINCT ?reaction) AS ?reactionCount)\nWHERE {\n  # Subquery to get Rhea reaction IDs and their associated UniProt enzyme class (EC) numbers\n  {\n    SELECT DISTINCT ?reaction ?ec\n    WHERE {\n      ?reaction rdf:type rhea:Reaction .\n      ?reaction rhea:equation ?equation . # Not really used, but helps focus on reactions\n\n      # Attempt to link to UniProt via a SERVICE call.\n      SERVICE <https://sparql.uniprot.org/sparql> {\n        ?protein a uniprot:Protein ;\n                 uniprot:enzymeClassification ?ec . # Get EC number\n        # Assuming some predicate links Rhea reactions to UniProt proteins.  This is the crucial link and may need adjustment.\n        # The following is a placeholder and needs to be replaced with the correct predicate if it exists.\n        # Example:  FILTER EXISTS { ?reaction rhea:relatedProtein ?protein . } # Replace rhea:relatedProtein with the actual predicate\n        # Another possible link via reaction participants (reactants/products).  Again, needs the correct predicate.\n        # Example: ?reaction rhea:hasParticipant ?participant .  ?participant rhea:relatedProtein ?protein .\n        # Without a direct link, this becomes very difficult.  Assuming a link based on reaction name/equation content is unreliable.\n        # A possible, but less reliable, approach is to look for proteins that catalyze reactions with similar reactants/products.\n        # This would require more complex subqueries and string matching, which is beyond the scope of this example without more information.\n        # Assuming a link based on reaction participants (reactants/products).  Again, needs the correct predicate.\n        # Example: ?reaction rhea:hasParticipant ?participant .  ?participant rhea:relatedProtein ?protein .\n        #FILTER EXISTS { ?reaction rhea:relatedProtein ?protein . }\n      }\n    }\n  }\n\n  # Extract the first level of the enzyme classification (first number)\n  BIND(SUBSTR(STR(?ec), 1, 1) AS ?enzymeClass) # Extract first digit\n\n}\nGROUP BY ?enzymeClass\nORDER BY DESC(?reactionCount)",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "6525f352-9afc-4416-8425-43eaf4bb0b3e",
    "evaluation_timestamp": "2025-05-11T00:27:49.840066",
    "question_understanding_prompt_tokens": 249,
    "question_understanding_completion_tokens": 26,
    "question_understanding_total_tokens": 275,
    "sparql_query_construction_prompt_tokens": 1954,
    "sparql_query_construction_completion_tokens": 622,
    "sparql_query_construction_total_tokens": 2576,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/12",
    "natural_language_question": "Select all Rhea reactions linked to protein sequences (enzymes and transporters) in UniProtKB",
    "ground_truth_query": "PREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n# Query 12\n# Select all Rhea reactions used to annotate enzyme sequences in UniProtKB\n# return the number of UniProtKB entries\n# Federated query using a service to UniProt SPARQL endpoint\n#\n# This query corresponds to the Rhea website query:\n# https://www.rhea-db.org/rhea?query=uniprot:*\n#\nSELECT ?uniprotCount ?rhea ?accession ?equation \nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> { \n  \tSELECT ?rhea (count(?uniprot) as ?uniprotCount) {\n      ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea . \n  \t}\n  \tGROUP BY ?rhea\n  }\n  ?rhea rh:accession ?accession .\n  ?rhea rh:equation ?equation .\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/12.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX uniprot: <http://purl.uniprot.org/core/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n\nSELECT DISTINCT ?rheaReaction ?rheaReactionId ?protein ?proteinName\nWHERE {\n  # Query Rhea for reactions\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rheaReaction rdf:type rhea:Reaction .\n    BIND(STRAFTER(STR(?rheaReaction), \"http://rdf.rhea-db.org/\") AS ?rheaReactionId)\n  }\n  \n  # Query UniProtKB for proteins that are enzymes or transporters and link to Rhea\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a uniprot:Protein .\n    ?protein rdfs:seeAlso ?rheaReaction . # Assuming rdfs:seeAlso links to Rhea\n    ?protein uniprot:recommendedName ?proteinName .\n    # Filter for enzymes or transporters (example, adjust as needed based on UniProt ontology)\n    #FILTER (CONTAINS(LCASE(?proteinName), \"enzyme\") || CONTAINS(LCASE(?proteinName), \"transferase\") || CONTAINS(LCASE(?proteinName), \"transporter\"))\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "98cfc6cb-95eb-4975-99e7-2d1d55bc037f",
    "evaluation_timestamp": "2025-05-11T00:28:00.581698",
    "question_understanding_prompt_tokens": 256,
    "question_understanding_completion_tokens": 30,
    "question_understanding_total_tokens": 286,
    "sparql_query_construction_prompt_tokens": 2009,
    "sparql_query_construction_completion_tokens": 568,
    "sparql_query_construction_total_tokens": 2577,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Line 17, column 14: Unresolved prefixed name: rdfs:seeAlso",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "syntactically not correct"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/112_Total_number_of_reaction_ec_protein_links",
    "natural_language_question": "Total number of <reaction> <ec> <protein> links",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX up:<http://purl.uniprot.org/core/>\n\nSELECT\n  (count(?reaction) as ?reactionEcProteinLinkCount)\nWHERE {\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:ec ?enzyme\n  SERVICE <http://sparql.uniprot.org/sparql> {\n    ?protein up:reviewed true .\n    ?protein up:enzyme ?enzyme.\n  }\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "http://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/112_Total_number_of_reaction_ec_protein_links.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX uniprot: <http://purl.uniprot.org/core/>\n\nSELECT (COUNT(DISTINCT ?reaction) AS ?totalLinks)\nWHERE {\n  # Query Rhea for reactions\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction a rhea:Reaction .\n  }\n\n  # Query UniProt for proteins associated with reactions and EC numbers\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein rdfs:seeAlso ?reaction . # Link protein to reaction (assuming rdfs:seeAlso is the correct predicate)\n    ?protein a uniprot:Protein .\n    ?protein uniprot:annotation ?annotation .\n    ?annotation a uniprot:EC_Annotation .\n    ?annotation rdfs:label ?ec .\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "7cf90f03-dc57-45a5-8320-d422e1ecbcb8",
    "evaluation_timestamp": "2025-05-11T00:28:07.297026",
    "question_understanding_prompt_tokens": 250,
    "question_understanding_completion_tokens": 21,
    "question_understanding_total_tokens": 271,
    "sparql_query_construction_prompt_tokens": 1932,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 1932,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Line 14, column 14: Unresolved prefixed name: rdfs:seeAlso",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "syntactically not correct"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/19_draft_human_metabolome",
    "natural_language_question": "Generate a draft human metabolome",
    "ground_truth_query": "PREFIX chebislash: <http://purl.obolibrary.org/obo/chebi/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  ?uniprot ?mnemonic ?rhea ?chebi ?smiles ?inchiKey\nWHERE\n{\n  ?rhea rh:side/rh:contains/rh:compound ?compound .\n  ?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?chebi .\n  ?chebi chebislash:smiles ?smiles ;\n          chebislash:inchikey ?inchiKey .\n  SERVICE <https://sparql.uniprot.org/sparql> {\n     ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea ;\n                                             up:organism taxon:9606 ;\n                                             up:mnemonic ?mnemonic .\n\n   }\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/19_draft_human_metabolome.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\n\nSELECT DISTINCT ?metabolite ?metaboliteName\nWHERE {\n  # Find proteins associated with Homo sapiens in UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein up:organism taxon:9606 .  # Homo sapiens taxonomy ID\n    ?protein rdfs:seeAlso ?rheaReaction .\n  }\n\n  # Find metabolites involved in reactions from RheaDB linked to the proteins\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rheaReaction a <http://rdf.rhea-db.org/schema#Reaction> .\n    ?rheaReaction <http://rdf.rhea-db.org/schema#equation> ?equation .\n    ?equation rdfs:label ?metaboliteName .\n    BIND (STRBEFORE(?metaboliteName, \" \")) AS ?metabolite\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "a04a4399-305a-4c60-bb49-316f670092bc",
    "evaluation_timestamp": "2025-05-11T00:28:16.900872",
    "question_understanding_prompt_tokens": 243,
    "question_understanding_completion_tokens": 20,
    "question_understanding_total_tokens": 263,
    "sparql_query_construction_prompt_tokens": 1449,
    "sparql_query_construction_completion_tokens": 519,
    "sparql_query_construction_total_tokens": 1968,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Encountered \" \")\" \") \"\" at line 20, column 42.\nWas expecting one of:\n    \"not\" ...\n    \"as\" ...\n    \"in\" ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n    \"=\" ...\n    \"!=\" ...\n    \">\" ...\n    \"<\" ...\n    \"<=\" ...\n    \">=\" ...\n    \"||\" ...\n    \"&&\" ...\n    \"+\" ...\n    \"-\" ...\n    \"*\" ...\n    \"/\" ...",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "syntactically not correct"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/20_search_chemical_names_in_japanese",
    "natural_language_question": "Search for Chemical names starting in Japanese, translated to english using allie",
    "ground_truth_query": "PREFIX oboInOwl: <http://www.geneontology.org/formats/oboInOwl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT\n*\nWHERE {\nSERVICE <https://data.allie.dbcls.jp/sparql>{\n        ?x rdfs:label \"1,2,4-トリクロロベンゼン\"@ja ;\n            rdfs:label ?englishLabel .\n        FILTER(lang(?englishLabel) = \"en\")\n    }\n  BIND(STR(?englishLabel) AS ?englishLabelStr)\n  ?chebi rdfs:label|oboInOwl:hasSynonym ?englishLabelStr .\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql/",
    "federates_with": [
      "https://data.allie.dbcls.jp/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/20_search_chemical_names_in_japanese.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?chebi_name\nWHERE {\n  # Query ChEBI for chemical entities with names starting with \"Japanese\"\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?chebi a <http://purl.obolibrary.org/obo/CHEBI_24431> . # Chemical entity\n    ?chebi rdfs:label ?chebi_name .\n    FILTER STRSTARTS(LCASE(?chebi_name), \"japanese\")\n  }\n  #OPTIONAL {\n  #  SERVICE <some_translation_endpoint> {  # Replace with a real translation endpoint if available\n  #    ?chebi_name <translation_property> ?english_name .\n  #  }\n  #}\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "023e5793-bf5a-4c36-9aaf-01d0fb8220fc",
    "evaluation_timestamp": "2025-05-11T00:28:25.184548",
    "question_understanding_prompt_tokens": 256,
    "question_understanding_completion_tokens": 23,
    "question_understanding_total_tokens": 279,
    "sparql_query_construction_prompt_tokens": 1478,
    "sparql_query_construction_completion_tokens": 448,
    "sparql_query_construction_total_tokens": 1926,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/117_Retrieve_parent_reactions_and_their_catalyzing_enzymes_for_a_metabolite_that_is_not_directly_involved_in_a_reaction",
    "natural_language_question": "Retrieve parent reactions (and their catalyzing enzymes) for a metabolite that is not directly involved in a reaction (ex: CHEBI:83137).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX up:<http://purl.uniprot.org/core/>\nPREFIX taxon:<http://purl.uniprot.org/taxonomy/>\nPREFIX keywords:<http://purl.uniprot.org/keywords/>\n\nSELECT\n  ?chebi\n  ?ecNumber\n  (count(?protein) as ?proteinCount)\n  ?reaction\n  ?equation\nWHERE {\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:equation ?equation .\n  ?reaction rh:ec ?ecNumber .\n  ?reaction rh:side ?reactionSide .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi .\n  CHEBI:83137 rdfs:subClassOf+ ?chebi.\n\n  SERVICE <https://sparql.uniprot.org/sparql> {\n  ?protein a up:Protein .\n  ?protein up:reviewed true .\n    {?protein up:enzyme ?ecNumber}\n  UNION\n    {?protein up:domain/up:enzyme ?ecNumber}\n  UNION\n    {?protein up:component/up:enzyme ?ecNumber} .\n  }\n} \nGROUP BY ?chebi ?ecNumber ?reaction ?equation",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/117_Retrieve_parent_reactions_and_their_catalyzing_enzymes_for_a_metabolite_that_is_not_directly_involved_in_a_reaction.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX uniprot: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?reaction ?enzyme ?parentReaction\nWHERE {\n  # Find reactions involving CHEBI:83137 as a participant\n  {\n    SELECT DISTINCT ?reaction WHERE {\n      ?reaction rhea: Rhea_has_participant chebi:83137 .\n    }\n  }\n\n  # Find metabolites involved in these reactions\n  ?reaction rhea: Rhea_has_participant ?metabolite .\n  FILTER (?metabolite != chebi:83137) # Exclude the original metabolite\n\n  # Find parent reactions that involve these metabolites\n  ?parentReaction rhea: Rhea_has_participant ?metabolite .\n  ?parentReaction rhea: Rhea_has_catalysis ?catalysis .\n\n  # Find enzymes catalyzing the parent reactions using UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?enzyme uniprot:catalyticActivity ?parentReaction .\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "c10a1e55-6c13-45e9-9530-8fff427fc1b6",
    "evaluation_timestamp": "2025-05-11T00:28:34.540792",
    "question_understanding_prompt_tokens": 274,
    "question_understanding_completion_tokens": 36,
    "question_understanding_total_tokens": 310,
    "sparql_query_construction_prompt_tokens": 2484,
    "sparql_query_construction_completion_tokens": 500,
    "sparql_query_construction_total_tokens": 2984,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Lexical error at line 12, column 43.  Encountered: '32' (32), after prefix \"Rhea_has_participant\"",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "syntactically not correct"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/18",
    "natural_language_question": "Use <a href=\"https://idsm.elixir-czech.cz/sparql\">IDSM Sachem</a> to find ChEBIs with a a <a href=\"https://www.ebi.ac.uk/chebi/searchId.do?chebiId=CHEBI:35516\">Cholestane</a> skeleton (in SMILES). Then match returned ChEBIs to Rhea undirected reactions.",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\n\n\nSELECT \n  ?rhea \n  ?chebi\nWHERE {\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n    ?chebi sachem:substructureSearch [\n        sachem:query \"[C@]12(CCC3CCCC[C@]3(C)[C@@]1([H])CC[C@]1(C)[C@@]([H])([C@@](C)([H])CCCC(C)C)CC[C@@]21[H])[H]\" ].\n  }\n  ?rhea rh:side/rh:contains/rh:compound/rdfs:subClassOf ?chebi .\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/18.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?reaction ?chebiName\nWHERE {\n  # Subquery to get ChEBI IDs from IDSM Sachem that contain the Cholestane skeleton\n  SERVICE <https://idsm.elixir-czech.cz/sparql> {\n    PREFIX sachem: <https://idsm.elixir-czech.cz/sparql/model/>\n    PREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\n    SELECT DISTINCT ?chebiID ?smiles WHERE {\n      ?compound a sachem:Compound .\n      ?compound sachem:externalId ?chebiID .\n      ?compound sachem:smiles ?smiles .\n      FILTER (contains(?smiles, \"C[C@]12\")) # Filter for Cholestane skeleton\n      FILTER (STRSTARTS(str(?chebiID), \"http://purl.obolibrary.org/obo/CHEBI_\"))\n    }\n  } # End of IDSM Sachem subquery\n\n  # Use the ChEBI IDs to find Rhea undirected reactions\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rhea: Rhea_has_participant ?chebiID .\n    ?chebiID rdfs:label ?chebiName .\n    ?reaction a rhea:undirectedReaction .\n  } # End of Rhea DB query\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "590eb6ab-4f22-44ab-b365-86ab8430315a",
    "evaluation_timestamp": "2025-05-11T00:28:44.472311",
    "question_understanding_prompt_tokens": 332,
    "question_understanding_completion_tokens": 52,
    "question_understanding_total_tokens": 384,
    "sparql_query_construction_prompt_tokens": 2567,
    "sparql_query_construction_completion_tokens": 518,
    "sparql_query_construction_total_tokens": 3085,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Encountered \" \"prefix\" \"PREFIX \"\" at line 9, column 5.\nWas expecting one of:\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n    \"select\" ...\n    \"values\" ...\n    \"graph\" ...\n    \"optional\" ...\n    \"minus\" ...\n    \"bind\" ...\n    \"service\" ...\n    \"filter\" ...\n    \"true\" ...\n    \"false\" ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n    \"(\" ...\n     ...\n    \"{\" ...\n    \"}\" ...\n    \"[\" ...\n     ...\n    \"<<(\" ...\n    \"<<\" ...",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "syntactically not correct"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/115_Retrieve_the_set_of_metabolites_involved_in_reactions_catalyzed_by_human_genes_HUMAN_reference_proteome",
    "natural_language_question": "Retrieve the set of metabolites involved in reactions catalyzed by human genes (HUMAN reference proteome)",
    "ground_truth_query": "\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX taxon:<http://purl.uniprot.org/taxonomy/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up:<http://purl.uniprot.org/core/>\nPREFIX keywords:<http://purl.uniprot.org/keywords/>\n\nSELECT\n  ?chebi\n  ?reaction\n  ?ecNumber\n  ?protein\n  ?ensemblTranscript\n  ?ensemblGene\nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein up:reviewed true .\n    ?protein up:organism taxon:9606 .\n    ?protein up:classifiedWith keywords:1185 .\n\n    ?protein rdfs:seeAlso ?ensemblTranscript .\n    ?ensemblTranscript a up:Transcript_Resource .\n    ?ensemblTranscript up:database <http://purl.uniprot.org/database/Ensembl> .\n    ?ensemblTranscript up:transcribedFrom ?ensemblGene .\n\n      {?protein up:enzyme ?ecNumber .}\n    UNION\n      {?protein up:domain/up:enzyme ?ecNumber .}\n    UNION\n      {?protein up:component/up:enzyme ?ecNumber .}\n  }\n\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:ec ?ecNumber .\n  ?reaction rh:side ?reactionSide .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi . # only considering small molecules participants\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/115_Retrieve_the_set_of_metabolites_involved_in_reactions_catalyzed_by_human_genes_HUMAN_reference_proteome.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX rh: <http://rdf.rhea-db.org/vocabulary/>\n\nSELECT DISTINCT ?metabolite\nWHERE {\n  # Query UniProt for human proteins and their associated Rhea reactions\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    up:organism ?protein <http://purl.uniprot.org/taxonomy/9606> . # Homo sapiens\n    ?protein rdfs:seeAlso ?rheaReaction .\n    FILTER (REGEX(STR(?rheaReaction), \"rhea.db.org\")) # Filter for Rhea reactions\n    BIND(IRI(REPLACE(STR(?rheaReaction), \"https://www.rhea-db.org/reaction/\", \"http://rdf.rhea-db.org/\")) AS ?rheaId) # Create Rhea ID\n  }\n\n  # Query Rhea DB for metabolites involved in the reactions\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rheaId rh:hasParticipant ?metabolite .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "dccb94de-e3d1-4c80-821b-afc12afd5edf",
    "evaluation_timestamp": "2025-05-11T00:28:53.710601",
    "question_understanding_prompt_tokens": 257,
    "question_understanding_completion_tokens": 28,
    "question_understanding_total_tokens": 285,
    "sparql_query_construction_prompt_tokens": 2399,
    "sparql_query_construction_completion_tokens": 507,
    "sparql_query_construction_total_tokens": 2906,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  }
]