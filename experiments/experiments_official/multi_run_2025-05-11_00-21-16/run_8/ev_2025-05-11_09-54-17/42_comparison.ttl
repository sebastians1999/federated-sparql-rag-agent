
# Natural Language Question
# =======================
Connect patents cited in UniProtKB with those in the patent database at EPO via publication number.

# Target Endpoint
# ===============
https://sparql.uniprot.org/sparql/

# Ground Truth Query
# =================
PREFIX patent: <http://data.epo.org/linked-data/def/patent/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT ?citation ?patent ?application ?applicationNo
WHERE
{
  ?citation a up:Patent_Citation ;
    skos:exactMatch ?patent .
  FILTER(CONTAINS(STR(?patent), 'EP'))
  BIND(SUBSTR(STR(?patent), 35) AS ?applicationNo)
  SERVICE <https://data.epo.org/linked-data/query>{
    ?application patent:publicationNumber ?applicationNo
  }
}

# Predicted Query
# ==============
# https://sparql.uniprot.org/sparql
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX up: <http://purl.uniprot.org/core/>

# Query UniProtKB for entries with patent citations
SELECT DISTINCT ?uniprotEntry ?patentPublicationNumber
WHERE {
  ?uniprotEntry a up:Protein .
  ?uniprotEntry up:citation ?citation .
  ?citation rdf:type up:Patent .
  ?citation rdfs:label ?patentPublicationNumber . # Assuming patent publication number is available as a label

  #Illustrative example of how to query a hypothetical EPO endpoint
  #SERVICE <hypothetical_epo_endpoint> {
  #  ?epoPatent a <hypothetical_epo_patent_class> .
  #  ?epoPatent <hypothetical_publication_number_property> ?patentPublicationNumber .
  #  ?epoPatent <hypothetical_title_property> ?epoPatentTitle .
  #}
}
#The query retrieves UniProt entries and their associated patent publication numbers.
#The SERVICE block is commented out because there is no EPO endpoint provided.
#If an EPO endpoint were available, the commented SERVICE block would be uncommented and adapted to query the EPO database for patents with matching publication numbers.
