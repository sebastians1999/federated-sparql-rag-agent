
# Natural Language Question
# =======================
Distribution of reactions according to the first class of the enzyme classification (federated query)

# Target Endpoint
# ===============
https://sparql.rhea-db.org/sparql

# Ground Truth Query
# =================
PREFIX ec: <http://purl.uniprot.org/enzyme/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rh: <http://rdf.rhea-db.org/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>

# Query 11
# Retrieve the count of reactions mapped to each level (main class) of the enzyme classification
#
# This query mimics the Filter section of the Rhea website (Browse all reactions)
# https://www.rhea-db.org/rhea?query=
SELECT ?ecClass (STR(?ecName) AS ?ecClassName) (COUNT(?rhea) AS ?rheaCount)
WHERE {
  SERVICE <https://sparql.uniprot.org/sparql> {
    VALUES (?ecClass) { (ec:1.-.-.-)(ec:2.-.-.-)(ec:3.-.-.-)(ec:4.-.-.-)(ec:5.-.-.-) (ec:6.-.-.-) (ec:7.-.-.-)}
    ?ecNumber rdfs:subClassOf ?ecClass .
    ?ecClass skos:prefLabel ?ecName .
  }
  ?rhea rdfs:subClassOf rh:Reaction .
  ?rhea rh:ec ?ecNumber .
} GROUP BY ?ecClass ?ecName

# Predicted Query
# ==============
# https://sparql.rhea-db.org/sparql
PREFIX rhea: <http://rdf.rhea-db.org/>
PREFIX uniprot: <http://purl.uniprot.org/core/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT ?firstEcClass (COUNT(DISTINCT ?reaction) AS ?reactionCount)
WHERE {
  # Find Rhea reactions and the corresponding UniProt IDs of enzymes that catalyze them
  ?reaction a rhea:Reaction .
  ?reaction rhea:enzyme ?enzyme . # Assuming rhea:enzyme relates reactions to enzymes.  This might need adjustment based on the actual Rhea schema.
  ?enzyme rdfs:seeAlso ?uniprotResource . # Assuming rdfs:seeAlso links to external resources, including UniProt.  This might need adjustment.
  FILTER (REGEX(STR(?uniprotResource), "uniprot.org")) # Filter to ensure the resource is a UniProt ID

  BIND(IRI(REPLACE(STR(?uniprotResource), "https://www.uniprot.org/uniprot/", "http://purl.uniprot.org/uniprot/")) AS ?uniprotUri) # Create UniProt URI

  #Federate to UniProt to retrieve EC number
  SERVICE <https://sparql.uniprot.org/sparql> {
    ?uniprotUri uniprot:ecNumber ?ecNumber .
  }

  # Extract the first class from the EC number
  BIND(SUBSTR(STR(?ecNumber), 1, 1) AS ?firstEcClass) # Assuming EC number format is "X.Y.Z.W"
}
GROUP BY ?firstEcClass
ORDER BY ?firstEcClass
