
# Natural Language Question
# =======================
Use <a href="http://allie.dbcls.jp/">ALLIE</a> a service for Abbreviation / Long Form in Japanese and English to search in UniProt using Japanese.

# Target Endpoint
# ===============
https://sparql.uniprot.org/sparql/

# Ground Truth Query
# =================
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT ?protein ?englishLabelStr
WHERE {
    SERVICE <https://data.allie.dbcls.jp/sparql>{
        ?x rdfs:label "アミロイド前駆体タンパク質"@ja ;
            rdfs:label ?englishLabel .
        FILTER(lang(?englishLabel) = "en")
    }
    BIND (STR(?englishLabel) AS ?englishLabelStr)
    ?protein a up:Protein .
    {
        ?protein (up:recommendedName|up:alternativeName) ?structuredName .
    }
    UNION
    {
        VALUES(?partType){(up:domain) (up:component)}
            ?protein ?partType ?part .
        ?part (up:recommendedName|up:alternativeName) ?structuredName .
    }
    ?structuredName ?anyKindOfName  ?englishLabelStr .
    ?anyKindOfName rdfs:subPropertyOf up:structuredNameType .
}

# Predicted Query
# ==============
# https://sparql.uniprot.org/sparql
# Assuming ALLIE provides a UniProt Accession or keyword in English.
# This query searches UniProt for entries related to the translated term.

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT ?protein ?proteinName ?organism
WHERE {
  # Replace "translated_term_from_ALLIE" with the actual term from ALLIE.
  # If ALLIE provides a UniProt Accession:
  #   BIND(IRI(CONCAT("http://purl.uniprot.org/uniprot/", "translated_term_from_ALLIE")) AS ?protein)
  # Else, if ALLIE provides an English keyword:
  ?protein a up:Protein .
  ?protein rdfs:label ?proteinName .
  FILTER (CONTAINS(LCASE(?proteinName), "translated_term_from_ALLIE")) #Case-insensitive search

  #Get the organism
  ?protein up:organism ?organismURI .
  ?organismURI rdfs:label ?organism .
}
