
# Natural Language Question
# =======================
Find the orthologous proteins for UniProtKB entry P05067 using the <a href="http://www.orthod.org">OrthoDB database</a>

# Target Endpoint
# ===============
https://sparql.uniprot.org/sparql/

# Ground Truth Query
# =================
PREFIX orthodb: <http://purl.orthodb.org/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT
  ?protein
  ?orthoGroup
  ?scientificName
  ?functionComment
  ?prefferedGeneName
  ((STRLEN(?value) - ?medianLength) as ?deviationFromMedianLength)
WHERE
{
  uniprotkb:P05067 a up:Protein ;
        up:organism/up:scientificName ?scientificName ;
        rdfs:seeAlso ?orthoGroup ;
        up:encodedBy/skos:prefLabel ?prefferedGeneName ;
          up:sequence/rdf:value ?value .
  OPTIONAL {
    ?protein up:annotation ?functionAnnotation .
    ?functionAnnotation a up:Function_Annotation ;
      rdfs:comment ?functionComment .
  }
  SERVICE <https://sparql.orthodb.org/sparql>{
    ?orthoGroup orthodb:ogMedianProteinLength ?medianLength .
    ?orthoGroup orthodb:hasMember ?xref .
    ?xref orthodb:xref/orthodb:xrefResource uniprotkb:P05067 .
  }
}
LIMIT 985915

# Predicted Query
# ==============
# https://sparql.uniprot.org/sparql
# Find orthologous proteins for UniProtKB entry P05067

PREFIX orthodb: <http://purl.orthodb.org/>
PREFIX up: <http://purl.uniprot.org/core/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?orthologousProtein ?geneName ?organism
WHERE {
  # Define the UniProtKB entry of interest
  VALUES ?uniprotEntry { <http://purl.uniprot.org/uniprot/P05067> }

  # Query UniProt for the gene and organism associated with the UniProt entry
  SERVICE <https://sparql.uniprot.org/sparql> {
    ?uniprotEntry up:gene ?gene .
    ?uniprotEntry up:organism ?organismResource .
    ?organismResource rdfs:label ?organism .
    ?gene rdfs:label ?geneName .
  }

  # Assuming OrthoDB has information about orthologs based on gene name
  # This part would ideally query OrthoDB if a public endpoint was available
  # Since there is no OrthoDB endpoint provided, this part is illustrative
  # and would need to be adapted based on actual OrthoDB data structure.
  #BIND(IRI(CONCAT("http://example.orthodb.org/gene/", ?geneName)) AS ?orthodbGene) #Example URI construction

  #SERVICE <http://example.orthodb.org/sparql> { #Example OrthoDB endpoint
  #  ?orthodbGene orthodb:orthologousProtein ?orthologousProtein .
  #}

  # Placeholder for orthologous protein - replace with actual query against OrthoDB
  BIND("No OrthoDB endpoint available to query" AS ?orthologousProtein)
}
