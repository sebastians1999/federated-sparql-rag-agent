
# Natural Language Question
# =======================
Find the orthologous proteins for UniProtKB entry P05067 using the <a href="http://www.orthod.org">OrthoDB database</a>

# Target Endpoint
# ===============
https://sparql.uniprot.org/sparql/

# Ground Truth Query
# =================
PREFIX orthodb: <http://purl.orthodb.org/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT
  ?protein
  ?orthoGroup
  ?scientificName
  ?functionComment
  ?prefferedGeneName
  ((STRLEN(?value) - ?medianLength) as ?deviationFromMedianLength)
WHERE
{
  uniprotkb:P05067 a up:Protein ;
        up:organism/up:scientificName ?scientificName ;
        rdfs:seeAlso ?orthoGroup ;
        up:encodedBy/skos:prefLabel ?prefferedGeneName ;
          up:sequence/rdf:value ?value .
  OPTIONAL {
    ?protein up:annotation ?functionAnnotation .
    ?functionAnnotation a up:Function_Annotation ;
      rdfs:comment ?functionComment .
  }
  SERVICE <https://sparql.orthodb.org/sparql>{
    ?orthoGroup orthodb:ogMedianProteinLength ?medianLength .
    ?orthoGroup orthodb:hasMember ?xref .
    ?xref orthodb:xref/orthodb:xrefResource uniprotkb:P05067 .
  }
}
LIMIT 985915

# Predicted Query
# ==============
# https://sparql.uniprot.org/sparql
# Find the orthologous proteins for UniProtKB entry P05067 using OrthoDB.
# Since there is no direct OrthoDB endpoint, we will query UniProt and attempt to link to OrthoDB identifiers.
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX up: <http://purl.uniprot.org/core/>
PREFIX orthodb: <http://purl.orthodb.org/>

SELECT DISTINCT ?protein ?orthodbGroup
WHERE {
  # Find the UniProt entry for P05067
  VALUES ?uniprotEntry { <http://purl.uniprot.org/uniprot/P05067> }

  # Get the protein associated with the UniProt entry
  ?protein a up:Protein ;
           up:database ?uniprotEntry .

  # Attempt to find OrthoDB cross-references.  Since there's no direct link, we'll look for any database cross-references that *mention* OrthoDB.
  ?protein up:database ?orthodbGroup .
  FILTER CONTAINS(str(?orthodbGroup), "orthodb") # Crude filter, but necessary without a direct OrthoDB endpoint.  Ideally, there'd be a proper predicate for OrthoDB xrefs.
}
