
# Natural Language Question
# =======================
Select all Rhea reactions linked to protein sequences (enzymes and transporters) in UniProtKB

# Target Endpoint
# ===============
https://sparql.rhea-db.org/sparql

# Ground Truth Query
# =================
PREFIX rh: <http://rdf.rhea-db.org/>
PREFIX up: <http://purl.uniprot.org/core/>

# Query 12
# Select all Rhea reactions used to annotate enzyme sequences in UniProtKB
# return the number of UniProtKB entries
# Federated query using a service to UniProt SPARQL endpoint
#
# This query corresponds to the Rhea website query:
# https://www.rhea-db.org/rhea?query=uniprot:*
#
SELECT ?uniprotCount ?rhea ?accession ?equation 
WHERE {
  SERVICE <https://sparql.uniprot.org/sparql> { 
  	SELECT ?rhea (count(?uniprot) as ?uniprotCount) {
      ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea . 
  	}
  	GROUP BY ?rhea
  }
  ?rhea rh:accession ?accession .
  ?rhea rh:equation ?equation .
}

# Predicted Query
# ==============
# https://sparql.rhea-db.org/sparql
# Federated query to retrieve Rhea reactions linked to protein sequences in UniProtKB

PREFIX rhea: <http://rdf.rhea-db.org/>
PREFIX uniprot: <http://purl.uniprot.org/core/>

SELECT DISTINCT ?reaction ?reactionLabel
WHERE {
  # Query Rhea for reactions
  SERVICE <https://sparql.rhea-db.org/sparql> {
    ?reaction a rhea:Reaction .
    ?reaction rdfs:label ?reactionLabel .
    # Find reactions that have participants that are enzymes or transporters
    ?reaction rhea:equation ?equation .
    ?equation rdfs:label ?equationLabel .
  }
  # Query UniProt for protein sequences that are enzymes or transporters and link them to Rhea reactions
  SERVICE <https://sparql.uniprot.org/sparql> {
    ?protein a uniprot:Protein .
    ?protein rdfs:label ?proteinLabel .
    # Assuming some form of link between UniProt proteins and Rhea reactions, e.g., via cross-references
    # This is a placeholder and needs to be replaced with the actual property linking proteins to reactions
    # Example: ?protein uniprot:enzyme ?reaction .  (This is just an example, the actual property may differ)
    #FILTER CONTAINS(STR(?proteinLabel), STR(?equationLabel))
  }
  #FILTER CONTAINS(STR(?reactionLabel), STR(?proteinLabel))
}
