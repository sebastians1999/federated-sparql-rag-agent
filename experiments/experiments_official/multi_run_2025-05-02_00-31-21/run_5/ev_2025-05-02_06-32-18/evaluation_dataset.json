[
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/16",
    "natural_language_question": "For a given lipid (SWISSLIPID:000399814, Ceramide), return a list of all enzymes in UniProtKB/Swiss-Prot annotated to catalyze reactions involving that lipid.\nThis query does not consider the hierarchy: it looks for reactions and enzymes only for the specified lipid.",
    "ground_truth_query": "PREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n# Example 16\nSELECT ?startId ?startName ?uniprot\nWHERE\n{\n  # SwissLipids query (list of) identifier(s)\n  VALUES ?startId { SWISSLIPID:000399814 }\n  # name\n  ?startId rdfs:label ?startName .\n  # ChEBI x-ref\n  ?startId owl:equivalentClass ?chebi .\n  # federated query to Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n  \t?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n  }    \n  # federated query to UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?uniprot up:reviewed true .\n    ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  }\n} \nORDER BY ?startId",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/16.ttl",
    "predicted_query": "# https://beta.sparql.swisslipids.org/\nPREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n# Find enzymes catalyzing reactions involving a specific lipid (Ceramide)\n\nSELECT ?enzyme ?enzymeName\nWHERE {\n  # Define the target lipid\n  VALUES ?lipid { SWISSLIPID:000399814 }\n\n  # Find ChEBI xref for the lipid\n  ?lipid owl:equivalentClass ?chebi .\n\n  # Find reactions in Rhea involving the ChEBI entity\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n  }\n\n  # Find enzymes in UniProt that catalyze the Rhea reaction\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?enzyme up:reviewed true .\n    ?enzyme up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n    ?enzyme up:recommendedName/up:fullName ?enzymeName .\n  }\n}",
    "predicted_endpoint": "https://beta.sparql.swisslipids.org/",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "cb2c7433-893f-4b6b-8794-4c3dc8a02def",
    "evaluation_timestamp": "2025-05-02T06:32:29.443147",
    "question_understanding_prompt_tokens": 306,
    "question_understanding_completion_tokens": 41,
    "question_understanding_total_tokens": 347,
    "sparql_query_construction_prompt_tokens": 6666,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 6666,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "EndPointInternalError: The endpoint returned the HTTP status code 500. \n\nResponse:\nb'<!DOCTYPE html SYSTEM \"about:legacy-compat\">\\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\" xml:lang=\"en\"><head><title>Error</title><meta content=\"text/html; charset=UTF-8\" http-equiv=\"Content-Type\"/><link href=\"/\" rel=\"home\"/><link href=\"/base.css\" type=\"text/css\" rel=\"stylesheet\"/><script src=\"https://cdn.jsdelivr.net/npm/yasgui-yasqe@2.11.22/dist/yasqe.bundled.min.js\"></script><link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/yasqe/2.2/yasqe.min.css\"/><meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/><meta content=\"no-referrer\" name=\"referrer\"/></head><body typeof=\"schema:WebPage\"><a accesskey=\"2\" href=\"#content\" hidden=\"hidden\">Skip Header</a><main class=\"sparql error\" id=\"content\"><h1>500 Internal Server Error</h1><p>The server was not able to handle your request.</p><p> If this error occurs repeatedly, \\n\\t\\tplease <a id=\"contactLink\">contact us</a>\\n\\t\\tand indicate the page you were trying to access.</p><script language=\"javascript\">\\n\\t\\t\\tvar part2 = document.domain.replace(/sparql\\\\./,\\'\\');\\n\\t\\t\\tdocument.getElementById(\\'contactLink\\').href=part2 + \\'/contact\\';\\n\\t\\t</script></main><script src=\"/sparql.js\" type=\"text/javascript\"> </script></body></html>'"
  },
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/6",
    "natural_language_question": "For a given lipid (SWISSLIPID:000399814, Ceramide), return a list of all corresponding reactions (Rhea IDs and equation), as well as their enzymes as annotated in UniProtKB/Swiss-Prot) enzymes themselves (ID and protein name).\nThis query does not consider the hierarchy: it looks for reactions and enzymes only for the specified lipid.",
    "ground_truth_query": "PREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n# Example 6\nSELECT ?startId ?startName ?chebi ?rhea ?rheaEquation ?uniprot ?uniprotName\nWHERE\n{\n  # SwissLipids query (list of) identifier(s)\n  VALUES ?startId { SWISSLIPID:000399814 }\n  # name\n  ?startId rdfs:label ?startName .\n  # ChEBI x-ref\n  ?startId owl:equivalentClass ?chebi .\n  # federated query to Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n  \t?rhea rh:equation ?rheaEquation .\n  \t?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n  }    \n  # federated query to UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?uniprot up:reviewed true .\n    ?uniprot up:recommendedName/up:fullName ?uniprotName .\n    ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  }\n} \nORDER BY ?startId",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/6.ttl",
    "predicted_query": "# https://beta.sparql.swisslipids.org/\nPREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n# Find Rhea reactions and UniProt enzymes for a given lipid (SWISSLIPID:000399814, Ceramide)\n\nSELECT ?rheaId ?rheaEquation ?uniprotId ?proteinName\nWHERE {\n  # SwissLipids query for the given lipid\n  VALUES ?lipidId { SWISSLIPID:000399814 }\n\n  # Find the equivalent ChEBI ID\n  ?lipidId owl:equivalentClass ?chebiId .\n\n  # Federated query to Rhea to find reactions involving the ChEBI ID\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebiId .\n    ?rhea rh:accession ?rheaId .\n    ?rhea rh:equation ?rheaEquation .\n  }\n\n  # Federated query to UniProt to find enzymes catalyzing the Rhea reactions\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?uniprotId up:reviewed true .\n    ?uniprotId up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n    ?uniprotId up:proteinName ?proteinName .\n  }\n}",
    "predicted_endpoint": "https://beta.sparql.swisslipids.org/",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "681d0236-fb1e-4efe-9a42-a652c99a9576",
    "evaluation_timestamp": "2025-05-02T06:32:41.623324",
    "question_understanding_prompt_tokens": 318,
    "question_understanding_completion_tokens": 89,
    "question_understanding_total_tokens": 407,
    "sparql_query_construction_prompt_tokens": 5937,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 5937,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "EndPointInternalError: The endpoint returned the HTTP status code 500. \n\nResponse:\nb'<!DOCTYPE html SYSTEM \"about:legacy-compat\">\\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\" xml:lang=\"en\"><head><title>Error</title><meta content=\"text/html; charset=UTF-8\" http-equiv=\"Content-Type\"/><link href=\"/\" rel=\"home\"/><link href=\"/base.css\" type=\"text/css\" rel=\"stylesheet\"/><script src=\"https://cdn.jsdelivr.net/npm/yasgui-yasqe@2.11.22/dist/yasqe.bundled.min.js\"></script><link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/yasqe/2.2/yasqe.min.css\"/><meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/><meta content=\"no-referrer\" name=\"referrer\"/></head><body typeof=\"schema:WebPage\"><a accesskey=\"2\" href=\"#content\" hidden=\"hidden\">Skip Header</a><main class=\"sparql error\" id=\"content\"><h1>500 Internal Server Error</h1><p>The server was not able to handle your request.</p><p> If this error occurs repeatedly, \\n\\t\\tplease <a id=\"contactLink\">contact us</a>\\n\\t\\tand indicate the page you were trying to access.</p><script language=\"javascript\">\\n\\t\\t\\tvar part2 = document.domain.replace(/sparql\\\\./,\\'\\');\\n\\t\\t\\tdocument.getElementById(\\'contactLink\\').href=part2 + \\'/contact\\';\\n\\t\\t</script></main><script src=\"/sparql.js\" type=\"text/javascript\"> </script></body></html>'"
  },
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/5",
    "natural_language_question": "For a given lipid (SWISSLIPID:000399814, Ceramide), return a list of all corresponding reactions (Rhea IDs and equation).\nThis query does consider the hierarchy: it looks for reactions involving the specified lipid and/or its more specific forms.",
    "ground_truth_query": "PREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\n\n# Example 5\nSELECT ?startId ?startName ?id ?name ?chebi ?rhea ?rheaEquation \nWHERE\n{\n  # SwissLipids query (list of) identifier(s)\n  VALUES ?startId { SWISSLIPID:000399814 }\n  # name\n  ?startId rdfs:label ?startName .\n  # Retrieve children lipids \n  ?id rdfs:subClassOf* ?startId .\n  ?id rdfs:label ?name .\n  # ChEBI x-ref\n  ?id owl:equivalentClass ?chebi .\n  # federated query to Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n  \t?rhea rh:equation ?rheaEquation .\n  \t?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n  }    \n} \nORDER BY  ?startId ?id",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/5.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql/\nPREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\n# Find Rhea reactions that involve Ceramide (SWISSLIPID:000399814) or its subclasses.\nSELECT DISTINCT ?rheaID ?equation\nWHERE {\n  # Define the target lipid (Ceramide) using its SwissLipids ID.\n  VALUES ?startId { SWISSLIPID:000399814 }\n\n  # Find the equivalent ChEBI identifier for the given lipid in SwissLipids.\n  SERVICE <https://sparql.swisslipids.org/sparql/> {\n    ?startId owl:equivalentClass ?chebi .\n  }\n\n  # Find all child CHEBI terms (more specific forms of the lipid)\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?chebi rdfs:subClassOf* ?chebiClass .\n    ?chebiClass rdfs:subClassOf CHEBI:18059 . # Lipid\n  }\n  \n  # Find Rhea reactions that involve the lipid or its subclasses.\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:equation ?equation .\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n    ?compound rh:chebi ?chebiClass .\n    ?rhea rh:accession ?rheaID .\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "2cfe3f2f-bd4f-4938-9314-3ac6fdbbd87e",
    "evaluation_timestamp": "2025-05-02T06:32:52.060398",
    "question_understanding_prompt_tokens": 297,
    "question_understanding_completion_tokens": 64,
    "question_understanding_total_tokens": 361,
    "sparql_query_construction_prompt_tokens": 5426,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 5426,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/34",
    "natural_language_question": "Lipids affected by human enzymes",
    "ground_truth_query": "PREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?swisslipid  {\n  ?swisslipid owl:equivalentClass ?chebi .\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n\t?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?metabolite . \n  }\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?catalyticActivityAnnotation up:catalyticActivity/up:catalyzedReaction ?rhea .\n    ?protein up:annotation ?catalyticActivityAnnotation ;\n             up:organism taxon:9606 .\n  }\n}\nLIMIT 1",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/34.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?lipid ?protein\nWHERE {\n  # Query Rhea for reactions involving lipids\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf rh:Reaction .\n    ?reaction rh:side/rh:contains/rh:compound ?compound .\n    ?compound rh:chebi ?lipid .\n    # Filter for lipids (you might need to refine this based on specific lipid classes)\n    #?lipid rdfs:subClassOf CHEBI:a_lipid_class .  # Example: replace with a specific CHEBI lipid class if needed\n  }\n  \n  # Query UniProt for human enzymes catalyzing these reactions\n  SERVICE <https://sparql.uniprot.org/sparql/> {\n    ?protein up:annotation/up:catalyticActivity/up:catalyzedReaction ?reaction .\n    ?protein up:organism taxon:9606 .  # Human\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "39070d98-036c-4289-a0d9-173ca9d4e148",
    "evaluation_timestamp": "2025-05-02T06:38:34.432408",
    "question_understanding_prompt_tokens": 244,
    "question_understanding_completion_tokens": 20,
    "question_understanding_total_tokens": 264,
    "sparql_query_construction_prompt_tokens": 6986,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 6986,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/118_biosodafrontend_rat_brain_human_cancer",
    "natural_language_question": "What are the Homo sapiens genes associated with cancer and their orthologs expressed in the Rattus norvegicus brain?",
    "ground_truth_query": "PREFIX up:<http://purl.uniprot.org/core/>\nPREFIX taxon:<http://purl.uniprot.org/taxonomy/>\nPREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>\nPREFIX orth:<http://purl.org/net/orth#>\nPREFIX dcterms:<http://purl.org/dc/terms/>\nPREFIX obo:<http://purl.obolibrary.org/obo/>\nPREFIX lscr:<http://purl.org/lscr#>\nPREFIX genex:<http://purl.org/genex#>\nPREFIX sio: <http://semanticscience.org/resource/>\nSELECT ?gene ?orthologous_protein2 WHERE {\n  {\n    SELECT ?protein1 WHERE {\n      ?protein1 a up:Protein;\n        up:organism/up:scientificName 'Homo sapiens' ;\n        up:annotation ?annotation .\n      ?annotation rdfs:comment ?annotation_text.\n      ?annotation a up:Disease_Annotation .\n      FILTER CONTAINS (?annotation_text, \"cancer\")\n    }\n  }\n  SERVICE <https://sparql.omabrowser.org/sparql/> {\n    SELECT ?orthologous_protein2 ?protein1 ?gene WHERE {\n      ?protein_OMA a orth:Protein .\n      ?orthologous_protein2 a orth:Protein .\n      ?cluster a orth:OrthologsCluster .\n      ?cluster orth:hasHomologousMember ?node1 .\n      ?cluster orth:hasHomologousMember ?node2 .\n      ?node2 orth:hasHomologousMember* ?protein_OMA .\n      ?node1 orth:hasHomologousMember* ?orthologous_protein2 \n      .?orthologous_protein2 orth:organism/obo:RO_0002162/up:scientificName 'Rattus norvegicus' .\n      ?orthologous_protein2 sio:SIO_010079 ?gene .\n      ?protein_OMA lscr:xrefUniprot ?protein1 .\n      FILTER(?node1 != ?node2)\n    }\n  }\n  SERVICE <https://www.bgee.org/sparql/> {\n    ?gene genex:isExpressedIn ?anatEntity .\n    ?anatEntity rdfs:label 'brain' .\n    ?gene orth:organism ?org . \n    ?org obo:RO_0002162 taxon:10116 .\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql",
    "federates_with": [
      "https://sparql.omabrowser.org/sparql/",
      "https://www.bgee.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/118_biosodafrontend_rat_brain_human_cancer.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX genex: <http://purl.org/genex#>\nPREFIX lscr: <http://purl.org/lscr#>\n\nSELECT DISTINCT ?humanGene ?ratGene ?anatomicEntityLabel\nWHERE {\n  # Find human proteins associated with cancer\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?humanProtein a up:Protein ;\n      up:organism taxon:9606 ;  # Homo sapiens\n      up:encodedBy ?humanGene ;\n      up:annotation ?diseaseAnnotation .\n    ?diseaseAnnotation a up:Disease_Annotation ;\n      rdfs:comment ?diseaseComment .\n    FILTER (CONTAINS(LCASE(?diseaseComment), \"cancer\"))  # Filter for cancer-related diseases\n  }\n\n  # Find rat orthologs of the human genes\n  SERVICE <https://www.bgee.org/sparql> {\n    ?ratGene genex:isExpressedIn ?anatomicEntity .\n    ?ratGene lscr:xrefEnsemblGene ?ratEnsemblGene .\n    ?anatomicEntity rdfs:label ?anatomicEntityLabel .\n    FILTER (CONTAINS(LCASE(?anatomicEntityLabel), \"brain\")) # Filter for expression in brain\n\n    # Assuming a way to link human genes to rat genes via orthology in Bgee\n    # This part might need adjustment based on the actual Bgee schema\n    ?humanEnsemblGene lscr:xrefEnsemblGene ?humanGene . #Link human gene to ensembl gene\n    ?ratEnsemblGene genex:orthologousTo ?humanEnsemblGene . #Link rat ensembl gene to human ensembl gene\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "92c874d1-8167-4957-926d-89cb9e15bd40",
    "evaluation_timestamp": "2025-05-02T06:40:12.532107",
    "question_understanding_prompt_tokens": 263,
    "question_understanding_completion_tokens": 47,
    "question_understanding_total_tokens": 310,
    "sparql_query_construction_prompt_tokens": 6619,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 6619,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/51",
    "natural_language_question": "Find all proteins linked to arachidonate (CHEBI:32395)",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n\nSELECT \n    DISTINCT\n        ?uniprot\n        ?uniprotID\n        ?recname\n        ?gene\n        ?chebi\n        ?uniprotName\nWHERE {\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n     VALUES (?chebi) { (CHEBI:32395) }\n     ?rhea rh:side/rh:contains/rh:compound ?compound .\n     ?compound rh:chebi ?chebi .\n     ?chebi up:name ?uniprotName .\n  }\n  ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  ?uniprot up:mnemonic ?uniprotID .\n  ?uniprot up:recommendedName/up:fullName ?recname .\n  OPTIONAL {?uniprot up:encodedBy/skos:prefLabel ?gene .}\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/51_all_proteins_linked_to_arachidonate.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?protein\nWHERE {\n  # Query Rhea to find reactions involving arachidonate (CHEBI:32395)\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:side/rh:contains/rh:compound <http://purl.obolibrary.org/obo/CHEBI_32395> .\n  }\n  \n  # Link the Rhea reactions to UniProt proteins via catalytic activity\n  ?protein up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "14f14a66-a79a-44c9-8152-69bec43406f9",
    "evaluation_timestamp": "2025-05-02T06:40:26.249439",
    "question_understanding_prompt_tokens": 257,
    "question_understanding_completion_tokens": 31,
    "question_understanding_total_tokens": 288,
    "sparql_query_construction_prompt_tokens": 5115,
    "sparql_query_construction_completion_tokens": 232,
    "sparql_query_construction_total_tokens": 5347,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/40",
    "natural_language_question": "Retrieve human enzymes that metabolize sphingolipids and are annotated in ChEMBL",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?protein ?chemblEntry\nWHERE {\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rdfs:subClassOf rh:Reaction ;\n      rh:side/rh:contains/rh:compound/rh:chebi/rdfs:subClassOf+ CHEBI:26739 .\n  }\n  ?ca up:catalyzedReaction ?rhea .\n  ?protein up:annotation/up:catalyticActivity ?ca ;\n    up:organism taxon:9606 ;\n    rdfs:seeAlso ?chemblEntry .\n  ?chemblEntry up:database <http://purl.uniprot.org/database/ChEMBL> .\n}\nLIMIT 10",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/40_human_enzymes_that_metabolize_sphingolipids.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX cco: <http://rdf.ebi.ac.uk/terms/chembl#>\n\nSELECT DISTINCT ?protein ?proteinName ?chemblMolecule ?chemblMoleculeLabel\nWHERE {\n  # Find human enzymes\n  ?protein a up:Protein .\n  ?protein up:organism taxon:9606 .\n  ?protein up:annotation ?annotation .\n  ?annotation a up:Catalytic_Activity_Annotation .\n  ?protein up:recommendedName ?recName .\n  ?recName up:fullName ?proteinName .\n\n  # Find enzymes that catalyze reactions involving sphingolipids\n  # Assuming that enzymes metabolizing sphingolipids will have catalytic activity annotations\n  # related to reactions involving sphingolipids.\n  {\n    # Option 1: Directly link to a reaction involving sphingolipids\n    ?annotation up:catalyticActivity/up:catalyzedReaction ?reaction .\n    SERVICE <https://sparql.rhea-db.org/sparql> {\n      ?reaction rdfs:subClassOf rh:Reaction .\n      ?reaction rh:side ?reactionSide .\n      ?reactionSide rh:contains ?participant .\n      ?participant rh:compound ?compound .\n      ?compound rh:chebi ?chebi .\n      ?chebi rdfs:subClassOf* CHEBI:64583 .  # Assuming CHEBI:64583 represents sphingomyelin as a representative sphingolipid\n    }\n  }\n\n  # Find corresponding ChEMBL molecules that target these enzymes\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/idsm> {\n    ?activity a cco:Activity ;\n      cco:hasMolecule ?chemblMolecule ;\n      cco:hasTarget ?target .\n    ?target cco:hasTargetComponent/cco:targetCmptXref ?protein .\n    ?chemblMolecule rdfs:label ?chemblMoleculeLabel .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "aae07881-bdae-4cd0-bf4c-30e26f8a603f",
    "evaluation_timestamp": "2025-05-02T06:40:42.122156",
    "question_understanding_prompt_tokens": 253,
    "question_understanding_completion_tokens": 33,
    "question_understanding_total_tokens": 286,
    "sparql_query_construction_prompt_tokens": 8178,
    "sparql_query_construction_completion_tokens": 542,
    "sparql_query_construction_total_tokens": 8720,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Line 25, column 33: Unresolved prefixed name: rh:Reaction",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "syntactically not correct"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/49",
    "natural_language_question": "Retrieve the UniProtKB proteins, their catalyzed Rhea reactions, their encoding genes (Ensembl) and the anatomic entities where the genes are expressed (UBERON anatomic entites from Bgee expression data resource).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX genex: <http://purl.org/genex#>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?protein ?ensemblGene ?reaction ?anatomicEntityLabel ?anatomicEntity\nWHERE {\n  # federated query to Rhea enadpoint\n  {\n    SELECT DISTINCT ?reaction WHERE {\n      SERVICE <https://sparql.rhea-db.org/sparql> {\n        ?reaction rdfs:subClassOf rh:Reaction ;\n          rh:equation ?reactionEquation ;\n          rh:side ?reactionSide .\n        ?reactionSide rh:contains ?participant .\n        ?participant rh:compound ?compound .\n        # compound constraint (CHEBI:16113 == cholesterol)\n        ?compound rh:chebi CHEBI:16113 .\n      }\n    }\n  }\n  # taxonomy constraint (taxon:9606 == Homo sapiens)\n  ?protein up:organism taxon:9606 ;\n    up:annotation ?a ;\n    rdfs:seeAlso / up:transcribedFrom ?ensemblGene .\n  ?a a up:Catalytic_Activity_Annotation ;\n    up:catalyticActivity ?ca .\n  ?ca up:catalyzedReaction ?reaction .\n  # federated query to Bgee (expression data)\n  BIND(IRI(REPLACE(STR(?ensemblGene), \"\\\\.[0-9]+$\", \"\")) AS ?ensemblGeneNoVersion)\n  SERVICE <https://www.bgee.org/sparql/> {\n    ?gene lscr:xrefEnsemblGene ?ensemblGeneNoVersion ;\n      genex:isExpressedIn ?anatomicEntity .\n    ?anatomicEntity rdfs:label ?anatomicEntityLabel .\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql",
      "https://www.bgee.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/49_tissues_where_genes_metabolizing_cholestrol_are_expressed.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX genex: <http://purl.org/genex#>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX obo: <http://purl.obolibrary.org/obo/>\nPREFIX orth: <http://purl.org/net/orth#>\n\nSELECT\n  ?protein\n  ?rhea\n  ?ensemblGene\n  ?anat\nWHERE\n{\n  # Select reviewed UniProtKB proteins\n  ?protein up:reviewed true .\n  \n  # Find catalyzed Rhea reactions\n  ?protein up:annotation ?ann .\n  ?ann up:catalyticActivity ?ca .\n  ?ca up:catalyzedReaction ?rhea .\n  \n  # Find Ensembl genes\n  ?protein rdfs:seeAlso ?ensemblTranscript .\n  ?ensemblTranscript up:database <http://purl.uniprot.org/database/Ensembl> .\n  ?ensemblTranscript up:transcribedFrom ?ensemblGene .\n  \n  # Find anatomic entities where the genes are expressed using Bgee\n  SERVICE <https://www.bgee.org/sparql> {\n    ?seq genex:isExpressedIn ?anat .\n    ?seq lscr:xrefUniprot ?protein . # Link to UniProtKB protein\n    ?seq orth:gene ?ensemblGene . # Link to Ensembl gene\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "d6a6ca28-6cdb-4e12-91a7-b254e041771c",
    "evaluation_timestamp": "2025-05-02T06:40:58.418957",
    "question_understanding_prompt_tokens": 278,
    "question_understanding_completion_tokens": 76,
    "question_understanding_total_tokens": 354,
    "sparql_query_construction_prompt_tokens": 6783,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 6783,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "Expecting ',' delimiter: line 118144 column 4 (char 3235840)"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/53",
    "natural_language_question": "Find mouse homologs in OMABrowser of human enzymes that catalyze reactions involving sterols (CHEBI:15889). Federating with Rhea and OMABrowser.",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX orth: <http://purl.org/net/orth#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  DISTINCT\n    ?chebi\n    ?reaction\n    ?humanProtein\n    ?mouseProtein\n    ?cluster \nWHERE {\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf rh:Reaction .\n    ?reaction rh:side/rh:contains/rh:compound ?compound .\n    ?compound rh:chebi ?chebi .\n    ?chebi rdfs:subClassOf* CHEBI:15889\n  }\n\n  ?humanProtein up:organism taxon:9606 .\n  ?humanProtein up:annotation ?a .\n  ?a a up:Catalytic_Activity_Annotation .\n  ?a up:catalyticActivity ?ca .\n  ?ca up:catalyzedReaction ?reaction .\n\n  SERVICE  <https://sparql.omabrowser.org/sparql> {\n    ?cluster a orth:ParalogsCluster .\n    ?cluster orth:hasHomologousMember ?node1 , ?node2 .\n    ?node1 orth:hasHomologousMember* ?orthoProtein1 .\n    ?node2 orth:hasHomologousMember* ?orthoProtein2 .\n    ?orthoProtein1 lscr:xrefUniprot ?mouseProtein .\n    ?orthoProtein2 lscr:xrefUniprot ?humanProtein .\n    # inTaxon mouse\n    ?orthoProtein1 orth:organism/<http://purl.obolibrary.org/obo/RO_0002162> taxon:10090 . \n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql",
      "https://sparql.omabrowser.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/53_mouse_homologs_of_sterol_enzymes_via_omabrowser.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?humanProtein ?mouseHomolog ?mouseProteinName\nWHERE {\n  # Find human enzymes that catalyze reactions involving sterols\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf rh:Reaction .\n    ?reaction rh:side/rh:contains/rh:compound/rh:chebi CHEBI:15889 .\n  }\n  ?ca up:catalyzedReaction ?reaction .\n  ?humanProtein up:annotation/up:catalyticActivity ?ca .\n  ?humanProtein up:organism taxon:9606 .\n\n  # Find mouse homologs of the human enzymes using OMA Browser\n  SERVICE <http://sparql.omabrowser.org/sparql> {\n    ?homology a <http://purl.org/net/orth#Homology> .\n    ?homology <http://purl.org/net/orth#hasSource> ?humanProtein .\n    ?homology <http://purl.org/net/orth#hasTarget> ?mouseHomolog .\n    ?mouseHomolog <http://www.w3.org/2000/01/rdf-schema#label> ?mouseProteinName .\n  }\n  \n  # Filter for mouse proteins\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?mouseHomolog up:organism taxon:10090 . # Mouse NCBI Taxonomy ID\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "98e88acc-9ffd-475a-8165-0e91f3c07774",
    "evaluation_timestamp": "2025-05-02T06:42:18.121664",
    "question_understanding_prompt_tokens": 275,
    "question_understanding_completion_tokens": 60,
    "question_understanding_total_tokens": 335,
    "sparql_query_construction_prompt_tokens": 7811,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 7811,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/52",
    "natural_language_question": "Retrieve drugs that target human enzymes involved in sterol metabolism (federated query with Rhea and ChEMBL via IDSM/Elixir czech republic).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX cco: <http://rdf.ebi.ac.uk/terms/chembl#>\nPREFIX chebihash: <http://purl.obolibrary.org/obo/chebi#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n        DISTINCT\n            ?protein\n            ?proteinFullName\n            ?activityType\n            ?standardActivityValue\n            ?standardActivityUnit\n            ?chemblMolecule\n            ?chemlbMoleculePrefLabel\nWHERE\n  {\n  # ChEBI: retrieve members of the ChEBI class ChEBI:15889 (sterol)\n  # Rhea: retrieve the reactions involving these ChEBI as participants\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf  rh:Reaction ;\n\t      rh:status        rh:Approved ;\n\t      rh:side          ?reactionSide .\n    ?reactionSide\n\t      rh:contains      ?participant .\n    ?participant rh:compound  ?compound\n    {\n      ?compound  rh:chebi  ?chebi .\n      ?chebi (rdfs:subClassOf)+ CHEBI:15889\n    } UNION {\n      ?compound  rh:chebi           ?chebi .\n      ?chebi2   rdfs:subClassOf     ?chebiRestriction .\n      ?chebiRestriction\n\t\ta           owl:Restriction ;\n\t\towl:onProperty      chebihash:has_major_microspecies_at_pH_7_3 ;\n\t\towl:someValuesFrom  ?chebi .\n      ?chebi2 (rdfs:subClassOf)+ CHEBI:15889\n    }\n  }\n  # UniProt: retrieve the human (taxid:9606) enzymes catalyzing these Rhea reactions\n  ?ca       up:catalyzedReaction  ?reaction .\n  ?a        up:catalyticActivity  ?ca .\n  ?protein  up:annotation         ?a ;\n\t    up:organism           taxon:9606 ;\n\t    up:recommendedName    ?proteinRecName .\n  ?proteinRecName\n\t    up:fullName           ?proteinFullName .\n  # Find drugs in wikidata that interact with the UniProt Proteins\n  # ChEMBL: retrieve the corresponding targets and with drugs in clinical phase 4\n  # Via https://idsm.elixir-czech.cz/sparql/\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/idsm> {\n    ?activity a cco:Activity ;\n      cco:hasMolecule ?chemblMolecule ;\n      cco:hasAssay ?assay ;\n      cco:standardType ?activityType ;\n      cco:standardValue ?standardActivityValue ;\n      cco:standardUnits ?standardActivityUnit .\n    ?chemblMolecule cco:highestDevelopmentPhase ?highestDevelopmentPhase ;\n      rdfs:label ?chemblMoleculeLabel ;\n      skos:prefLabel ?chemlbMoleculePrefLabel .\n    FILTER (?highestDevelopmentPhase > 3)\n    ?assay cco:hasTarget ?target .\n    ?target cco:hasTargetComponent/cco:targetCmptXref ?protein .\n    ?protein a cco:UniprotRef .\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql",
      "https://idsm.elixir-czech.cz/sparql/endpoint/idsm"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/52_drugs_targeting_sterol_metabolism.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?drug ?enzyme ?rhea\nWHERE {\n  # Find human enzymes\n  ?enzyme up:organism taxon:9606 .\n  ?enzyme up:annotation ?annotation .\n  ?annotation a up:Catalytic_Activity_Annotation .\n  ?annotation up:catalyticActivity ?catalyticActivity .\n  ?catalyticActivity up:catalyzedReaction ?rhea .\n\n  # Find reactions involving sterols using Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rdfs:subClassOf rh:Reaction .\n    ?rhea rh:side/rh:contains/rh:compound/rh:chebi ?sterol .\n    ?sterol rdfs:subClassOf* CHEBI:15889 . # sterol\n  }\n  \n  # Find drugs that target the enzymes (linking to ChEMBL via UniProt)\n  ?enzyme rdfs:seeAlso ?chemblEntry .\n  ?chemblEntry up:database <http://purl.uniprot.org/database/ChEMBL> .\n  ?chemblEntry rdfs:label ?drug . # Assuming rdfs:label gives the drug name\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "112b7c9f-4e46-4d6e-8f2c-c5c281c80b45",
    "evaluation_timestamp": "2025-05-02T06:42:33.535314",
    "question_understanding_prompt_tokens": 269,
    "question_understanding_completion_tokens": 28,
    "question_understanding_total_tokens": 297,
    "sparql_query_construction_prompt_tokens": 6669,
    "sparql_query_construction_completion_tokens": 383,
    "sparql_query_construction_total_tokens": 7052,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/54",
    "natural_language_question": "Proteins with binding sites for ligands similar to heme",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT \n  ?protein\n  ?mnemonic\n  ?proteinName\n  ?ligandSimilarityScore\n  ?ligand\nWHERE {\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n    ?ssc sachem:compound ?ligand; \n      sachem:score ?ligandSimilarityScore ;\n      sachem:similaritySearch ?sss .\n        # Smiles of Heme\n    ?sss    sachem:query \"CC1=C(CCC([O-])=O)C2=[N+]3C1=Cc1c(C)c(C=C)c4C=C5C(C)=C(C=C)C6=[N+]5[Fe-]3(n14)n1c(=C6)c(C)c(CCC([O-])=O)c1=C2\";\n      sachem:cutoff \"8e-1\"^^xsd:double ;\n      sachem:aromaticityMode sachem:aromaticityDetect ;\n      sachem:similarityRadius 1 ;\n      sachem:tautomerMode sachem:ignoreTautomers .\n  }\n  ?protein up:mnemonic ?mnemonic ;\n    up:recommendedName/up:fullName ?proteinName ;\n    up:annotation ?annotation .\n  ?annotation a up:Binding_Site_Annotation ;\n      up:ligand/rdfs:subClassOf ?ligand .\n}\nORDER BY DESC(?ligandSimilarityScore)",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/54_binding_sites_for_ligands_similar_to_heme_sachem.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?protein ?ligandName\nWHERE {\n  # Find proteins with binding site annotations\n  ?protein up:annotation ?annotation .\n  ?annotation a up:Binding_Site_Annotation .\n  ?annotation up:ligand ?ligand .\n  ?ligand rdfs:label ?ligandName .\n\n  # Filter for ligands that are similar to Heme (CHEBI:24894)\n  # This requires a SERVICE call to an endpoint that can perform chemical similarity searches.\n  # Since the Elixir Czech endpoint is not available, we will use a simpler approach\n  # and look for ligands that are subclasses of \"heme\" in ChEBI.\n  ?ligand rdfs:subClassOf* CHEBI:15409 . #Heme is a subclass of porphyrin macrocycle\n\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "21dfc54e-6f32-4bc7-8c6c-cb26f6d970dd",
    "evaluation_timestamp": "2025-05-02T06:42:52.786365",
    "question_understanding_prompt_tokens": 248,
    "question_understanding_completion_tokens": 33,
    "question_understanding_total_tokens": 281,
    "sparql_query_construction_prompt_tokens": 5591,
    "sparql_query_construction_completion_tokens": 265,
    "sparql_query_construction_total_tokens": 5856,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/43",
    "natural_language_question": "Connect patents cited in UniProtKB with those in the patent database at EPO via publication number, whose grant date is more than twenty years in the past.",
    "ground_truth_query": "PREFIX patent: <http://data.epo.org/linked-data/def/patent/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?grantDate ?patent ?application ?applicationNo\nWHERE\n{\n    ?citation a up:Patent_Citation ;\n  skos:exactMatch ?patent .\n  BIND(SUBSTR(STR(?patent), 35) AS ?applicationNo)\n  BIND(SUBSTR(STR(?patent), 33, 2) AS ?countryCode)\n  SERVICE <https://data.epo.org/linked-data/query>{\n    ?publication patent:publicationNumber ?applicationNo ;\n      patent:application ?application .\n    ?application patent:grantDate ?grantDate .\n  }\n  BIND((year(now()) - 20) AS ?thisYearMinusTwenty)\n  BIND(year(?grantDate) AS ?grantYear)\n  FILTER(?grantYear < ?thisYearMinusTwenty)\n} ORDER BY ?grantYear",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://data.epo.org/linked-data/query"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/43_patents_used_in_uniprot_granted_twenty_years_in_the_past.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX patent: <http://data.epo.org/linked-data/def/patent/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT ?citation ?patent ?application ?applicationNo ?grantDate\nWHERE\n{\n  # Find patent citations in UniProtKB\n  ?citation a up:Patent_Citation ;\n    skos:exactMatch ?patent .\n  FILTER(CONTAINS(STR(?patent), 'EP'))\n  BIND(SUBSTR(STR(?patent), 35) AS ?applicationNo)\n\n  # Query the EPO database for patent information\n  SERVICE <https://data.epo.org/linked-data/query>{\n    ?application patent:publicationNumber ?applicationNo ;\n                 patent:grantDate ?grantDate .\n    \n    # Filter for patents granted more than 20 years ago\n    FILTER (?grantDate < (NOW() - xsd:duration(\"P20Y\")))\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "df93afd8-2d56-4bd9-be20-89515a0f6555",
    "evaluation_timestamp": "2025-05-02T06:43:11.629271",
    "question_understanding_prompt_tokens": 271,
    "question_understanding_completion_tokens": 47,
    "question_understanding_total_tokens": 318,
    "sparql_query_construction_prompt_tokens": 4443,
    "sparql_query_construction_completion_tokens": 284,
    "sparql_query_construction_total_tokens": 4727,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/45",
    "natural_language_question": "Retrieve drugs that target human enzymes involved in sterol metabolism (federated query with WikiData and Rhea).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX chebihash: <http://purl.obolibrary.org/obo/chebi#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n\nSELECT DISTINCT ?protein ?proteinFullName ?wikiChemical ?wikiChemicalLabel ?medicalConditionTreatedLabel\nWHERE {\n  # ChEBI: retrieve members of the ChEBI class ChEBI:15889 (sterol)\n  # Rhea: retrieve the reactions involving these ChEBI as participants\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf rh:Reaction ;\n      rh:status rh:Approved ;\n      rh:side ?reactionSide .\n    ?reactionSide\n      rh:contains ?participant .\n    ?participant rh:compound ?compound\n    {\n      ?compound rh:chebi ?chebi .\n      ?chebi (rdfs:subClassOf)+ CHEBI:15889\n    } UNION {\n      ?compound rh:chebi ?chebi .\n      ?chebi2 rdfs:subClassOf ?chebiRestriction .\n      ?chebiRestriction\n\t\ta owl:Restriction ;\n\t\towl:onProperty chebihash:has_major_microspecies_at_pH_7_3 ;\n\t\towl:someValuesFrom ?chebi .\n      ?chebi2 (rdfs:subClassOf)+ CHEBI:15889\n    }\n  }\n  # UniProt: retrieve the human (taxid:9606) enzymes catalyzing these Rhea reactions\n  ?ca up:catalyzedReaction  ?reaction .\n  ?a up:catalyticActivity  ?ca .\n  ?proteinIRI  up:annotation ?a ;\n    up:organism taxon:9606 ;\n    up:recommendedName ?proteinRecName .\n  ?proteinRecName up:fullName ?proteinFullName .\n  # Find drugs in wikidata that interact with the UniProt Proteins\n  BIND (SUBSTR(STR(?proteinIRI), STRLEN(STR(uniprotkb:))+1) AS ?protein)\n  SERVICE <https://query.wikidata.org/sparql> {\n    ?wp wdt:P352  ?protein .\n    ?wikiChemical wdt:P129 ?wp . # Physically interacts with\n    ?wikiChemical rdfs:label ?wikiChemicalLabel .\n    ?wikiChemical wdt:P2175 ?wmc . # Medical conndition treated\n    ?wmc rdfs:label ?medicalConditionTreatedLabel .\n    FILTER(lang(?medicalConditionTreatedLabel) = 'en')\n    FILTER(lang(?wikiChemicalLabel) = 'en')\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://query.wikidata.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/45_drugs_targeting_human_sterol_metabolism_enzymes.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n\nSELECT DISTINCT ?drug ?enzyme ?reaction\nWHERE {\n  # Find human enzymes that catalyze reactions involving sterols\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf rh:Reaction .\n    ?reaction rh:side/rh:contains/rh:compound ?compound .\n    ?compound rh:chebi ?chebi .\n    ?chebi rdfs:subClassOf* CHEBI:15889 . # sterol\n  }\n  \n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?enzyme up:organism taxon:9606 . # human\n    ?enzyme up:annotation ?a .\n    ?a a up:Catalytic_Activity_Annotation .\n    ?a up:catalyticActivity ?ca .\n    ?ca up:catalyzedReaction ?reaction .\n  }\n  \n  # Find drugs that target these enzymes using WikiData\n  SERVICE <https://query.wikidata.org/sparql> {\n    ?drug wdt:P2175 ?enzyme . # P2175 is the \"pharmacological target\" property in WikiData\n    FILTER(REGEX(STR(?enzyme), \"uniprot.org\")) # Filter to ensure the target is a UniProt protein\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "a9b5d23c-c5a7-4b73-8be6-b1cb58e504aa",
    "evaluation_timestamp": "2025-05-02T06:43:33.749283",
    "question_understanding_prompt_tokens": 259,
    "question_understanding_completion_tokens": 28,
    "question_understanding_total_tokens": 287,
    "sparql_query_construction_prompt_tokens": 5957,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 5957,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/42",
    "natural_language_question": "Connect patents cited in UniProtKB with those in the patent database at EPO via publication number.",
    "ground_truth_query": "PREFIX patent: <http://data.epo.org/linked-data/def/patent/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?citation ?patent ?application ?applicationNo\nWHERE\n{\n  ?citation a up:Patent_Citation ;\n    skos:exactMatch ?patent .\n  FILTER(CONTAINS(STR(?patent), 'EP'))\n  BIND(SUBSTR(STR(?patent), 35) AS ?applicationNo)\n  SERVICE <https://data.epo.org/linked-data/query>{\n    ?application patent:publicationNumber ?applicationNo\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://data.epo.org/linked-data/query"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/42_connect_patents_to_epo.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX patent: <http://data.epo.org/linked-data/def/patent/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?patent ?application ?applicationNo\nWHERE\n{\n  # Find patent citations in UniProtKB\n  ?citation a up:Patent_Citation ;\n    skos:exactMatch ?patent .\n  \n  # Extract the application number from the patent URI\n  BIND(SUBSTR(STR(?patent), 35) AS ?applicationNo)\n  \n  # Query the EPO database for matching patents\n  SERVICE <https://data.epo.org/linked-data/query>{\n    ?publication patent:publicationNumber ?applicationNo ;\n      patent:application ?application .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "d98698d9-fb10-487c-ba03-2545e37e5148",
    "evaluation_timestamp": "2025-05-02T06:43:43.477066",
    "question_understanding_prompt_tokens": 257,
    "question_understanding_completion_tokens": 35,
    "question_understanding_total_tokens": 292,
    "sparql_query_construction_prompt_tokens": 4390,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 4390,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/67_draft_human_metabolome",
    "natural_language_question": "Generate a draft human metabolome",
    "ground_truth_query": "PREFIX chebislash: <http://purl.obolibrary.org/obo/chebi/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n?uniprot ?mnemonic ?rhea ?chebi ?smiles ?inchiKey\nWHERE\n{\n  ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea ;\n        up:organism taxon:9606 ;\n        up:mnemonic ?mnemonic .\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n\t?rhea rh:side/rh:contains/rh:compound ?compound .\n    ?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?chebi .\n   }\n   ?chebi chebislash:smiles ?smiles ;\n          chebislash:inchikey ?inchiKey .\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/67_draft_human_metabolome.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\n# Draft query to retrieve information related to the human metabolome.\n# This query federates with UniProt to retrieve human proteins and Rhea to retrieve reactions.\n# It then attempts to link these reactions to metabolites (SwissLipids or ChEBI via Rhea).\n\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?protein ?reaction ?chebi ?chebiName\nWHERE {\n  # Retrieve human proteins from UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein up:organism taxon:9606 .  # Human\n    ?protein up:annotation ?annotation .\n    ?annotation up:catalyticActivity ?catalyticActivity .\n    ?catalyticActivity up:catalyzedReaction ?reaction .\n  }\n\n  # Retrieve reactions and associated ChEBI identifiers from Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql/> {\n    ?reaction rdfs:subClassOf rh:Reaction .\n    ?reaction rh:side ?reactionSide .\n    ?reactionSide rh:contains ?participant .\n    ?participant rh:compound ?compound .\n    ?compound rh:chebi ?chebi .\n    ?chebi rdfs:label ?chebiName .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "51c874c6-1171-4b82-983b-8312162398a4",
    "evaluation_timestamp": "2025-05-02T06:44:03.753898",
    "question_understanding_prompt_tokens": 245,
    "question_understanding_completion_tokens": 20,
    "question_understanding_total_tokens": 265,
    "sparql_query_construction_prompt_tokens": 5109,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 5109,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/36",
    "natural_language_question": "Find the orthologous proteins for UniProtKB entry P05067 using the <a href=\"http://www.orthod.org\">OrthoDB database</a>",
    "ground_truth_query": "PREFIX orthodb: <http://purl.orthodb.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  ?protein\n  ?orthoGroup\n  ?scientificName\n  ?functionComment\n  ?prefferedGeneName\n  ((STRLEN(?value) - ?medianLength) as ?deviationFromMedianLength)\nWHERE\n{\n  uniprotkb:P05067 a up:Protein ;\n        up:organism/up:scientificName ?scientificName ;\n        rdfs:seeAlso ?orthoGroup ;\n        up:encodedBy/skos:prefLabel ?prefferedGeneName ;\n          up:sequence/rdf:value ?value .\n  OPTIONAL {\n    ?protein up:annotation ?functionAnnotation .\n    ?functionAnnotation a up:Function_Annotation ;\n      rdfs:comment ?functionComment .\n  }\n  SERVICE <https://sparql.orthodb.org/sparql>{\n    ?orthoGroup orthodb:ogMedianProteinLength ?medianLength .\n    ?orthoGroup orthodb:hasMember ?xref .\n    ?xref orthodb:xref/orthodb:xrefResource uniprotkb:P05067 .\n  }\n}\nLIMIT 985915",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.orthodb.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/36_orthologous_proteins_via_orthodb.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\n# Find orthologous proteins for UniProtKB entry P05067\n\nPREFIX orthodb: <http://purl.orthodb.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\n\nSELECT DISTINCT ?protein ?orthologousProtein\nWHERE {\n  # Bind the UniProtKB entry of interest\n  BIND (uniprotkb:P05067 AS ?protein)\n\n  # Access UniProt to get the gene associated with the protein\n  SERVICE <https://sparql.uniprot.org/sparql/> {\n    ?protein a up:Protein ;\n             up:encodedBy ?gene .\n  }\n\n  # Assuming OrthoDB contains information about orthologous genes\n  # and can be linked to UniProt via gene names or identifiers.\n  # This part might require more specific knowledge about the OrthoDB schema.\n  SERVICE <https://sparql.uniprot.org/sparql/> {\n    ?orthologousProtein a up:Protein ;\n                       up:encodedBy ?orthologousGene .\n    FILTER (?gene != ?orthologousGene) # Ensure it's not the same gene\n  }\n  \n  # Assuming a hypothetical link between genes in UniProt and OrthoDB\n  # This is a placeholder and needs to be replaced with the actual predicate\n  # that links to OrthoDB.\n  #?gene orthodb:orthologousTo ?orthologousGene .\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "68325b8e-b104-48d9-8d02-dbafdab19790",
    "evaluation_timestamp": "2025-05-02T06:44:18.745057",
    "question_understanding_prompt_tokens": 275,
    "question_understanding_completion_tokens": 42,
    "question_understanding_total_tokens": 317,
    "sparql_query_construction_prompt_tokens": 4596,
    "sparql_query_construction_completion_tokens": 352,
    "sparql_query_construction_total_tokens": 4948,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/60",
    "natural_language_question": "Find human proteins that catalyze reactions where substrates or product have a <a href=\"https://www.ebi.ac.uk/chebi/searchId.do?chebiId=CHEBI:35516\">Cholestane skeleton</a>",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  DISTINCT\n    ?protein\n    ?disease\n    ?rhea\n    ?chebi\n    ?omim\nWHERE {\n    # Find complete ChEBIs with a Cholestane skeleton, via the Czech Elixir node IDSM Sachem chemical substructure search.\n    SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n      ?chebi sachem:substructureSearch [\n        sachem:query\n\"[C@]12(CCC3CCCC[C@]3(C)[C@@]1([H])CC[C@]1(C)[C@@]([H])([C@@](C)([H])CCCC(C)C)CC[C@@]21[H])[H]\"\n].\n   }\n   # Use the fact that UniProt catalytic activities are annotated using Rhea \n   # Mapping the found ChEBIs to Rhea reactions\n   SERVICE <https://sparql.rhea-db.org/sparql>{\n     ?rhea rh:side/rh:contains/rh:compound/rdfs:subClassOf ?chebi .\n   }\n   # Match the found Rhea reactions with human UniProtKB proteins\n   ?protein up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n   ?protein up:organism taxon:9606 .\n   # Find only those human entries that have an annotated related disease, and optionaly map these to OMIM\n   ?protein up:annotation/up:disease ?disease .\n   OPTIONAL {\n     ?disease rdfs:seeAlso ?omim .\n     ?omim up:database <http://purl.uniprot.org/database/MIM>\n   }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/60_enzymes_working_on_substrate_with_Cholestene_backbone.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?protein ?disease ?rhea ?chebi ?omim\nWHERE {\n  # Find complete ChEBIs with a Cholestane skeleton, via the Czech Elixir node IDSM Sachem chemical substructure search.\n  #SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n  #  ?chebi sachem:substructureSearch [\n  #    sachem:query \"[C@]12(CCC3CCCC[C@]3(C)[C@@]1([H])CC[C@]1(C)[C@@]([H])([C@@](C)([H])CCCC(C)C)CC[C@@]21[H])[H]\"\n  #  ].\n  #}\n  # Use the fact that UniProt catalytic activities are annotated using Rhea\n  # Mapping the found ChEBIs to Rhea reactions\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n    ?compound rh:chebi ?chebi .\n    ?chebi rdfs:subClassOf* CHEBI:35516 . # Cholestane skeleton\n  }\n  # Match the found Rhea reactions with human UniProtKB proteins\n  ?protein up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  ?protein up:organism taxon:9606 .\n  # Find only those human entries that have an annotated related disease, and optionaly map these to OMIM\n  OPTIONAL {\n    ?protein up:annotation/up:disease ?disease .\n    OPTIONAL {\n      ?disease rdfs:seeAlso ?omim .\n      ?omim up:database <http://purl.uniprot.org/database/MIM>\n    }\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "100dc1d7-7d77-4c7e-af10-0c047fcfbb69",
    "evaluation_timestamp": "2025-05-02T06:44:40.927695",
    "question_understanding_prompt_tokens": 296,
    "question_understanding_completion_tokens": 38,
    "question_understanding_total_tokens": 334,
    "sparql_query_construction_prompt_tokens": 8931,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 8931,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/70_enzymes_interacting_with_molecules_similar_to_dopamine",
    "natural_language_question": "Look for enzymes catalyzing reactions with molecules similar to dopamine.",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  ?protein\n  ?rhea\n  ?chebi\nWHERE {\n  # Use the smiles of dopamine CHEBI:18243\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi>{\n    ?chebi sachem:similarCompoundSearch [\n      sachem:query \"NCCc1ccc(O)c(O)c1\" ] .\n  }\n  GRAPH<https://sparql.rhea-db.org/rhea>{\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n    ?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?chebi .\n  }\n  ?protein up:reviewed true ;\n    up:annotation ?caa .\n  ?caa up:catalyticActivity/up:catalyzedReaction ?rhea .\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/70_enzymes_interacting_with_molecules_similar_to_dopamine.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?protein ?rhea ?chebi\nWHERE {\n  # Find molecules similar to dopamine using a chemical similarity search in ChEBI.\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi>{\n    ?chebi sachem:similarCompoundSearch [\n      sachem:query \"NCCc1ccc(O)c(O)c1\" #SMILES string for dopamine\n    ] .\n  }\n  \n  # Map the similar molecules to reactions in Rhea.\n  SERVICE <https://sparql.rhea-db.org/sparql>{\n    GRAPH <https://sparql.rhea-db.org/rhea>{\n      ?rhea rh:side/rh:contains/rh:compound ?compound .\n      ?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?chebi .\n    }\n  }\n  \n  # Find enzymes in UniProt that catalyze these reactions.\n  ?protein up:reviewed true ;\n           up:annotation ?caa .\n  ?caa up:catalyticActivity/up:catalyzedReaction ?rhea .\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "543c9740-099c-46cc-869b-187df1f42533",
    "evaluation_timestamp": "2025-05-02T06:44:56.576373",
    "question_understanding_prompt_tokens": 252,
    "question_understanding_completion_tokens": 26,
    "question_understanding_total_tokens": 278,
    "sparql_query_construction_prompt_tokens": 5378,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 5378,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/38",
    "natural_language_question": "For the human entry P05067 (Amyloid-beta precursor protein) find the gene start ends in WikiData",
    "ground_truth_query": "PREFIX p: <http://www.wikidata.org/prop/>\nPREFIX pq: <http://www.wikidata.org/prop/qualifier/>\nPREFIX ps: <http://www.wikidata.org/prop/statement/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n\n\nSELECT \n\t?protein \n\t?begin\n\t?end\n\t?chromosome\n\t?assembly\nWHERE {\n    {\n        BIND(uniprotkb:P05067 AS ?proteinIRI)\n        BIND (SUBSTR(STR(?proteinIRI), STRLEN(STR(uniprotkb:))+1) AS ?protein)\n    }\n    SERVICE <https://query.wikidata.org/sparql> {\n        ?wp wdt:P352 ?protein ;\n            wdt:P702 ?wg . \n        ?wg p:P644   ?wgss .\n        ?wgss ps:P644        ?begin ;\n          pq:P1057/wdt:P1813 ?chromosome ;\n          pq:P659/rdfs:label ?assembly .\n        ?wg p:P645 ?wgse .\n        ?wgse ps:P645        ?end ;\n          pq:P1057/wdt:P1813 ?chromosome ;\n          pq:P659/rdfs:label ?assembly .\n        FILTER(lang(?assembly) = \"en\")\n  } \n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://query.wikidata.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/38_find_gene_region_in_wikidata_for_known_entry.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\n# Find the gene start and end positions for human Amyloid-beta precursor protein (P05067) using UniProt and Wikidata.\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX uniprot: <http://purl.uniprot.org/uniprot/>\n\nSELECT ?geneStart ?geneEnd\nWHERE {\n  # Bind the UniProt entry for Amyloid-beta precursor protein\n  BIND (uniprot:P05067 AS ?protein)\n\n  # Filter for human proteins\n  ?protein a up:Protein .\n  ?protein up:organism <http://purl.uniprot.org/taxonomy/9606> . # Human\n\n  # Get the Ensembl gene identifier from UniProt\n  ?protein rdfs:seeAlso ?ensemblGeneURI .\n  ?ensemblGeneURI up:database <http://purl.uniprot.org/database/Ensembl> .\n\n  # Extract the Ensembl gene identifier from the URI\n  BIND (STRAFTER(STR(?ensemblGeneURI), \"http://purl.uniprot.org/ensembl/\") AS ?ensemblGene)\n\n  # Query Wikidata for the gene start and end positions using the Ensembl gene identifier\n  SERVICE <https://query.wikidata.org/sparql> {\n    OPTIONAL {\n      # Find the Wikidata item corresponding to the Ensembl gene\n      ?gene wdt:P594 ?ensemblGene .  # P594 is the Ensembl gene ID property in Wikidata\n\n      # Get the gene start and end positions from Wikidata\n      OPTIONAL { ?gene wdt:P750 ?geneStart . }  # P750 is the gene start position property\n      OPTIONAL { ?gene wdt:P751 ?geneEnd . }    # P751 is the gene end position property\n    }\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "5d3fe4f7-66e5-4682-8e84-cfb75880ddbf",
    "evaluation_timestamp": "2025-05-02T06:45:08.149688",
    "question_understanding_prompt_tokens": 264,
    "question_understanding_completion_tokens": 53,
    "question_understanding_total_tokens": 317,
    "sparql_query_construction_prompt_tokens": 5016,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 5016,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Line 27, column 13: Unresolved prefixed name: wdt:P594",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "syntactically not correct"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/117_biosodafrontend_glioblastoma_orthologs_rat",
    "natural_language_question": "Which are the proteins associated with glioblastoma and the orthologs expressed in the rat brain?",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX obo: <http://purl.obolibrary.org/obo/>\nPREFIX orth: <http://purl.org/net/orth#>\nPREFIX sio: <http://semanticscience.org/resource/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX genex: <http://purl.org/genex#>\nSELECT DISTINCT ?protein ?orthologous_protein ?gene ?annotation_text WHERE {\n  {\n  \tSELECT ?protein ?annotation_text WHERE {\n      ?protein a up:Protein ;\n          up:organism taxon:9606 ;\n          up:annotation ?annotation .\n      ?annotation rdfs:comment ?annotation_text .\n      ?annotation a up:Disease_Annotation .\n      FILTER CONTAINS (?annotation_text, \"glioblastoma\")\n    }\n  }\n  SERVICE <https://sparql.omabrowser.org/sparql/> {\n    SELECT ?orthologous_protein ?protein ?gene WHERE {\n    ?protein_OMA a orth:Protein .\n    ?orthologous_protein a orth:Protein .\n    ?cluster a orth:OrthologsCluster .\n    ?cluster orth:hasHomologousMember ?node1 .\n    ?cluster\n    orth:hasHomologousMember ?node2 .\n    ?node2 orth:hasHomologousMember* ?protein_OMA .\n    ?node1 orth:hasHomologousMember* ?orthologous_protein .\n    ?orthologous_protein orth:organism/obo:RO_0002162 taxon:10116 . # rattus norvegicus\n    ?orthologous_protein sio:SIO_010079 ?gene .\n    ?protein_OMA lscr:xrefUniprot ?protein .\n    FILTER(?node1 != ?node2)\n\t\t}\n\t}\n  SERVICE <https://www.bgee.org/sparql/> {\n    ?gene genex:isExpressedIn ?a .\n    ?a rdfs:label \"brain\" .\n    ?gene orth:organism ?s . \n    ?s obo:RO_0002162 taxon:10116.\n\t}\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql",
    "federates_with": [
      "https://sparql.omabrowser.org/sparql/",
      "https://www.bgee.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/117_biosodafrontend_glioblastoma_orthologs_rat.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\n\nSELECT DISTINCT ?protein ?geneName ?ratOrtholog ?ratGeneName\nWHERE {\n  # Find proteins associated with glioblastoma\n  ?protein up:annotation ?diseaseAnnotation .\n  ?diseaseAnnotation up:disease ?disease .\n  ?disease skos:prefLabel \"glioblastoma\" .\n\n  # Get the gene name of the protein\n  ?protein up:encodedBy ?gene .\n  ?gene skos:prefLabel ?geneName .\n\n  # Find orthologs in rat brain\n  SERVICE <https://sparql.uniprot.org/sparql/> {\n    ?ratOrtholog a up:Protein .\n    ?ratOrtholog rdfs:seeAlso ?protein . # Assuming rdfs:seeAlso links orthologs\n    ?ratOrtholog up:organism taxon:10116 . # Rat taxonomy ID\n    ?ratOrtholog up:encodedBy ?ratGene .\n    ?ratGene skos:prefLabel ?ratGeneName .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "feef3a3b-d9ef-4335-9078-fb135c4b015c",
    "evaluation_timestamp": "2025-05-02T06:45:18.603353",
    "question_understanding_prompt_tokens": 259,
    "question_understanding_completion_tokens": 37,
    "question_understanding_total_tokens": 296,
    "sparql_query_construction_prompt_tokens": 5923,
    "sparql_query_construction_completion_tokens": 324,
    "sparql_query_construction_total_tokens": 6247,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/116_biosodafrontend_rabit_mouse_orthologs",
    "natural_language_question": "Rabbit's proteins encoded by genes that are orthologous to Mouse's HBB-Y gene and their cross reference links to Uniprot",
    "ground_truth_query": "PREFIX lscr: <http://purl.org/lscr#>\nPREFIX orth: <http://purl.org/net/orth#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX obo: <http://purl.obolibrary.org/obo/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?PROTEIN_1 ?PROTEIN_2 ?UNIPROT_XREF_1 ?UNIPROT_XREF_2 WHERE {\n\t?taxon_1 up:commonName 'Mouse' .\n\t?taxon_2 up:commonName 'Rabbit' .\n\tSERVICE <https://sparql.omabrowser.org/sparql/> {\n\t\t?cluster a orth:OrthologsCluster .\n\t\t?cluster orth:hasHomologousMember ?node1 .\n\t\t?cluster orth:hasHomologousMember ?node2 .\n\t\t?node2 orth:hasHomologousMember* ?PROTEIN_2 .\n\t\t?node1 orth:hasHomologousMember* ?PROTEIN_1 .\n\t\t?PROTEIN_1 a orth:Protein .\n\t\t?PROTEIN_1 orth:organism/obo:RO_0002162 ?taxon_1 ;\n\t\t\trdfs:label 'HBB-Y' ;\n\t\t\tlscr:xrefUniprot ?UNIPROT_XREF_1 .\n\t\t?PROTEIN_2 a orth:Protein .\n\t\t?PROTEIN_2 orth:organism/obo:RO_0002162 ?taxon_2 .\n\t\t?PROTEIN_2 lscr:xrefUniprot ?UNIPROT_XREF_2 .\n\t\tFILTER ( ?node1 != ?node2 )\n\t}\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql",
    "federates_with": [
      "https://sparql.omabrowser.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/116_biosodafrontend_rabit_mouse_orthologs.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX orthodb: <http://purl.orthodb.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\n\nSELECT DISTINCT ?rabbitProtein ?gene ?uniprotLink\nWHERE {\n  # Find the OrthoDB group for Mouse HBB-Y gene\n  SERVICE <https://sparql.orthodb.org/sparql> {\n    ?mouseGene orthodb:xref ?mouseUniprot .\n    ?mouseUniprot orthodb:xrefResource uniprotkb:P0DP56 . # Assuming P0DP56 is a Uniprot ID for Mouse HBB-Y.  This needs to be verified.\n    ?orthoGroup orthodb:hasMember ?mouseGene .\n  }\n\n  # Find rabbit genes in the same orthologous group\n  SERVICE <https://sparql.orthodb.org/sparql> {\n    ?orthoGroup orthodb:hasMember ?rabbitGene .\n    ?rabbitGene orthodb:xref ?rabbitUniprot .\n  }\n\n  # Find UniProtKB entries for the rabbit genes\n  ?rabbitProtein a up:Protein ;\n                 up:encodedBy ?gene ;\n                 up:organism taxon:9986 .  # Rabbit taxonomy ID\n  ?gene skos:prefLabel ?geneName .\n  \n  # Link to UniProt entry\n  BIND(concat(\"https://www.uniprot.org/uniprotkb/\",STRAFTER(str(?rabbitProtein), \"http://purl.uniprot.org/uniprot/\")) AS ?uniprotLink)\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "657e2a94-dffe-4265-89f6-9faaa7399afb",
    "evaluation_timestamp": "2025-05-02T06:45:30.685915",
    "question_understanding_prompt_tokens": 264,
    "question_understanding_completion_tokens": 49,
    "question_understanding_total_tokens": 313,
    "sparql_query_construction_prompt_tokens": 5221,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 5221,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/29",
    "natural_language_question": "Use <a href=\"http://allie.dbcls.jp/\">ALLIE</a> a service for Abbreviation / Long Form in Japanese and English to search in UniProt using Japanese.",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?protein ?englishLabelStr\nWHERE {\n    SERVICE <https://data.allie.dbcls.jp/sparql>{\n        ?x rdfs:label \"アミロイド前駆体タンパク質\"@ja ;\n            rdfs:label ?englishLabel .\n        FILTER(lang(?englishLabel) = \"en\")\n    }\n    BIND (STR(?englishLabel) AS ?englishLabelStr)\n    ?protein a up:Protein .\n    {\n        ?protein (up:recommendedName|up:alternativeName) ?structuredName .\n    }\n    UNION\n    {\n        VALUES(?partType){(up:domain) (up:component)}\n            ?protein ?partType ?part .\n        ?part (up:recommendedName|up:alternativeName) ?structuredName .\n    }\n    ?structuredName ?anyKindOfName  ?englishLabelStr .\n    ?anyKindOfName rdfs:subPropertyOf up:structuredNameType .\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://data.allie.dbcls.jp/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/29_search_uniprot_in_japanese_with_allie.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?protein ?fullName ?englishLabel\nWHERE {\n  # Query ALLIE service to get English label from Japanese label\n  SERVICE <https://data.allie.dbcls.jp/sparql> {\n    ?x rdfs:label \"Japanese Label Here\"@ja ; # Replace \"Japanese Label Here\" with the actual Japanese label\n    rdfs:label ?englishLabel .\n    FILTER(lang(?englishLabel) = \"en\")\n  }\n  \n  # Use the English label to search for proteins in UniProt\n  ?protein a up:Protein ;\n           up:recommendedName ?recommendedName .\n  ?recommendedName up:fullName ?fullName .\n  FILTER CONTAINS(?fullName, ?englishLabel) # Filter proteins whose full name contains the English label\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "e59700cc-0b32-4e70-8593-faf3d8c64c3e",
    "evaluation_timestamp": "2025-05-02T06:47:43.632174",
    "question_understanding_prompt_tokens": 278,
    "question_understanding_completion_tokens": 34,
    "question_understanding_total_tokens": 312,
    "sparql_query_construction_prompt_tokens": 4143,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 4143,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "The read operation timed out"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/94_Select_all_approved_reactions_with_CHEBI_or_one_of_its_descendant_optional_UniProtKB_reviewed_EC",
    "natural_language_question": "Select all approved reactions with CHEBI:17815 (a 1,2-diacyl-sn-glycerol) or one of its descendant. Display links to UniProtKB/Swiss-Prot entries via EC numbers if the link rhea-ec exists.",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX CHEBI:<http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX up:<http://purl.uniprot.org/core/>\n\nSELECT\n  distinct\n    ?reaction\n    ?enzyme\n    (count(distinct ?protein) as ?proteinCount)\nWHERE {\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:side ?reactionSide .\n\n  OPTIONAL {?reaction rh:ec ?enzyme .\n    SERVICE <https://sparql.uniprot.org/sparql> {\n      ?protein up:reviewed true .\n      ?protein up:enzyme ?enzyme.\n    }\n  } .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi .\n  ?chebi rdfs:subClassOf* CHEBI:17815 .\n}\nGROUP BY ?reaction ?enzyme\nORDER BY ?reaction\nLIMIT 985915",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/94_Select_all_approved_reactions_with_CHEBI_or_one_of_its_descendant_optional_UniProtKB_reviewed_EC.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql/\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh:<http://rdf.rhea-db.org/>\n\nSELECT DISTINCT ?reaction ?reactionEquation ?ecNumber ?uniprotEntry\nWHERE {\n  # Select reactions that are subclasses of Rhea reactions\n  ?reaction rdfs:subClassOf rh:Reaction .\n  # Filter for approved reactions\n  ?reaction rh:status rh:Approved .\n  # Get the reaction equation\n  ?reaction rh:equation ?reactionEquation .\n  # Get the reaction side\n  ?reaction rh:side ?reactionSide .\n  # Get the participants in the reaction\n  ?reactionSide rh:contains ?participant .\n  # Get the compound involved in the reaction\n  ?participant rh:compound ?compound .\n  # Get the CHEBI identifier for the compound\n  ?compound rh:chebi ?chebi .\n  # Filter for CHEBI:17815 or its descendants\n  ?chebi rdfs:subClassOf* CHEBI:17815 .\n  \n  # Optional: Link to UniProtKB/Swiss-Prot entries via EC numbers\n  OPTIONAL {\n    ?reaction rh:ec ?ecNumber .\n    SERVICE <https://sparql.uniprot.org/sparql> {\n      ?uniprotEntry <http://purl.uniprot.org/core/annotation> ?ecAnnotation .\n      ?ecAnnotation <http://purl.uniprot.org/core/classifiedWith> ?ecNumber .\n    }\n  }\n}\nORDER BY ?reaction",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "6aec4c3e-6f6e-48fc-9c28-8745260796e5",
    "evaluation_timestamp": "2025-05-02T06:57:55.948558",
    "question_understanding_prompt_tokens": 295,
    "question_understanding_completion_tokens": 71,
    "question_understanding_total_tokens": 366,
    "sparql_query_construction_prompt_tokens": 4852,
    "sparql_query_construction_completion_tokens": 412,
    "sparql_query_construction_total_tokens": 5264,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed. \n\nResponse:\nb'<!DOCTYPE html SYSTEM \"about:legacy-compat\">\\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\" xml:lang=\"en\"><head><title>Rhea</title><meta content=\"text/html; charset=UTF-8\" http-equiv=\"Content-Type\"/><link href=\"/\" rel=\"home\"/><link href=\"/base.css\" type=\"text/css\" rel=\"stylesheet\"/><link type=\"image/vnd.microsoft.icon\" href=\"https://www.rhea-db.org//favicon.ico\" rel=\"shortcut icon\"/><link href=\"/rhea-sparql.css\" type=\"text/css\" rel=\"stylesheet\"/><link href=\"https://creativecommons.org/licenses/by/4.0/\" rel=\"license\"/><script src=\"https://cdn.jsdelivr.net/npm/yasgui-yasqe@2.11.22/dist/yasqe.bundled.min.js\"></script><link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/yasqe/2.2/yasqe.min.css\"/><meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/><meta content=\"no-referrer\" name=\"referrer\"/></head><body typeof=\"schema:WebPage\"><header class=\"row-container\"><div class=\"logos row-container\"><a href=\"https://www.sib.swiss\" class=\"sib_logo\"><img src=\"https://www.rhea-db.org//style/images/sib_logo_short.png\" style=\"height: 50px\" alt=\"SIB logo\"/></a><a href=\"https://www.rhea-db.org\" class=\"rhea_logo\"><img src=\"https://www.rhea-db.org//style/images/rhea_logo.png\" style=\"height: 50px\" alt=\"Rhea logo\"/></a></div><nav class=\"row-container\" id=\"menu\"><a href=\"/\" itemprop=\"url\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" viewBox=\"0 0 24 24\" height=\"24\"><path fill=\"none\" d=\"M0 0h24v24H0z\"/><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/></svg><span itemprop=\"name\">SPARQL</span></a><a href=\"https://www.rhea-db.org//help/download\" itemprop=\"url\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" viewBox=\"0 0 24 24\" height=\"24\"><path fill=\"none\" d=\"M0 0h24v24H0z\"/><path d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-5 5-5-5h3V9h4v4h3z\"/></svg><span itemprop=\"name\">Download</span></a><a href=\"https://www.rhea-db.org//help\" itemprop=\"url\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" viewBox=\"0 0 24 24\" height=\"24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M19.07 4.93l-1.41 1.41C19.1 7.79 20 9.79 20 12c0 4.42-3.58 8-8 8s-8-3.58-8-8c0-4.08 3.05-7.44 7-7.93v2.02C8.16 6.57 6 9.03 6 12c0 3.31 2.69 6 6 6s6-2.69 6-6c0-1.66-.67-3.16-1.76-4.24l-1.41 1.41C15.55 9.9 16 10.9 16 12c0 2.21-1.79 4-4 4s-4-1.79-4-4c0-1.86 1.28-3.41 3-3.86v2.14c-.6.35-1 .98-1 1.72 0 1.1.9 2 2 2s2-.9 2-2c0-.74-.4-1.38-1-1.72V2h-1C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10c0-2.76-1.12-5.26-2.93-7.07z\"/></svg><span itemprop=\"name\">Help</span></a><a href=\"https://www.rhea-db.org//feedback\" itemprop=\"url\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" viewBox=\"0 0 24 24\" height=\"24\"><path fill=\"none\" d=\"M0 0h24v24H0z\"/><path d=\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"/></svg><span itemprop=\"name\">Feedback</span></a></nav></header><a accesskey=\"2\" href=\"#content\" hidden=\"hidden\">Skip Header</a><main class=\"sparql results\" id=\"content\"><section class=\"error\" id=\"page-header\"><h2 class=\"page-title\">Malformed query.</h2><p>Multiple prefix declarations for prefix \\'rh\\'</p></section><div class=\"main-aside\"><div id=\"queryform\"><form method=\"get\" action=\"/sparql/\" focus=\"query\" name=\"sparql-form\" id=\"sparql-form\"><button id=\"addPrefix\" type=\"button\">Add common prefixes</button><textarea accesskey=\"1\" rows=\"10\" cols=\"80\" name=\"query\" id=\"query\"># https://sparql.rhea-db.org/sparql/\\nPREFIX rh: &lt;http://rdf.rhea-db.org/&gt;\\nPREFIX CHEBI: &lt;http://purl.obolibrary.org/obo/CHEBI_&gt;\\nPREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;\\nPREFIX rh:&lt;http://rdf.rhea-db.org/&gt;\\n\\nSELECT DISTINCT ?reaction ?reactionEquation ?ecNumber ?uniprotEntry\\nWHERE {\\n  # Select reactions that are subclasses of Rhea reactions\\n  ?reaction rdfs:subClassOf rh:Reaction .\\n  # Filter for approved reactions\\n  ?reaction rh:status rh:Approved .\\n  # Get the reaction equation\\n  ?reaction rh:equation ?reactionEquation .\\n  # Get the reaction side\\n  ?reaction rh:side ?reactionSide .\\n  # Get the participants in the reaction\\n  ?reactionSide rh:contains ?participant .\\n  # Get the compound involved in the reaction\\n  ?participant rh:compound ?compound .\\n  # Get the CHEBI identifier for the compound\\n  ?compound rh:chebi ?chebi .\\n  # Filter for CHEBI:17815 or its descendants\\n  ?chebi rdfs:subClassOf* CHEBI:17815 .\\n  \\n  # Optional: Link to UniProtKB/Swiss-Prot entries via EC numbers\\n  OPTIONAL {\\n    ?reaction rh:ec ?ecNumber .\\n    SERVICE &lt;https://sparql.uniprot.org/sparql&gt; {\\n      ?uniprotEntry &lt;http://purl.uniprot.org/core/annotation&gt; ?ecAnnotation .\\n      ?ecAnnotation &lt;http://purl.uniprot.org/core/classifiedWith&gt; ?ecNumber .\\n    }\\n  }\\n}\\nORDER BY ?reaction</textarea><input type=\"hidden\" name=\"format\" value=\"html\"><button id=\"sparqlFormSubmitter\" onclick=\"return false;\">Submit Query</button></form></div></div></main><footer><a href=\"https://www.sib.swiss\" target=\"_blank\"><img src=\"https://www.rhea-db.org//style/images/sib_logo_short.png\" alt=\"Supported by SIB\"/></a><div id=\"fund\">\\n\\t\\t\\tThis SPARQL endpoint is hosted by the <a href=\"https://www.sib.swiss/alan-bridge-group/\" target=\"_blank\">SIB Swiss Institute of\\n\\t\\t\\tBioinformatics</a>, and uses <a href=\"https://rdf4j.org/\" target=\"_blank\">Eclipse rdf4j</a> software.<br/>Rhea\\n\\t\\t\\tdevelopment and curation activities at the SIB are supported by the\\n\\t\\t\\tSwiss Federal Government through the State Secretariat for\\n\\t\\t\\tEducation, Research and Innovation (SERI).<br/> The development of\\n\\t\\t\\tthis SPARQL endpoint was supported in part by ELIXIR (Implementation\\n\\t\\t\\tstudy on \"<a href=\"https://www.elixir-europe.org/platforms/data/microbial-metabolism-resource\" target=\"_blank\">A\\n\\t\\t\\t\\tmicrobial metabolism resource for Systems Biology</a>\").\\n\\t\\t</div><div id=\"legal\"><a href=\"https://www.rhea-db.org/help/license-disclaimer\">License\\n\\t\\t\\t\\t& Disclaimer</a> | <a href=\"https://www.sib.swiss/privacy-policy-2018\">Privacy\\n\\t\\t\\t\\tNotice</a></div></footer><script src=\"/sparql.js\" type=\"text/javascript\"> </script></body></html>'"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/11",
    "natural_language_question": "Distribution of reactions according to the first class of the enzyme classification (federated query)",
    "ground_truth_query": "PREFIX ec: <http://purl.uniprot.org/enzyme/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n\n# Query 11\n# Retrieve the count of reactions mapped to each level (main class) of the enzyme classification\n#\n# This query mimics the Filter section of the Rhea website (Browse all reactions)\n# https://www.rhea-db.org/rhea?query=\nSELECT ?ecClass (STR(?ecName) AS ?ecClassName) (COUNT(?rhea) AS ?rheaCount)\nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    VALUES (?ecClass) { (ec:1.-.-.-)(ec:2.-.-.-)(ec:3.-.-.-)(ec:4.-.-.-)(ec:5.-.-.-) (ec:6.-.-.-) (ec:7.-.-.-)}\n    ?ecNumber rdfs:subClassOf ?ecClass .\n    ?ecClass skos:prefLabel ?ecName .\n  }\n  ?rhea rdfs:subClassOf rh:Reaction .\n  ?rhea rh:ec ?ecNumber .\n} GROUP BY ?ecClass ?ecName",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/11.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql/\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX ec: <http://purl.uniprot.org/enzyme/>\n\n# Select the EC class, its name, and the number of reactions associated with it\nSELECT\n  ?ecClass\n  (str(?ecName) as ?ecClassName)\n  (count(?reaction) as ?reactionCount)\nWHERE\n{\n  # Query the UniProt SPARQL endpoint to retrieve EC classes and their names\n  SERVICE <http://sparql.uniprot.org/sparql> {\n    # Define the EC classes to consider (first level of enzyme classification)\n    VALUES (?ecClass) { (ec:1.-.-.-)(ec:2.-.-.-)(ec:3.-.-.-)(ec:4.-.-.-)(ec:5.-.-.-) (ec:6.-.-.-) (ec:7.-.-.-) }\n    \n    # Find subclasses of the EC classes\n    ?ecNumber rdfs:subClassOf ?ecClass .\n    \n    # Get the preferred label (name) of the EC class\n    ?ecClass skos:prefLabel ?ecName .\n  }\n  \n  # Find reactions that are subclasses of Rhea reactions\n  ?reaction rdfs:subClassOf rh:Reaction .\n  \n  # Link reactions to EC numbers\n  ?reaction rh:ec ?ecNumber .\n}\nGROUP BY ?ecClass ?ecName",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "89d5b8ea-6bcb-4968-9252-3507b50a0b33",
    "evaluation_timestamp": "2025-05-02T06:58:06.115611",
    "question_understanding_prompt_tokens": 254,
    "question_understanding_completion_tokens": 24,
    "question_understanding_total_tokens": 278,
    "sparql_query_construction_prompt_tokens": 4627,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 4627,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 1.0,
    "result_eval_precision": 1.0,
    "result_eval_recall": 1.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/109_Distribution_of_reactions_according_to_the_first_level_of_enzyme_classification",
    "natural_language_question": "Distribution of reactions according to the first level of enzyme classification",
    "ground_truth_query": "\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>\nPREFIX skos:<http://www.w3.org/2004/02/skos/core#>\n\nSELECT\n  ?ecClass\n  (str(?ecName) as ?ecClassName)\n  (count(?reaction) as ?reactionCount)\nWHERE\n{\n  SERVICE <http://sparql.uniprot.org/sparql> {\n    VALUES (?ecClass) { (ec:1.-.-.-)(ec:2.-.-.-)(ec:3.-.-.-)(ec:4.-.-.-)(ec:5.-.-.-) (ec:6.-.-.-) (ec:7.-.-.-) }\n    ?ecNumber rdfs:subClassOf ?ecClass .\n    ?ecClass skos:prefLabel ?ecName .\n  }\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:ec ?ecNumber .\n}\nGROUP BY ?ecClass ?ecName\n",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "http://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/109_Distribution_of_reactions_according_to_the_first_level_of_enzyme_classification.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql/\nPREFIX ec: <http://purl.uniprot.org/enzyme/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n\n# Retrieve the count of reactions mapped to each level (main class) of the enzyme classification\n# using a federated query to UniProt for EC class labels\n\nSELECT ?ecClass (STR(?ecName) AS ?ecClassName) (COUNT(?rhea) AS ?rheaCount)\nWHERE {\n  # Query UniProt for EC class names\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    # Define the EC classes of interest (first level)\n    VALUES (?ecClass) { (ec:1.-.-.-)(ec:2.-.-.-)(ec:3.-.-.-)(ec:4.-.-.-)(ec:5.-.-.-) (ec:6.-.-.-) (ec:7.-.-.-)}\n    \n    # Find subclasses of these EC classes\n    ?ecNumber rdfs:subClassOf ?ecClass .\n    \n    # Get the preferred label for the EC class\n    ?ecClass skos:prefLabel ?ecName .\n  }\n  \n  # Query Rhea for reactions associated with EC numbers\n  ?rhea rdfs:subClassOf rh:Reaction .\n  ?rhea rh:ec ?ecNumber .\n}\nGROUP BY ?ecClass ?ecName",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "6cb85f41-ece9-42a0-a5ca-1eae2c44f218",
    "evaluation_timestamp": "2025-05-02T06:58:20.336366",
    "question_understanding_prompt_tokens": 248,
    "question_understanding_completion_tokens": 24,
    "question_understanding_total_tokens": 272,
    "sparql_query_construction_prompt_tokens": 4207,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 4207,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 1.0,
    "result_eval_precision": 1.0,
    "result_eval_recall": 1.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/12",
    "natural_language_question": "Select all Rhea reactions linked to protein sequences (enzymes and transporters) in UniProtKB",
    "ground_truth_query": "PREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n# Query 12\n# Select all Rhea reactions used to annotate enzyme sequences in UniProtKB\n# return the number of UniProtKB entries\n# Federated query using a service to UniProt SPARQL endpoint\n#\n# This query corresponds to the Rhea website query:\n# https://www.rhea-db.org/rhea?query=uniprot:*\n#\nSELECT ?uniprotCount ?rhea ?accession ?equation \nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> { \n  \tSELECT ?rhea (count(?uniprot) as ?uniprotCount) {\n      ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea . \n  \t}\n  \tGROUP BY ?rhea\n  }\n  ?rhea rh:accession ?accession .\n  ?rhea rh:equation ?equation .\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/12.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?rhea ?accession ?equation ?protein\nWHERE {\n  # Query UniProtKB for proteins and their associated Rhea reactions\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein . # Select only proteins\n    ?protein up:annotation ?annotation .\n    ?annotation up:catalyticActivity ?catalyticActivity .\n    ?catalyticActivity up:catalyzedReaction ?rhea .\n  }\n  \n  # Query Rhea DB for reaction details using the Rhea identifier from UniProtKB\n  SERVICE <https://sparql.rhea-db.org/sparql/> {\n    ?rhea rdfs:subClassOf rh:Reaction .\n    ?rhea rh:accession ?accession .\n    ?rhea rh:equation ?equation .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "8253665e-7ade-4b6f-ac64-c8be9ad50d39",
    "evaluation_timestamp": "2025-05-02T06:58:35.696901",
    "question_understanding_prompt_tokens": 258,
    "question_understanding_completion_tokens": 30,
    "question_understanding_total_tokens": 288,
    "sparql_query_construction_prompt_tokens": 4797,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 4797,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/112_Total_number_of_reaction_ec_protein_links",
    "natural_language_question": "Total number of <reaction> <ec> <protein> links",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX up:<http://purl.uniprot.org/core/>\n\nSELECT\n  (count(?reaction) as ?reactionEcProteinLinkCount)\nWHERE {\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:ec ?enzyme\n  SERVICE <http://sparql.uniprot.org/sparql> {\n    ?protein up:reviewed true .\n    ?protein up:enzyme ?enzyme.\n  }\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "http://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/112_Total_number_of_reaction_ec_protein_links.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql/\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT (COUNT(DISTINCT ?reaction) AS ?reactionCount)\n       (COUNT(DISTINCT ?enzyme) AS ?enzymeCount)\n       (COUNT(DISTINCT ?protein) AS ?proteinCount)\nWHERE {\n  # Select reactions that are subclasses of Rhea reactions\n  ?reaction rdfs:subClassOf rh:Reaction .\n  \n  # Reactions are linked to EC numbers\n  ?reaction rh:ec ?enzyme .\n\n  # Use the UniProt SPARQL endpoint to find proteins associated with the EC numbers\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein ;\n             up:reviewed true ;       # Consider only reviewed proteins\n             up:enzyme ?enzyme .      # Link proteins to enzymes (EC numbers)\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "ecae2391-3a23-43be-9508-705d6d352f90",
    "evaluation_timestamp": "2025-05-02T06:58:47.629401",
    "question_understanding_prompt_tokens": 254,
    "question_understanding_completion_tokens": 21,
    "question_understanding_total_tokens": 275,
    "sparql_query_construction_prompt_tokens": 4571,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 4571,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/19_draft_human_metabolome",
    "natural_language_question": "Generate a draft human metabolome",
    "ground_truth_query": "PREFIX chebislash: <http://purl.obolibrary.org/obo/chebi/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  ?uniprot ?mnemonic ?rhea ?chebi ?smiles ?inchiKey\nWHERE\n{\n  ?rhea rh:side/rh:contains/rh:compound ?compound .\n  ?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?chebi .\n  ?chebi chebislash:smiles ?smiles ;\n          chebislash:inchikey ?inchiKey .\n  SERVICE <https://sparql.uniprot.org/sparql> {\n     ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea ;\n                                             up:organism taxon:9606 ;\n                                             up:mnemonic ?mnemonic .\n\n   }\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/19_draft_human_metabolome.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\n# Draft query to retrieve information about the human metabolome, federating with UniProt and Rhea.\n# It retrieves metabolites involved in reactions catalyzed by human proteins.\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX keywords: <http://purl.uniprot.org/keywords/>\nPREFIX ec: <http://purl.uniprot.org/enzyme/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?chebi ?chebiName ?reaction ?ecNumber ?protein\nWHERE {\n  # Subquery to get human proteins and the reactions they catalyze from UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein up:reviewed true .\n    ?protein up:organism taxon:9606 .  # Human\n    OPTIONAL { ?protein up:enzyme ?ecNumber . }\n  }\n  \n  # Subquery to get reactions and metabolites from Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql/> {\n    ?reaction rdfs:subClassOf rh:Reaction .\n    ?reaction rh:status rh:Approved .\n    OPTIONAL { ?reaction rh:ec ?ecNumber . }\n    ?reaction rh:side ?reactionSide .\n    ?reactionSide rh:contains ?participant .\n    ?participant rh:compound ?compound .\n    ?compound rh:chebi ?chebi .\n    ?chebi rdfs:label ?chebiName .\n  }\n  \n  # Link UniProt proteins to Rhea reactions via EC number if available\n  FILTER EXISTS {\n    SERVICE <https://sparql.uniprot.org/sparql> {\n      ?protein up:enzyme ?ecNumber .\n    }\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "97096003-3399-48c3-9bd3-8431da0c1fc8",
    "evaluation_timestamp": "2025-05-02T06:59:15.222709",
    "question_understanding_prompt_tokens": 246,
    "question_understanding_completion_tokens": 22,
    "question_understanding_total_tokens": 268,
    "sparql_query_construction_prompt_tokens": 5521,
    "sparql_query_construction_completion_tokens": 484,
    "sparql_query_construction_total_tokens": 6005,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/20_search_chemical_names_in_japanese",
    "natural_language_question": "Search for Chemical names starting in Japanese, translated to english using allie",
    "ground_truth_query": "PREFIX oboInOwl: <http://www.geneontology.org/formats/oboInOwl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT\n*\nWHERE {\nSERVICE <https://data.allie.dbcls.jp/sparql>{\n        ?x rdfs:label \"1,2,4-トリクロロベンゼン\"@ja ;\n            rdfs:label ?englishLabel .\n        FILTER(lang(?englishLabel) = \"en\")\n    }\n  BIND(STR(?englishLabel) AS ?englishLabelStr)\n  ?chebi rdfs:label|oboInOwl:hasSynonym ?englishLabelStr .\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql/",
    "federates_with": [
      "https://data.allie.dbcls.jp/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/20_search_chemical_names_in_japanese.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\n# Search for Chemical names starting in Japanese, translated to english using allie\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?compound ?englishLabelStr\nWHERE {\n  # Use ALLIE service to find English translations of Japanese labels\n  SERVICE <https://data.allie.dbcls.jp/sparql> {\n    ?x rdfs:label ?japaneseLabel .\n    FILTER(REGEX(STR(?japaneseLabel), \"^日本\")) # Filter for labels starting with \"日本\" (Japanese)\n    ?x rdfs:label ?englishLabel .\n    FILTER(lang(?englishLabel) = \"en\")\n  }\n  BIND (STR(?englishLabel) AS ?englishLabelStr)\n\n  # Assuming compounds are related to proteins in UniProt (adjust if needed)\n  ?protein a up:Protein .\n  {\n    ?protein (up:recommendedName|up:alternativeName) ?structuredName .\n  }\n  UNION\n  {\n    VALUES(?partType){(up:domain) (up:component)}\n    ?protein ?partType ?part .\n    ?part (up:recommendedName|up:alternativeName) ?structuredName .\n  }\n  ?structuredName ?anyKindOfName  ?englishLabelStr .\n  ?anyKindOfName rdfs:subPropertyOf up:structuredNameType .\n\n  BIND (?x AS ?compound) # Bind the ALLIE result to ?compound\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "81409965-a10a-4366-af65-0b497ba2d0b1",
    "evaluation_timestamp": "2025-05-02T06:59:30.238520",
    "question_understanding_prompt_tokens": 250,
    "question_understanding_completion_tokens": 23,
    "question_understanding_total_tokens": 273,
    "sparql_query_construction_prompt_tokens": 4428,
    "sparql_query_construction_completion_tokens": 365,
    "sparql_query_construction_total_tokens": 4793,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/117_Retrieve_parent_reactions_and_their_catalyzing_enzymes_for_a_metabolite_that_is_not_directly_involved_in_a_reaction",
    "natural_language_question": "Retrieve parent reactions (and their catalyzing enzymes) for a metabolite that is not directly involved in a reaction (ex: CHEBI:83137).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX up:<http://purl.uniprot.org/core/>\nPREFIX taxon:<http://purl.uniprot.org/taxonomy/>\nPREFIX keywords:<http://purl.uniprot.org/keywords/>\n\nSELECT\n  ?chebi\n  ?ecNumber\n  (count(?protein) as ?proteinCount)\n  ?reaction\n  ?equation\nWHERE {\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:equation ?equation .\n  ?reaction rh:ec ?ecNumber .\n  ?reaction rh:side ?reactionSide .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi .\n  CHEBI:83137 rdfs:subClassOf+ ?chebi.\n\n  SERVICE <https://sparql.uniprot.org/sparql> {\n  ?protein a up:Protein .\n  ?protein up:reviewed true .\n    {?protein up:enzyme ?ecNumber}\n  UNION\n    {?protein up:domain/up:enzyme ?ecNumber}\n  UNION\n    {?protein up:component/up:enzyme ?ecNumber} .\n  }\n} \nGROUP BY ?chebi ?ecNumber ?reaction ?equation",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/117_Retrieve_parent_reactions_and_their_catalyzing_enzymes_for_a_metabolite_that_is_not_directly_involved_in_a_reaction.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX keywords: <http://purl.uniprot.org/keywords/>\n\nSELECT DISTINCT ?parentReaction ?parentEquation ?ecNumber ?protein\nWHERE {\n  # Define the metabolite of interest (CHEBI:83137)\n  BIND (CHEBI:83137 AS ?metabolite)\n\n  # Find reactions where the metabolite is a participant\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?metabolite .\n\n  # Exclude reactions where the metabolite is directly involved\n  FILTER NOT EXISTS {\n    ?reaction rdfs:subClassOf rh:Reaction .\n    ?reaction rh:side ?reactionSide .\n  }\n\n  # Find parent reactions of the reactions where the metabolite participates\n  ?reaction rdfs:subClassOf ?parentReaction .\n  ?parentReaction rdfs:subClassOf rh:Reaction .\n  ?parentReaction rh:equation ?parentEquation .\n\n  # Find EC numbers associated with the parent reactions\n  OPTIONAL {\n    ?parentReaction rh:ec ?ecNumber .\n  }\n\n  # Find proteins associated with the EC numbers using the UniProt SPARQL endpoint\n  OPTIONAL {\n    SERVICE <https://sparql.uniprot.org/sparql> {\n      ?protein a up:Protein .\n      ?protein up:reviewed true .\n      # Optional: Filter by organism (e.g., human - taxon:9606)\n      # ?protein up:organism taxon:9606 .\n      ?protein up:classifiedWith keywords:1185 . #Retrieve only proteins from reference proteomes\n      { ?protein up:enzyme ?ecNumber }\n      UNION\n      { ?protein up:domain/up:enzyme ?ecNumber }\n      UNION\n      { ?protein up:component/up:enzyme ?ecNumber }\n    }\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "e7f5d234-d045-4ec3-a294-09217d292eaf",
    "evaluation_timestamp": "2025-05-02T07:00:45.935831",
    "question_understanding_prompt_tokens": 272,
    "question_understanding_completion_tokens": 37,
    "question_understanding_total_tokens": 309,
    "sparql_query_construction_prompt_tokens": 5770,
    "sparql_query_construction_completion_tokens": 523,
    "sparql_query_construction_total_tokens": 6293,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/18",
    "natural_language_question": "Use <a href=\"https://idsm.elixir-czech.cz/sparql\">IDSM Sachem</a> to find ChEBIs with a a <a href=\"https://www.ebi.ac.uk/chebi/searchId.do?chebiId=CHEBI:35516\">Cholestane</a> skeleton (in SMILES). Then match returned ChEBIs to Rhea undirected reactions.",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\n\n\nSELECT \n  ?rhea \n  ?chebi\nWHERE {\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n    ?chebi sachem:substructureSearch [\n        sachem:query \"[C@]12(CCC3CCCC[C@]3(C)[C@@]1([H])CC[C@]1(C)[C@@]([H])([C@@](C)([H])CCCC(C)C)CC[C@@]21[H])[H]\" ].\n  }\n  ?rhea rh:side/rh:contains/rh:compound/rdfs:subClassOf ?chebi .\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/18.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?chebi ?reaction ?equation\nWHERE {\n  # Find ChEBIs with Cholestane skeleton using a SERVICE call to IDSM Sachem\n  SERVICE <https://idsm.elixir-czech.cz/sparql> {\n    SELECT DISTINCT ?chebi WHERE {\n      ?chebi a <http://purl.obolibrary.org/obo/CHEBI_35516> . # Assuming CHEBI:35516 represents Cholestane skeleton\n    }\n  }\n\n  # Match the found ChEBIs to Rhea undirected reactions\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:equation ?equation .\n  ?reaction rh:side ?reactionSide .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi .\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "59852c98-b243-4a57-b9c1-f3d30b29ac65",
    "evaluation_timestamp": "2025-05-02T07:00:57.733664",
    "question_understanding_prompt_tokens": 333,
    "question_understanding_completion_tokens": 52,
    "question_understanding_total_tokens": 385,
    "sparql_query_construction_prompt_tokens": 5674,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 5674,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/115_Retrieve_the_set_of_metabolites_involved_in_reactions_catalyzed_by_human_genes_HUMAN_reference_proteome",
    "natural_language_question": "Retrieve the set of metabolites involved in reactions catalyzed by human genes (HUMAN reference proteome)",
    "ground_truth_query": "\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX taxon:<http://purl.uniprot.org/taxonomy/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up:<http://purl.uniprot.org/core/>\nPREFIX keywords:<http://purl.uniprot.org/keywords/>\n\nSELECT\n  ?chebi\n  ?reaction\n  ?ecNumber\n  ?protein\n  ?ensemblTranscript\n  ?ensemblGene\nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein up:reviewed true .\n    ?protein up:organism taxon:9606 .\n    ?protein up:classifiedWith keywords:1185 .\n\n    ?protein rdfs:seeAlso ?ensemblTranscript .\n    ?ensemblTranscript a up:Transcript_Resource .\n    ?ensemblTranscript up:database <http://purl.uniprot.org/database/Ensembl> .\n    ?ensemblTranscript up:transcribedFrom ?ensemblGene .\n\n      {?protein up:enzyme ?ecNumber .}\n    UNION\n      {?protein up:domain/up:enzyme ?ecNumber .}\n    UNION\n      {?protein up:component/up:enzyme ?ecNumber .}\n  }\n\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:ec ?ecNumber .\n  ?reaction rh:side ?reactionSide .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi . # only considering small molecules participants\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/115_Retrieve_the_set_of_metabolites_involved_in_reactions_catalyzed_by_human_genes_HUMAN_reference_proteome.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\n\nSELECT DISTINCT ?metabolite ?reaction\nWHERE {\n  # Find reactions catalyzed by human enzymes from UniProt\n  SERVICE <https://sparql.uniprot.org/sparql/> {\n    ?protein a up:Protein .\n    ?protein up:reviewed \"true\"^^xsd:boolean .\n    ?protein up:organism taxon:9606 . # Human\n    ?protein up:annotation/up:catalyticActivity/up:catalyzedReaction ?reaction .\n  }\n  \n  # Get the metabolites involved in these reactions from Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql/> {\n    ?reaction rdfs:subClassOf rh:Reaction .\n    ?reaction rh:side/rh:contains/rh:compound ?metabolite .\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "ffe5343c-418c-447a-a99b-30305845b668",
    "evaluation_timestamp": "2025-05-02T07:01:08.458955",
    "question_understanding_prompt_tokens": 255,
    "question_understanding_completion_tokens": 26,
    "question_understanding_total_tokens": 281,
    "sparql_query_construction_prompt_tokens": 6047,
    "sparql_query_construction_completion_tokens": 0,
    "sparql_query_construction_total_tokens": 6047,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Line 12, column 34: Unresolved prefixed name: xsd:boolean",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "syntactically not correct"
  }
]