
# Natural Language Question
# =======================
Connect patents cited in UniProtKB with those in the patent database at EPO via publication number.

# Target Endpoint
# ===============
https://sparql.uniprot.org/sparql/

# Ground Truth Query
# =================
PREFIX patent: <http://data.epo.org/linked-data/def/patent/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT ?citation ?patent ?application ?applicationNo
WHERE
{
  ?citation a up:Patent_Citation ;
    skos:exactMatch ?patent .
  FILTER(CONTAINS(STR(?patent), 'EP'))
  BIND(SUBSTR(STR(?patent), 35) AS ?applicationNo)
  SERVICE <https://data.epo.org/linked-data/query>{
    ?application patent:publicationNumber ?applicationNo
  }
}

# Predicted Query
# ==============
# Primary endpoint: https://sparql.uniprot.org/sparql/
PREFIX up: <http://purl.uniprot.org/core/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX patent: <http://data.epo.org/linked-data/def/patent/>

SELECT ?citation ?patentIRI ?publicationNumber ?epoPublication ?epoApplication
WHERE {
  # Part 1: Retrieve patent citations from UniProtKB
  ?citation a up:Patent_Citation .
  ?citation skos:exactMatch ?patentIRI .
  
  # Extract the publication number from the UniProt patent IRI.
  # The specific substring position (35) is based on the validated building block,
  # assuming the UniProt patent IRI follows a structure like
  # "http://purl.uniprot.org/patent/publication/EP1234567A1"
  # where the publication number starts at character 35.
  BIND(SUBSTR(STR(?patentIRI), 35) AS ?publicationNumber)

  # Part 2: Federate with the EPO patent database to find matching patents
  SERVICE <https://data.epo.org/linked-data/query> {
    # Use the extracted publication number to find the corresponding patent publication in EPO
    ?epoPublication patent:publicationNumber ?publicationNumber .
    # Retrieve the associated patent application from the EPO publication
    ?epoPublication patent:application ?epoApplication .
  }
}
