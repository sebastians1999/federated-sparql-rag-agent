[
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/16",
    "natural_language_question": "For a given lipid (SWISSLIPID:000399814, Ceramide), return a list of all enzymes in UniProtKB/Swiss-Prot annotated to catalyze reactions involving that lipid.\nThis query does not consider the hierarchy: it looks for reactions and enzymes only for the specified lipid.",
    "ground_truth_query": "PREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n# Example 16\nSELECT ?startId ?startName ?uniprot\nWHERE\n{\n  # SwissLipids query (list of) identifier(s)\n  VALUES ?startId { SWISSLIPID:000399814 }\n  # name\n  ?startId rdfs:label ?startName .\n  # ChEBI x-ref\n  ?startId owl:equivalentClass ?chebi .\n  # federated query to Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n  \t?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n  }    \n  # federated query to UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?uniprot up:reviewed true .\n    ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  }\n} \nORDER BY ?startId",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/16.ttl",
    "predicted_query": "# https://sparql.swisslipids.org/sparql\nPREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?startId ?startName ?chebi ?rhea ?rheaEquation ?uniprot ?uniprotName\nWHERE\n{\n  # Specify the target lipid by its SwissLipids ID\n  VALUES ?startId { SWISSLIPID:000399814 }\n  \n  # Get the lipid's name\n  ?startId rdfs:label ?startName .\n  \n  # Find the ChEBI equivalent for the lipid, which serves as a join variable to Rhea\n  ?startId owl:equivalentClass ?chebi .\n\n  # Federated query to Rhea-DB to find reactions involving the ChEBI compound\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    # Get the Rhea reaction equation\n    ?rhea rh:equation ?rheaEquation .\n    # Link the Rhea reaction to the ChEBI compound\n    ?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n  }\n\n  # Federated query to UniProt to find enzymes catalyzing these Rhea reactions\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    # Filter for reviewed (Swiss-Prot) entries\n    ?uniprot up:reviewed true .\n    # Get the recommended full name of the UniProt entry (enzyme)\n    ?uniprot up:recommendedName/up:fullName ?uniprotName .\n    # Link the UniProt entry to the Rhea reaction it catalyzes\n    ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  }\n}\nORDER BY ?uniprot",
    "predicted_endpoint": "https://sparql.swisslipids.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "1ede4099-c24b-4ba0-9cf8-8fefd297d7dd",
    "evaluation_timestamp": "2025-05-27T20:00:53.190048",
    "question_understanding_prompt_tokens": 304,
    "question_understanding_completion_tokens": 72,
    "question_understanding_total_tokens": 376,
    "planning_prompt_tokens": 7937,
    "planning_completion_tokens": 154,
    "planning_total_tokens": 8091,
    "pattern_prompt_tokens": 21972,
    "pattern_completion_tokens": 278,
    "pattern_total_tokens": 22250,
    "assembler_prompt_tokens": 5493,
    "assembler_completion_tokens": 499,
    "assembler_total_tokens": 5992,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "The read operation timed out"
  },
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/6",
    "natural_language_question": "For a given lipid (SWISSLIPID:000399814, Ceramide), return a list of all corresponding reactions (Rhea IDs and equation), as well as their enzymes as annotated in UniProtKB/Swiss-Prot) enzymes themselves (ID and protein name).\nThis query does not consider the hierarchy: it looks for reactions and enzymes only for the specified lipid.",
    "ground_truth_query": "PREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n# Example 6\nSELECT ?startId ?startName ?chebi ?rhea ?rheaEquation ?uniprot ?uniprotName\nWHERE\n{\n  # SwissLipids query (list of) identifier(s)\n  VALUES ?startId { SWISSLIPID:000399814 }\n  # name\n  ?startId rdfs:label ?startName .\n  # ChEBI x-ref\n  ?startId owl:equivalentClass ?chebi .\n  # federated query to Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n  \t?rhea rh:equation ?rheaEquation .\n  \t?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n  }    \n  # federated query to UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?uniprot up:reviewed true .\n    ?uniprot up:recommendedName/up:fullName ?uniprotName .\n    ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  }\n} \nORDER BY ?startId",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/6.ttl",
    "predicted_query": "# PRIMARY_ENDPOINT: https://sparql.swisslipids.org/sparql\nPREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?rheaId ?rheaEquation ?uniprotId ?proteinName\nWHERE {\n  # 1. Get the ChEBI equivalent for the given SwissLipid ID from the SwissLipids endpoint\n  VALUES ?lipid { SWISSLIPID:000399814 }\n  ?lipid owl:equivalentClass ?chebi .\n\n  # 2. Find Rhea reactions involving this ChEBI compound (federated to Rhea-DB)\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n    ?rhea rh:accession ?rheaId .\n    ?rhea rh:equation ?rheaEquation .\n  }\n\n  # 3. Find UniProt enzymes catalyzing these Rhea reactions (federated to UniProt)\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?uniprotId up:reviewed true . # Filter for reviewed UniProt entries\n    ?uniprotId up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n    ?uniprotId up:recommendedName/up:fullName ?proteinName .\n  }\n}\nORDER BY ?rheaId ?uniprotId",
    "predicted_endpoint": "PRIMARY_ENDPOINT:",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "3c331af8-19b9-41a4-ae87-fab576895f30",
    "evaluation_timestamp": "2025-05-27T20:14:13.390397",
    "question_understanding_prompt_tokens": 320,
    "question_understanding_completion_tokens": 65,
    "question_understanding_total_tokens": 385,
    "planning_prompt_tokens": 6740,
    "planning_completion_tokens": 174,
    "planning_total_tokens": 6914,
    "pattern_prompt_tokens": 21279,
    "pattern_completion_tokens": 490,
    "pattern_total_tokens": 21769,
    "assembler_prompt_tokens": 4095,
    "assembler_completion_tokens": 0,
    "assembler_total_tokens": 4095,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "<urlopen error unknown url type: primary_endpoint>"
  },
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/5",
    "natural_language_question": "For a given lipid (SWISSLIPID:000399814, Ceramide), return a list of all corresponding reactions (Rhea IDs and equation).\nThis query does consider the hierarchy: it looks for reactions involving the specified lipid and/or its more specific forms.",
    "ground_truth_query": "PREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\n\n# Example 5\nSELECT ?startId ?startName ?id ?name ?chebi ?rhea ?rheaEquation \nWHERE\n{\n  # SwissLipids query (list of) identifier(s)\n  VALUES ?startId { SWISSLIPID:000399814 }\n  # name\n  ?startId rdfs:label ?startName .\n  # Retrieve children lipids \n  ?id rdfs:subClassOf* ?startId .\n  ?id rdfs:label ?name .\n  # ChEBI x-ref\n  ?id owl:equivalentClass ?chebi .\n  # federated query to Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n  \t?rhea rh:equation ?rheaEquation .\n  \t?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n  }    \n} \nORDER BY  ?startId ?id",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/5.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql/\nPREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?rheaId ?equation\nWHERE {\n  # Step 1: Query SwissLipids to get the specified lipid, its subclasses, and their equivalent ChEBI IDs.\n  SERVICE <https://sparql.swisslipids.org/sparql/> {\n    # Define the starting lipid (Ceramide)\n    VALUES ?startSwissLipid { SWISSLIPID:000399814 } .\n    \n    # Find the specified lipid and all its more specific forms (subclasses) in the SwissLipids hierarchy\n    ?specificSwissLipid rdfs:subClassOf* ?startSwissLipid .\n    \n    # Get the ChEBI equivalent class for each specific SwissLipid\n    ?specificSwissLipid owl:equivalentClass ?chebiIdFromSwissLipid .\n  }\n\n  # Step 2: Use the obtained ChEBI IDs in Rhea to find corresponding reactions.\n  # This part runs on the primary Rhea endpoint.\n\n  # Find the ChEBI ID itself and all its more specific forms (subclasses) in the ChEBI hierarchy.\n  # This ensures that reactions involving the specific ChEBI compound or any of its derivatives are found.\n  ?chebiInRheaHierarchy rdfs:subClassOf* ?chebiIdFromSwissLipid .\n  \n  # Find Rhea reactions that involve the identified ChEBI compounds.\n  # The compound can be directly linked via rh:chebi, or through reactivePart/underlyingChebi.\n  ?rhea rh:side/rh:contains/rh:compound ?compound .\n  ?compound (rh:chebi|rh:reactivePart/rh:chebi|rh:underlyingChebi/rh:chebi) ?chebiInRheaHierarchy .\n  \n  # Get the Rhea accession ID and the reaction equation.\n  ?rhea rh:accession ?rheaId .\n  ?rhea rh:equation ?equation .\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "6e7fc57a-d28c-4ca3-858c-f8a7f847274d",
    "evaluation_timestamp": "2025-05-27T20:15:29.360109",
    "question_understanding_prompt_tokens": 300,
    "question_understanding_completion_tokens": 65,
    "question_understanding_total_tokens": 365,
    "planning_prompt_tokens": 5649,
    "planning_completion_tokens": 175,
    "planning_total_tokens": 5824,
    "pattern_prompt_tokens": 13469,
    "pattern_completion_tokens": 487,
    "pattern_total_tokens": 13956,
    "assembler_prompt_tokens": 4562,
    "assembler_completion_tokens": 567,
    "assembler_total_tokens": 5129,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/34",
    "natural_language_question": "Lipids affected by human enzymes",
    "ground_truth_query": "PREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?swisslipid  {\n  ?swisslipid owl:equivalentClass ?chebi .\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n\t?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?metabolite . \n  }\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?catalyticActivityAnnotation up:catalyticActivity/up:catalyzedReaction ?rhea .\n    ?protein up:annotation ?catalyticActivityAnnotation ;\n             up:organism taxon:9606 .\n  }\n}\nLIMIT 1",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/34.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?enzyme ?enzymeName ?lipidChebi ?lipidName\nWHERE {\n  # Find human enzymes in UniProt\n  ?enzyme up:organism taxon:9606 ; # Filter for human enzymes (Homo sapiens)\n          up:annotation/up:catalyticActivity/up:catalyzedReaction ?reaction . # Link enzyme to catalyzed reaction\n  OPTIONAL { ?enzyme up:recommendedName/up:fullName ?enzymeName . } # Get the full name of the enzyme\n\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    # Find reactions in Rhea that involve lipids\n    ?reaction rdfs:subClassOf rh:Reaction . # Ensure it's a valid Rhea reaction\n    ?reaction rh:side/rh:contains/rh:compound ?compound . # Find compounds involved in the reaction\n    ?compound rh:chebi ?lipidChebi . # Get the ChEBI identifier for the compound\n    ?lipidChebi rdfs:subClassOf+ CHEBI:18059 . # Filter for lipids (subclass of CHEBI:18059)\n    OPTIONAL { ?lipidChebi rdfs:label ?lipidName . } # Get the label (name) of the lipid from ChEBI\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "69bb4346-403c-492a-a2ae-8e4b536306c6",
    "evaluation_timestamp": "2025-05-27T20:16:25.491400",
    "question_understanding_prompt_tokens": 247,
    "question_understanding_completion_tokens": 20,
    "question_understanding_total_tokens": 267,
    "planning_prompt_tokens": 7633,
    "planning_completion_tokens": 130,
    "planning_total_tokens": 7763,
    "pattern_prompt_tokens": 12991,
    "pattern_completion_tokens": 268,
    "pattern_total_tokens": 13259,
    "assembler_prompt_tokens": 6498,
    "assembler_completion_tokens": 403,
    "assembler_total_tokens": 6901,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/118_biosodafrontend_rat_brain_human_cancer",
    "natural_language_question": "What are the Homo sapiens genes associated with cancer and their orthologs expressed in the Rattus norvegicus brain?",
    "ground_truth_query": "PREFIX up:<http://purl.uniprot.org/core/>\nPREFIX taxon:<http://purl.uniprot.org/taxonomy/>\nPREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>\nPREFIX orth:<http://purl.org/net/orth#>\nPREFIX dcterms:<http://purl.org/dc/terms/>\nPREFIX obo:<http://purl.obolibrary.org/obo/>\nPREFIX lscr:<http://purl.org/lscr#>\nPREFIX genex:<http://purl.org/genex#>\nPREFIX sio: <http://semanticscience.org/resource/>\nSELECT ?gene ?orthologous_protein2 WHERE {\n  {\n    SELECT ?protein1 WHERE {\n      ?protein1 a up:Protein;\n        up:organism/up:scientificName 'Homo sapiens' ;\n        up:annotation ?annotation .\n      ?annotation rdfs:comment ?annotation_text.\n      ?annotation a up:Disease_Annotation .\n      FILTER CONTAINS (?annotation_text, \"cancer\")\n    }\n  }\n  SERVICE <https://sparql.omabrowser.org/sparql/> {\n    SELECT ?orthologous_protein2 ?protein1 ?gene WHERE {\n      ?protein_OMA a orth:Protein .\n      ?orthologous_protein2 a orth:Protein .\n      ?cluster a orth:OrthologsCluster .\n      ?cluster orth:hasHomologousMember ?node1 .\n      ?cluster orth:hasHomologousMember ?node2 .\n      ?node2 orth:hasHomologousMember* ?protein_OMA .\n      ?node1 orth:hasHomologousMember* ?orthologous_protein2 \n      .?orthologous_protein2 orth:organism/obo:RO_0002162/up:scientificName 'Rattus norvegicus' .\n      ?orthologous_protein2 sio:SIO_010079 ?gene .\n      ?protein_OMA lscr:xrefUniprot ?protein1 .\n      FILTER(?node1 != ?node2)\n    }\n  }\n  SERVICE <https://www.bgee.org/sparql/> {\n    ?gene genex:isExpressedIn ?anatEntity .\n    ?anatEntity rdfs:label 'brain' .\n    ?gene orth:organism ?org . \n    ?org obo:RO_0002162 taxon:10116 .\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql",
    "federates_with": [
      "https://sparql.omabrowser.org/sparql/",
      "https://www.bgee.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/118_biosodafrontend_rat_brain_human_cancer.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX updiseases: <http://purl.uniprot.org/diseases/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX orthodb: <http://purl.orthodb.org/>\nPREFIX genex: <http://purl.org/genex#>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n\nSELECT DISTINCT ?humanGene ?humanGeneName ?humanProtein ?ratGene ?ratGeneName ?ratProtein ?orthoGroup ?brainAnatomyLabel\nWHERE {\n  # --- UniProt: Find Homo sapiens proteins associated with cancer ---\n  ?humanProtein a up:Protein ;\n                up:organism taxon:9606 ; # Homo sapiens\n                up:annotation ?diseaseAnnotation ;\n                up:encodedBy ?humanGene ;\n                rdfs:seeAlso ?orthoGroup . # Link to OrthoDB orthogroup\n\n  ?diseaseAnnotation a up:Disease_Annotation ;\n                     up:disease updiseases:2602 . # Cancer\n\n  ?humanGene skos:prefLabel ?humanGeneName . # Get the preferred name for the human gene\n\n  # --- OrthoDB: Find orthologs in Rattus norvegicus within the same orthogroup ---\n  SERVICE <https://sparql.orthodb.org/sparql> {\n    ?orthoGroup orthodb:hasMember ?humanOrthoMember .\n    ?humanOrthoMember orthodb:xref/orthodb:xrefResource ?humanProtein . # Match the human protein from UniProt\n\n    ?orthoGroup orthodb:hasMember ?ratOrthoMember .\n    ?ratOrthoMember orthodb:xref/orthodb:xrefResource ?ratProtein . # Get the UniProt ID of the rat ortholog protein\n  }\n\n  # --- UniProt: Get details for the Rattus norvegicus ortholog ---\n  ?ratProtein a up:Protein ;\n              up:organism taxon:10116 ; # Ensure it's Rattus norvegicus\n              up:encodedBy ?ratGene .\n\n  ?ratGene skos:prefLabel ?ratGeneName . # Get the preferred name for the rat gene\n\n  # Get the Ensembl gene URI for the rat gene to link to Bgee\n  ?ratProtein rdfs:seeAlso ?ensemblXref .\n  ?ensemblXref up:database <http://purl.uniprot.org/database/Ensembl> . # Ensure it's an Ensembl cross-reference\n  ?ensemblXref up:transcribedFrom ?ratEnsemblGene . # Get the Ensembl gene URI\n\n  # --- Bgee: Check expression of the Rattus norvegicus ortholog gene in the brain ---\n  SERVICE <https://www.bgee.org/sparql> {\n    ?bgeeGene lscr:xrefEnsemblGene ?ratEnsemblGene . # Link Bgee gene to the rat Ensembl gene URI\n    ?bgeeGene genex:isExpressedIn ?brainAnatomy .\n    ?brainAnatomy rdfs:label \"brain\" . # Filter for expression in \"brain\"\n    ?brainAnatomy rdfs:label ?brainAnatomyLabel . # Get the label for the brain anatomy\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "ba67272d-5469-4183-9a95-5244517e03bf",
    "evaluation_timestamp": "2025-05-27T20:19:10.975963",
    "question_understanding_prompt_tokens": 263,
    "question_understanding_completion_tokens": 47,
    "question_understanding_total_tokens": 310,
    "planning_prompt_tokens": 7481,
    "planning_completion_tokens": 220,
    "planning_total_tokens": 7701,
    "pattern_prompt_tokens": 15462,
    "pattern_completion_tokens": 467,
    "pattern_total_tokens": 15929,
    "assembler_prompt_tokens": 5389,
    "assembler_completion_tokens": 815,
    "assembler_total_tokens": 6204,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/51",
    "natural_language_question": "Find all proteins linked to arachidonate (CHEBI:32395)",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n\nSELECT \n    DISTINCT\n        ?uniprot\n        ?uniprotID\n        ?recname\n        ?gene\n        ?chebi\n        ?uniprotName\nWHERE {\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n     VALUES (?chebi) { (CHEBI:32395) }\n     ?rhea rh:side/rh:contains/rh:compound ?compound .\n     ?compound rh:chebi ?chebi .\n     ?chebi up:name ?uniprotName .\n  }\n  ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  ?uniprot up:mnemonic ?uniprotID .\n  ?uniprot up:recommendedName/up:fullName ?recname .\n  OPTIONAL {?uniprot up:encodedBy/skos:prefLabel ?gene .}\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/51_all_proteins_linked_to_arachidonate.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?protein\nWHERE {\n  # Find proteins in UniProt that catalyze a specific Rhea reaction\n  ?protein up:annotation/up:catalyticActivity/up:catalyzedReaction ?rheaReaction .\n\n  # In the Rhea database, find reactions involving arachidonate (CHEBI:32395)\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rheaReaction rh:side/rh:contains/rh:compound/rh:chebi CHEBI:32395 .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "2503bb81-e7c8-4420-aebc-ca6b7cb9da80",
    "evaluation_timestamp": "2025-05-27T20:21:30.089098",
    "question_understanding_prompt_tokens": 258,
    "question_understanding_completion_tokens": 31,
    "question_understanding_total_tokens": 289,
    "planning_prompt_tokens": 5189,
    "planning_completion_tokens": 125,
    "planning_total_tokens": 5314,
    "pattern_prompt_tokens": 7517,
    "pattern_completion_tokens": 227,
    "pattern_total_tokens": 7744,
    "assembler_prompt_tokens": 3721,
    "assembler_completion_tokens": 202,
    "assembler_total_tokens": 3923,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/40",
    "natural_language_question": "Retrieve human enzymes that metabolize sphingolipids and are annotated in ChEMBL",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?protein ?chemblEntry\nWHERE {\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rdfs:subClassOf rh:Reaction ;\n      rh:side/rh:contains/rh:compound/rh:chebi/rdfs:subClassOf+ CHEBI:26739 .\n  }\n  ?ca up:catalyzedReaction ?rhea .\n  ?protein up:annotation/up:catalyticActivity ?ca ;\n    up:organism taxon:9606 ;\n    rdfs:seeAlso ?chemblEntry .\n  ?chemblEntry up:database <http://purl.uniprot.org/database/ChEMBL> .\n}\nLIMIT 10",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/40_human_enzymes_that_metabolize_sphingolipids.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?enzyme ?enzymeName ?reaction ?chebi\nWHERE {\n  # UniProt: Find human enzymes annotated in ChEMBL and their catalyzed reactions\n  ?enzyme up:organism taxon:9606 .\n  ?enzyme up:annotation ?annotation .\n  ?annotation a up:Catalytic_Activity_Annotation .\n  ?annotation up:catalyticActivity ?catalyticActivity .\n  ?catalyticActivity up:catalyzedReaction ?reaction . # Join variable with Rhea\n  \n  # Get enzyme name for better readability\n  OPTIONAL { ?enzyme up:recommendedName/up:fullName ?enzymeName . }\n\n  # Filter for enzymes annotated in ChEMBL\n  ?enzyme rdfs:seeAlso ?chemblAnnotation .\n  ?chemblAnnotation up:database <http://purl.uniprot.org/database/ChEMBL> .\n\n  # Rhea: Find reactions involving sphingolipids\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rh:side/rh:contains/rh:compound ?compound .\n    ?compound rh:chebi ?chebi .\n    ?chebi (rdfs:subClassOf)+ CHEBI:73039 . # CHEBI:73039 is 'sphingolipid'\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "99c842c2-fc2d-4e74-ae55-24f6869d8cd0",
    "evaluation_timestamp": "2025-05-27T20:22:27.703126",
    "question_understanding_prompt_tokens": 254,
    "question_understanding_completion_tokens": 33,
    "question_understanding_total_tokens": 287,
    "planning_prompt_tokens": 8302,
    "planning_completion_tokens": 154,
    "planning_total_tokens": 8456,
    "pattern_prompt_tokens": 13551,
    "pattern_completion_tokens": 355,
    "pattern_total_tokens": 13906,
    "assembler_prompt_tokens": 6864,
    "assembler_completion_tokens": 414,
    "assembler_total_tokens": 7278,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/49",
    "natural_language_question": "Retrieve the UniProtKB proteins, their catalyzed Rhea reactions, their encoding genes (Ensembl) and the anatomic entities where the genes are expressed (UBERON anatomic entites from Bgee expression data resource).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX genex: <http://purl.org/genex#>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?protein ?ensemblGene ?reaction ?anatomicEntityLabel ?anatomicEntity\nWHERE {\n  # federated query to Rhea enadpoint\n  {\n    SELECT DISTINCT ?reaction WHERE {\n      SERVICE <https://sparql.rhea-db.org/sparql> {\n        ?reaction rdfs:subClassOf rh:Reaction ;\n          rh:equation ?reactionEquation ;\n          rh:side ?reactionSide .\n        ?reactionSide rh:contains ?participant .\n        ?participant rh:compound ?compound .\n        # compound constraint (CHEBI:16113 == cholesterol)\n        ?compound rh:chebi CHEBI:16113 .\n      }\n    }\n  }\n  # taxonomy constraint (taxon:9606 == Homo sapiens)\n  ?protein up:organism taxon:9606 ;\n    up:annotation ?a ;\n    rdfs:seeAlso / up:transcribedFrom ?ensemblGene .\n  ?a a up:Catalytic_Activity_Annotation ;\n    up:catalyticActivity ?ca .\n  ?ca up:catalyzedReaction ?reaction .\n  # federated query to Bgee (expression data)\n  BIND(IRI(REPLACE(STR(?ensemblGene), \"\\\\.[0-9]+$\", \"\")) AS ?ensemblGeneNoVersion)\n  SERVICE <https://www.bgee.org/sparql/> {\n    ?gene lscr:xrefEnsemblGene ?ensemblGeneNoVersion ;\n      genex:isExpressedIn ?anatomicEntity .\n    ?anatomicEntity rdfs:label ?anatomicEntityLabel .\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql",
      "https://www.bgee.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/49_tissues_where_genes_metabolizing_cholestrol_are_expressed.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX genex: <http://purl.org/genex#>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX obo: <http://purl.obolibrary.org/obo/>\n\nSELECT DISTINCT ?protein ?proteinLabel ?rhea ?rheaAccession ?ensemblGene ?anat\nWHERE {\n  # UniProtKB proteins and their catalyzed Rhea reactions\n  ?protein a up:Protein ;\n           up:reviewed true ; # Focus on high-quality reviewed entries\n           rdfs:label ?proteinLabel . # Get protein label for readability\n\n  ?protein up:annotation ?annotation .\n  ?annotation up:catalyticActivity ?catalyticActivity .\n  ?catalyticActivity up:catalyzedReaction ?rhea .\n\n  # Link UniProt protein to its encoding Ensembl gene via an Ensembl transcript\n  ?protein rdfs:seeAlso ?ensemblTranscript .\n  ?ensemblTranscript up:database <http://purl.uniprot.org/database/Ensembl> .\n  ?ensemblTranscript up:transcribedFrom ?ensemblGene .\n\n  # Get Rhea reaction details from the Rhea endpoint\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:accession ?rheaAccession .\n    # Optionally, retrieve the reaction equation for more details:\n    # ?rhea rh:equation ?rheaEquation .\n  }\n\n  # Get anatomic entities where the genes are expressed from the Bgee endpoint\n  SERVICE <https://www.bgee.org/sparql> {\n    # Bgee links expression data to UniProt proteins\n    ?bgeeEntity lscr:xrefUniprot ?protein .\n    ?bgeeEntity genex:isExpressedIn ?anat .\n    # Optionally, retrieve the label for the anatomic entity:\n    # ?anat rdfs:label ?anatLabel .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "94259729-ef58-4998-9acd-74cb9081f527",
    "evaluation_timestamp": "2025-05-27T20:36:10.734920",
    "question_understanding_prompt_tokens": 280,
    "question_understanding_completion_tokens": 76,
    "question_understanding_total_tokens": 356,
    "planning_prompt_tokens": 7796,
    "planning_completion_tokens": 214,
    "planning_total_tokens": 8010,
    "pattern_prompt_tokens": 19955,
    "pattern_completion_tokens": 535,
    "pattern_total_tokens": 20490,
    "assembler_prompt_tokens": 4304,
    "assembler_completion_tokens": 506,
    "assembler_total_tokens": 4810,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/53",
    "natural_language_question": "Find mouse homologs in OMABrowser of human enzymes that catalyze reactions involving sterols (CHEBI:15889). Federating with Rhea and OMABrowser.",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX orth: <http://purl.org/net/orth#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  DISTINCT\n    ?chebi\n    ?reaction\n    ?humanProtein\n    ?mouseProtein\n    ?cluster \nWHERE {\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf rh:Reaction .\n    ?reaction rh:side/rh:contains/rh:compound ?compound .\n    ?compound rh:chebi ?chebi .\n    ?chebi rdfs:subClassOf* CHEBI:15889\n  }\n\n  ?humanProtein up:organism taxon:9606 .\n  ?humanProtein up:annotation ?a .\n  ?a a up:Catalytic_Activity_Annotation .\n  ?a up:catalyticActivity ?ca .\n  ?ca up:catalyzedReaction ?reaction .\n\n  SERVICE  <https://sparql.omabrowser.org/sparql> {\n    ?cluster a orth:ParalogsCluster .\n    ?cluster orth:hasHomologousMember ?node1 , ?node2 .\n    ?node1 orth:hasHomologousMember* ?orthoProtein1 .\n    ?node2 orth:hasHomologousMember* ?orthoProtein2 .\n    ?orthoProtein1 lscr:xrefUniprot ?mouseProtein .\n    ?orthoProtein2 lscr:xrefUniprot ?humanProtein .\n    # inTaxon mouse\n    ?orthoProtein1 orth:organism/<http://purl.obolibrary.org/obo/RO_0002162> taxon:10090 . \n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql",
      "https://sparql.omabrowser.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/53_mouse_homologs_of_sterol_enzymes_via_omabrowser.ttl",
    "predicted_query": "# Primary endpoint: https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX oma: <http://omabrowser.org/ontology/>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\n\nSELECT DISTINCT ?humanEnzyme ?humanEnzymeName ?mouseHomolog ?mouseHomologName\nWHERE {\n  # 1. Find reactions involving sterols (CHEBI:15889) from Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf rh:Reaction ;\n              rh:side ?reactionSide .\n    ?reactionSide rh:contains ?participant .\n    ?participant rh:compound ?compound .\n    ?compound rh:chebi ?chebi .\n    ?chebi (rdfs:subClassOf)+ CHEBI:15889 .\n  }\n\n  # 2. Find human enzymes catalyzing these reactions from UniProt (main endpoint)\n  ?humanEnzyme up:organism taxon:9606 ; # Human organism\n               up:annotation ?annotation ;\n               up:recommendedName ?humanRecName .\n  ?humanRecName up:fullName ?humanEnzymeName .\n  ?annotation up:catalyticActivity ?catalyticActivity .\n  ?catalyticActivity up:catalyzedReaction ?reaction .\n\n  # Extract UniProt accession from the human enzyme IRI for OMABrowser\n  BIND(STRAFTER(STR(?humanEnzyme), STR(uniprotkb:)) AS ?humanUniProtAccession)\n\n  # 3. Find mouse homologs of these human enzymes from OMABrowser\n  SERVICE <https://sparql.omabrowser.org/sparql> {\n    # Find the OMA protein entry for the human enzyme using its UniProt accession\n    ?humanOmaProtein oma:hasUniProtAccession ?humanUniProtAccession ;\n                     oma:inTaxon taxon:9606 . # Ensure it's the human entry in OMA\n\n    # Find its ortholog in mouse\n    ?humanOmaProtein oma:hasOrtholog ?mouseOmaHomologEntry .\n    ?mouseOmaHomologEntry oma:inTaxon taxon:10090 . # Ensure the homolog is from mouse\n\n    # Get the UniProt accession of the mouse homolog\n    ?mouseOmaHomologEntry oma:hasUniProtAccession ?mouseHomologAccession .\n  }\n\n  # Convert mouse homolog accession back to UniProt IRI\n  BIND(uniprotkb:?mouseHomologAccession AS ?mouseHomolog)\n\n  # Get the name of the mouse homolog from UniProt (main endpoint)\n  OPTIONAL {\n    ?mouseHomolog up:recommendedName ?mouseRecName .\n    ?mouseRecName up:fullName ?mouseHomologName .\n  }\n}",
    "predicted_endpoint": "Primary",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "0bf8afe6-ccf3-43d2-bf5a-32a306ab8c6e",
    "evaluation_timestamp": "2025-05-27T20:39:42.095907",
    "question_understanding_prompt_tokens": 277,
    "question_understanding_completion_tokens": 60,
    "question_understanding_total_tokens": 337,
    "planning_prompt_tokens": 8703,
    "planning_completion_tokens": 178,
    "planning_total_tokens": 8881,
    "pattern_prompt_tokens": 31817,
    "pattern_completion_tokens": 899,
    "pattern_total_tokens": 32716,
    "assembler_prompt_tokens": 6832,
    "assembler_completion_tokens": 743,
    "assembler_total_tokens": 7575,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Encountered \"  \"?mouseHomologAccession \"\" at line 48, column 18.\nWas expecting one of:\n    \"not\" ...\n    \"as\" ...\n    \"in\" ...\n     ...\n     ...\n     ...\n     ...\n     ...\n     ...\n    \"(\" ...\n     ...\n    \"=\" ...\n    \"!=\" ...\n    \">\" ...\n    \"<\" ...\n    \"<=\" ...\n    \">=\" ...\n    \"||\" ...\n    \"&&\" ...\n    \"+\" ...\n    \"-\" ...\n    \"*\" ...\n    \"/\" ...",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "syntactically not correct"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/52",
    "natural_language_question": "Retrieve drugs that target human enzymes involved in sterol metabolism (federated query with Rhea and ChEMBL via IDSM/Elixir czech republic).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX cco: <http://rdf.ebi.ac.uk/terms/chembl#>\nPREFIX chebihash: <http://purl.obolibrary.org/obo/chebi#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n        DISTINCT\n            ?protein\n            ?proteinFullName\n            ?activityType\n            ?standardActivityValue\n            ?standardActivityUnit\n            ?chemblMolecule\n            ?chemlbMoleculePrefLabel\nWHERE\n  {\n  # ChEBI: retrieve members of the ChEBI class ChEBI:15889 (sterol)\n  # Rhea: retrieve the reactions involving these ChEBI as participants\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf  rh:Reaction ;\n\t      rh:status        rh:Approved ;\n\t      rh:side          ?reactionSide .\n    ?reactionSide\n\t      rh:contains      ?participant .\n    ?participant rh:compound  ?compound\n    {\n      ?compound  rh:chebi  ?chebi .\n      ?chebi (rdfs:subClassOf)+ CHEBI:15889\n    } UNION {\n      ?compound  rh:chebi           ?chebi .\n      ?chebi2   rdfs:subClassOf     ?chebiRestriction .\n      ?chebiRestriction\n\t\ta           owl:Restriction ;\n\t\towl:onProperty      chebihash:has_major_microspecies_at_pH_7_3 ;\n\t\towl:someValuesFrom  ?chebi .\n      ?chebi2 (rdfs:subClassOf)+ CHEBI:15889\n    }\n  }\n  # UniProt: retrieve the human (taxid:9606) enzymes catalyzing these Rhea reactions\n  ?ca       up:catalyzedReaction  ?reaction .\n  ?a        up:catalyticActivity  ?ca .\n  ?protein  up:annotation         ?a ;\n\t    up:organism           taxon:9606 ;\n\t    up:recommendedName    ?proteinRecName .\n  ?proteinRecName\n\t    up:fullName           ?proteinFullName .\n  # Find drugs in wikidata that interact with the UniProt Proteins\n  # ChEMBL: retrieve the corresponding targets and with drugs in clinical phase 4\n  # Via https://idsm.elixir-czech.cz/sparql/\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/idsm> {\n    ?activity a cco:Activity ;\n      cco:hasMolecule ?chemblMolecule ;\n      cco:hasAssay ?assay ;\n      cco:standardType ?activityType ;\n      cco:standardValue ?standardActivityValue ;\n      cco:standardUnits ?standardActivityUnit .\n    ?chemblMolecule cco:highestDevelopmentPhase ?highestDevelopmentPhase ;\n      rdfs:label ?chemblMoleculeLabel ;\n      skos:prefLabel ?chemlbMoleculePrefLabel .\n    FILTER (?highestDevelopmentPhase > 3)\n    ?assay cco:hasTarget ?target .\n    ?target cco:hasTargetComponent/cco:targetCmptXref ?protein .\n    ?protein a cco:UniprotRef .\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql",
      "https://idsm.elixir-czech.cz/sparql/endpoint/idsm"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/52_drugs_targeting_sterol_metabolism.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?chemblEntry ?enzyme ?rheaReaction\nWHERE {\n  # UniProt part (host endpoint)\n  # Find human enzymes\n  ?enzyme up:organism taxon:9606 .\n\n  # Link enzymes to Rhea reactions they catalyze\n  ?enzyme up:annotation/up:catalyticActivity/up:catalyzedReaction ?rheaReaction .\n\n  # Link enzymes to ChEMBL entries (representing drugs/compounds)\n  ?enzyme rdfs:seeAlso ?chemblEntry .\n  ?chemblEntry up:database <http://purl.uniprot.org/database/ChEMBL> .\n\n  # Rhea part (federated service)\n  # Find Rhea reactions involved in sterol metabolism\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rheaReaction rdfs:subClassOf rh:Reaction .\n    ?rheaReaction rh:side/rh:contains/rh:compound ?compound .\n    ?compound rh:chebi ?chebi .\n    ?chebi rdfs:subClassOf* CHEBI:15889 . # CHEBI:15889 is the IRI for 'sterol'\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "94e17162-21d0-4dd8-87f2-919f0f336b64",
    "evaluation_timestamp": "2025-05-27T20:40:45.466533",
    "question_understanding_prompt_tokens": 271,
    "question_understanding_completion_tokens": 28,
    "question_understanding_total_tokens": 299,
    "planning_prompt_tokens": 6388,
    "planning_completion_tokens": 153,
    "planning_total_tokens": 6541,
    "pattern_prompt_tokens": 10327,
    "pattern_completion_tokens": 357,
    "pattern_total_tokens": 10684,
    "assembler_prompt_tokens": 5251,
    "assembler_completion_tokens": 393,
    "assembler_total_tokens": 5644,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/54",
    "natural_language_question": "Proteins with binding sites for ligands similar to heme",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT \n  ?protein\n  ?mnemonic\n  ?proteinName\n  ?ligandSimilarityScore\n  ?ligand\nWHERE {\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n    ?ssc sachem:compound ?ligand; \n      sachem:score ?ligandSimilarityScore ;\n      sachem:similaritySearch ?sss .\n        # Smiles of Heme\n    ?sss    sachem:query \"CC1=C(CCC([O-])=O)C2=[N+]3C1=Cc1c(C)c(C=C)c4C=C5C(C)=C(C=C)C6=[N+]5[Fe-]3(n14)n1c(=C6)c(C)c(CCC([O-])=O)c1=C2\";\n      sachem:cutoff \"8e-1\"^^xsd:double ;\n      sachem:aromaticityMode sachem:aromaticityDetect ;\n      sachem:similarityRadius 1 ;\n      sachem:tautomerMode sachem:ignoreTautomers .\n  }\n  ?protein up:mnemonic ?mnemonic ;\n    up:recommendedName/up:fullName ?proteinName ;\n    up:annotation ?annotation .\n  ?annotation a up:Binding_Site_Annotation ;\n      up:ligand/rdfs:subClassOf ?ligand .\n}\nORDER BY DESC(?ligandSimilarityScore)",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/54_binding_sites_for_ligands_similar_to_heme_sachem.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?protein ?proteinName ?ligand ?ligandName ?chebi\nWHERE {\n  # UniProt part: Find proteins with binding site annotations and link them to ChEBI ligands\n  ?protein a up:Protein .\n  OPTIONAL { ?protein up:recommendedName/up:fullName ?proteinName . } # Get the full recommended name of the protein\n  \n  ?protein up:annotation ?bindingSiteAnnotation .\n  ?bindingSiteAnnotation a up:Binding_Site_Annotation .\n  ?bindingSiteAnnotation up:ligand ?ligand .\n  ?ligand rdfs:subClassOf ?chebi . # ?chebi serves as the join variable with the ChEBI service\n  OPTIONAL { ?ligand rdfs:label ?ligandName . } # Get the label (name) of the ligand\n\n  # ChEBI part: Use the IDSM service to find compounds similar to Heme (CHEBI:16460)\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n    # The SMILES string for Heme (CHEBI:16460) is used for similarity search\n    BIND(\"CCC1=C(C2=C(C3=C(C(=C(C4=C(C(=C(C(=N4)C=C)C)C=C)N3)C)C=C)N2)C(=O)CCC1\" AS ?hemeSmiles)\n    \n    ?chebi sachem:similarCompoundSearch [\n      sachem:query ?hemeSmiles\n    ] .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "faaed3bc-5f9c-427d-9025-6931e7be44fb",
    "evaluation_timestamp": "2025-05-27T20:44:24.978126",
    "question_understanding_prompt_tokens": 250,
    "question_understanding_completion_tokens": 29,
    "question_understanding_total_tokens": 279,
    "planning_prompt_tokens": 5672,
    "planning_completion_tokens": 183,
    "planning_total_tokens": 5855,
    "pattern_prompt_tokens": 15552,
    "pattern_completion_tokens": 348,
    "pattern_total_tokens": 15900,
    "assembler_prompt_tokens": 3884,
    "assembler_completion_tokens": 483,
    "assembler_total_tokens": 4367,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "QueryBadFormed: A bad request has been sent to the endpoint: probably the SPARQL query is badly formed."
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/43",
    "natural_language_question": "Connect patents cited in UniProtKB with those in the patent database at EPO via publication number, whose grant date is more than twenty years in the past.",
    "ground_truth_query": "PREFIX patent: <http://data.epo.org/linked-data/def/patent/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?grantDate ?patent ?application ?applicationNo\nWHERE\n{\n    ?citation a up:Patent_Citation ;\n  skos:exactMatch ?patent .\n  BIND(SUBSTR(STR(?patent), 35) AS ?applicationNo)\n  BIND(SUBSTR(STR(?patent), 33, 2) AS ?countryCode)\n  SERVICE <https://data.epo.org/linked-data/query>{\n    ?publication patent:publicationNumber ?applicationNo ;\n      patent:application ?application .\n    ?application patent:grantDate ?grantDate .\n  }\n  BIND((year(now()) - 20) AS ?thisYearMinusTwenty)\n  BIND(year(?grantDate) AS ?grantYear)\n  FILTER(?grantYear < ?thisYearMinusTwenty)\n} ORDER BY ?grantYear",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://data.epo.org/linked-data/query"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/43_patents_used_in_uniprot_granted_twenty_years_in_the_past.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX patent: <http://data.epo.org/linked-data/def/patent/>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT DISTINCT ?citation ?patent ?application ?applicationNo ?grantDate\nWHERE\n{\n  # Part 1: Get patent citations from UniProtKB\n  ?citation a up:Patent_Citation ;\n            skos:exactMatch ?patent .\n\n  # Filter for European patents, as EPO is the target patent database\n  FILTER(CONTAINS(STR(?patent), 'EP'))\n\n  # Extract the publication number from the UniProt patent URI\n  # The example suggests the publication number starts at character 35 of the URI string.\n  BIND(SUBSTR(STR(?patent), 35) AS ?applicationNo)\n\n  # Part 2: Federate with the EPO patent database\n  SERVICE <https://data.epo.org/linked-data/query> {\n    # Find the patent application in EPO using the extracted publication number\n    ?application patent:publicationNumber ?applicationNo .\n\n    # Get the grant date of the patent\n    ?application patent:grantDate ?grantDate .\n\n    # Calculate the date twenty years ago from today\n    BIND(NOW() - \"P20Y\"^^xsd:duration AS ?twentyYearsAgo)\n\n    # Filter for patents whose grant date is more than twenty years in the past\n    FILTER (?grantDate < ?twentyYearsAgo)\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "e2e2e188-7e8b-422b-907f-c86fa510ebb3",
    "evaluation_timestamp": "2025-05-27T20:46:37.212925",
    "question_understanding_prompt_tokens": 270,
    "question_understanding_completion_tokens": 47,
    "question_understanding_total_tokens": 317,
    "planning_prompt_tokens": 4535,
    "planning_completion_tokens": 144,
    "planning_total_tokens": 4679,
    "pattern_prompt_tokens": 0,
    "pattern_completion_tokens": 0,
    "pattern_total_tokens": 0,
    "assembler_prompt_tokens": 3052,
    "assembler_completion_tokens": 395,
    "assembler_total_tokens": 3447,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/45",
    "natural_language_question": "Retrieve drugs that target human enzymes involved in sterol metabolism (federated query with WikiData and Rhea).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX chebihash: <http://purl.obolibrary.org/obo/chebi#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n\nSELECT DISTINCT ?protein ?proteinFullName ?wikiChemical ?wikiChemicalLabel ?medicalConditionTreatedLabel\nWHERE {\n  # ChEBI: retrieve members of the ChEBI class ChEBI:15889 (sterol)\n  # Rhea: retrieve the reactions involving these ChEBI as participants\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?reaction rdfs:subClassOf rh:Reaction ;\n      rh:status rh:Approved ;\n      rh:side ?reactionSide .\n    ?reactionSide\n      rh:contains ?participant .\n    ?participant rh:compound ?compound\n    {\n      ?compound rh:chebi ?chebi .\n      ?chebi (rdfs:subClassOf)+ CHEBI:15889\n    } UNION {\n      ?compound rh:chebi ?chebi .\n      ?chebi2 rdfs:subClassOf ?chebiRestriction .\n      ?chebiRestriction\n\t\ta owl:Restriction ;\n\t\towl:onProperty chebihash:has_major_microspecies_at_pH_7_3 ;\n\t\towl:someValuesFrom ?chebi .\n      ?chebi2 (rdfs:subClassOf)+ CHEBI:15889\n    }\n  }\n  # UniProt: retrieve the human (taxid:9606) enzymes catalyzing these Rhea reactions\n  ?ca up:catalyzedReaction  ?reaction .\n  ?a up:catalyticActivity  ?ca .\n  ?proteinIRI  up:annotation ?a ;\n    up:organism taxon:9606 ;\n    up:recommendedName ?proteinRecName .\n  ?proteinRecName up:fullName ?proteinFullName .\n  # Find drugs in wikidata that interact with the UniProt Proteins\n  BIND (SUBSTR(STR(?proteinIRI), STRLEN(STR(uniprotkb:))+1) AS ?protein)\n  SERVICE <https://query.wikidata.org/sparql> {\n    ?wp wdt:P352  ?protein .\n    ?wikiChemical wdt:P129 ?wp . # Physically interacts with\n    ?wikiChemical rdfs:label ?wikiChemicalLabel .\n    ?wikiChemical wdt:P2175 ?wmc . # Medical conndition treated\n    ?wmc rdfs:label ?medicalConditionTreatedLabel .\n    FILTER(lang(?medicalConditionTreatedLabel) = 'en')\n    FILTER(lang(?wikiChemicalLabel) = 'en')\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://query.wikidata.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/45_drugs_targeting_human_sterol_metabolism_enzymes.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?enzyme ?enzymeName ?chemblEntry ?rheaReaction\nWHERE {\n  # UniProt part: Find human enzymes linked to ChEMBL and catalyzing a reaction\n  ?enzyme up:organism taxon:9606 . # Identify human enzymes\n  ?enzyme up:annotation/up:catalyticActivity ?catalyticActivity .\n  ?catalyticActivity up:catalyzedReaction ?rheaReaction . # Link enzyme to the Rhea reaction it catalyzes\n  ?enzyme rdfs:seeAlso ?chemblEntry .\n  ?chemblEntry up:database <http://purl.uniprot.org/database/ChEMBL> . # Identify associated ChEMBL entries (potential drugs/compounds)\n  OPTIONAL { ?enzyme up:recommendedName/up:fullName ?enzymeName . } # Get the full name of the enzyme for better readability\n\n  # Rhea part: Find reactions involving sterol metabolism\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rheaReaction rdfs:subClassOf rh:Reaction . # Ensure it's a valid Rhea reaction\n    ?rheaReaction rh:side/rh:contains/rh:compound ?compound .\n    ?compound rh:chebi ?chebi .\n    ?chebi rdfs:subClassOf* CHEBI:15889 . # Filter for compounds that are sterols (CHEBI:15889) or their subclasses\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "9ca032f6-4dec-4121-b1ea-ce66b25d774a",
    "evaluation_timestamp": "2025-05-27T20:47:41.275452",
    "question_understanding_prompt_tokens": 257,
    "question_understanding_completion_tokens": 28,
    "question_understanding_total_tokens": 285,
    "planning_prompt_tokens": 6618,
    "planning_completion_tokens": 162,
    "planning_total_tokens": 6780,
    "pattern_prompt_tokens": 10037,
    "pattern_completion_tokens": 350,
    "pattern_total_tokens": 10387,
    "assembler_prompt_tokens": 5102,
    "assembler_completion_tokens": 445,
    "assembler_total_tokens": 5547,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/42",
    "natural_language_question": "Connect patents cited in UniProtKB with those in the patent database at EPO via publication number.",
    "ground_truth_query": "PREFIX patent: <http://data.epo.org/linked-data/def/patent/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?citation ?patent ?application ?applicationNo\nWHERE\n{\n  ?citation a up:Patent_Citation ;\n    skos:exactMatch ?patent .\n  FILTER(CONTAINS(STR(?patent), 'EP'))\n  BIND(SUBSTR(STR(?patent), 35) AS ?applicationNo)\n  SERVICE <https://data.epo.org/linked-data/query>{\n    ?application patent:publicationNumber ?applicationNo\n  }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://data.epo.org/linked-data/query"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/42_connect_patents_to_epo.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX patent: <http://data.epo.org/linked-data/def/patent/>\n\nSELECT ?uniprotCitation ?uniprotPatentIRI ?publicationNumber ?epoPatentIRI ?epoApplication\nWHERE\n{\n  # UniProtKB patterns to find patent citations and extract the publication number\n  ?uniprotCitation a up:Patent_Citation ;\n                   skos:exactMatch ?uniprotPatentIRI .\n\n  # Extract the publication number from the UniProt patent IRI.\n  # Based on the example, the publication number starts at the 35th character of the IRI.\n  BIND(SUBSTR(STR(?uniprotPatentIRI), 35) AS ?publicationNumber)\n\n  # Federate with the EPO endpoint to find matching patents\n  SERVICE <https://data.epo.org/linked-data/query>\n  {\n    # Find EPO patents that have the same publication number\n    ?epoPatentIRI patent:publicationNumber ?publicationNumber ;\n                  patent:application ?epoApplication .\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "52c32c71-4f96-49b1-9afd-81233578e996",
    "evaluation_timestamp": "2025-05-27T20:49:36.263165",
    "question_understanding_prompt_tokens": 254,
    "question_understanding_completion_tokens": 35,
    "question_understanding_total_tokens": 289,
    "planning_prompt_tokens": 4936,
    "planning_completion_tokens": 131,
    "planning_total_tokens": 5067,
    "pattern_prompt_tokens": 7561,
    "pattern_completion_tokens": 194,
    "pattern_total_tokens": 7755,
    "assembler_prompt_tokens": 3740,
    "assembler_completion_tokens": 293,
    "assembler_total_tokens": 4033,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/67_draft_human_metabolome",
    "natural_language_question": "Generate a draft human metabolome",
    "ground_truth_query": "PREFIX chebislash: <http://purl.obolibrary.org/obo/chebi/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n?uniprot ?mnemonic ?rhea ?chebi ?smiles ?inchiKey\nWHERE\n{\n  ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea ;\n        up:organism taxon:9606 ;\n        up:mnemonic ?mnemonic .\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n\t?rhea rh:side/rh:contains/rh:compound ?compound .\n    ?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?chebi .\n   }\n   ?chebi chebislash:smiles ?smiles ;\n          chebislash:inchikey ?inchiKey .\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/67_draft_human_metabolome.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX keywords: <http://purl.uniprot.org/keywords/>\nPREFIX ec: <http://purl.uniprot.org/enzyme/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT\n  ?chebi\n  ?chebiLabel\n  ?reaction\n  ?ecNumber\n  ?protein\n  ?ensemblTranscript\n  ?ensemblGene\nWHERE {\n  # UniProt: Find human enzymes and their EC numbers\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein up:reviewed true .\n    ?protein up:organism taxon:9606 . # Human\n    ?protein up:classifiedWith keywords:1185 . # Enzyme\n\n    # Link protein to EC number (various ways)\n    { ?protein up:enzyme ?ecNumber . }\n    UNION\n    { ?protein up:domain/up:enzyme ?ecNumber . }\n    UNION\n    { ?protein up:component/up:enzyme ?ecNumber . }\n\n    # Optional: Get Ensembl gene/transcript info for context\n    ?protein rdfs:seeAlso ?ensemblTranscript .\n    ?ensemblTranscript a up:Transcript_Resource .\n    ?ensemblTranscript up:database <http://purl.uniprot.org/database/Ensembl> .\n    ?ensemblTranscript up:transcribedFrom ?ensemblGene .\n  }\n\n  # Rhea: Find reactions catalyzed by the identified EC numbers and their associated compounds (metabolites)\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:ec ?ecNumber . # Join with UniProt via EC number\n  ?reaction rh:side ?reactionSide .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi . # Get the ChEBI identifier for the compound\n  OPTIONAL { ?chebi rdfs:label ?chebiLabel . } # Get the label for the ChEBI compound\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "87300c15-31a8-43da-91c9-923533e4017b",
    "evaluation_timestamp": "2025-05-27T20:50:44.605218",
    "question_understanding_prompt_tokens": 247,
    "question_understanding_completion_tokens": 20,
    "question_understanding_total_tokens": 267,
    "planning_prompt_tokens": 5596,
    "planning_completion_tokens": 131,
    "planning_total_tokens": 5727,
    "pattern_prompt_tokens": 9850,
    "pattern_completion_tokens": 359,
    "pattern_total_tokens": 10209,
    "assembler_prompt_tokens": 5011,
    "assembler_completion_tokens": 587,
    "assembler_total_tokens": 5598,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.41475444992494104,
    "result_eval_precision": 0.6961843052555795,
    "result_eval_recall": 0.2953573610262676,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/36",
    "natural_language_question": "Find the orthologous proteins for UniProtKB entry P05067 using the <a href=\"http://www.orthod.org\">OrthoDB database</a>",
    "ground_truth_query": "PREFIX orthodb: <http://purl.orthodb.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  ?protein\n  ?orthoGroup\n  ?scientificName\n  ?functionComment\n  ?prefferedGeneName\n  ((STRLEN(?value) - ?medianLength) as ?deviationFromMedianLength)\nWHERE\n{\n  uniprotkb:P05067 a up:Protein ;\n        up:organism/up:scientificName ?scientificName ;\n        rdfs:seeAlso ?orthoGroup ;\n        up:encodedBy/skos:prefLabel ?prefferedGeneName ;\n          up:sequence/rdf:value ?value .\n  OPTIONAL {\n    ?protein up:annotation ?functionAnnotation .\n    ?functionAnnotation a up:Function_Annotation ;\n      rdfs:comment ?functionComment .\n  }\n  SERVICE <https://sparql.orthodb.org/sparql>{\n    ?orthoGroup orthodb:ogMedianProteinLength ?medianLength .\n    ?orthoGroup orthodb:hasMember ?xref .\n    ?xref orthodb:xref/orthodb:xrefResource uniprotkb:P05067 .\n  }\n}\nLIMIT 985915",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.orthodb.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/36_orthologous_proteins_via_orthodb.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX db: <http://purl.uniprot.org/database/>\n\nSELECT DISTINCT ?orthologousProtein ?orthoDBIdentifier\nWHERE {\n  # Step 1: Find the OrthoDB group identifier associated with the UniProtKB entry P05067.\n  # The previous failed patterns indicated that while up:dbReference and up:database are correct,\n  # the specific ASK query structure or the expectation of a direct 'ortholog' property for OrthoDB\n  # might have been the issue. UniProt uses up:dbReference to link to external database entries,\n  # and up:identifier to store the external ID.\n  uniprotkb:P05067 up:dbReference ?ref1 .\n  ?ref1 up:database db:OrthoDB .\n  ?ref1 up:identifier ?orthoDBIdentifier .\n\n  # Step 2: Find all other UniProtKB proteins that are also associated with the same OrthoDB group identifier.\n  ?orthologousProtein up:dbReference ?ref2 .\n  ?ref2 up:database db:OrthoDB .\n  ?ref2 up:identifier ?orthoDBIdentifier .\n\n  # Step 3: Exclude the original UniProtKB entry P05067 from the list of orthologous proteins.\n  FILTER (?orthologousProtein != uniprotkb:P05067)\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "6cba7f46-e51e-4cd8-ab9f-fab0cbcac166",
    "evaluation_timestamp": "2025-05-27T20:52:39.102821",
    "question_understanding_prompt_tokens": 276,
    "question_understanding_completion_tokens": 44,
    "question_understanding_total_tokens": 320,
    "planning_prompt_tokens": 4917,
    "planning_completion_tokens": 118,
    "planning_total_tokens": 5035,
    "pattern_prompt_tokens": 5754,
    "pattern_completion_tokens": 242,
    "pattern_total_tokens": 5996,
    "assembler_prompt_tokens": 2859,
    "assembler_completion_tokens": 369,
    "assembler_total_tokens": 3228,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/60",
    "natural_language_question": "Find human proteins that catalyze reactions where substrates or product have a <a href=\"https://www.ebi.ac.uk/chebi/searchId.do?chebiId=CHEBI:35516\">Cholestane skeleton</a>",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  DISTINCT\n    ?protein\n    ?disease\n    ?rhea\n    ?chebi\n    ?omim\nWHERE {\n    # Find complete ChEBIs with a Cholestane skeleton, via the Czech Elixir node IDSM Sachem chemical substructure search.\n    SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n      ?chebi sachem:substructureSearch [\n        sachem:query\n\"[C@]12(CCC3CCCC[C@]3(C)[C@@]1([H])CC[C@]1(C)[C@@]([H])([C@@](C)([H])CCCC(C)C)CC[C@@]21[H])[H]\"\n].\n   }\n   # Use the fact that UniProt catalytic activities are annotated using Rhea \n   # Mapping the found ChEBIs to Rhea reactions\n   SERVICE <https://sparql.rhea-db.org/sparql>{\n     ?rhea rh:side/rh:contains/rh:compound/rdfs:subClassOf ?chebi .\n   }\n   # Match the found Rhea reactions with human UniProtKB proteins\n   ?protein up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n   ?protein up:organism taxon:9606 .\n   # Find only those human entries that have an annotated related disease, and optionaly map these to OMIM\n   ?protein up:annotation/up:disease ?disease .\n   OPTIONAL {\n     ?disease rdfs:seeAlso ?omim .\n     ?omim up:database <http://purl.uniprot.org/database/MIM>\n   }\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/60_enzymes_working_on_substrate_with_Cholestene_backbone.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?protein ?rhea ?chebi\nWHERE {\n  # UniProt part: Find human proteins that catalyze reactions\n  ?protein up:organism taxon:9606 . # Filter for human proteins (Taxonomy ID 9606)\n  ?protein up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea . # Link protein to the Rhea reaction it catalyzes\n\n  # Rhea part: Find reactions where substrates or products have a Cholestane skeleton\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:side/rh:contains/rh:compound ?compound . # Find compounds involved in the reaction ?rhea\n    ?compound rh:chebi ?chebi . # Get the ChEBI identifier for the compound\n    ?chebi rdfs:subClassOf+ CHEBI:35516 . # Ensure the ChEBI compound is a subclass (directly or indirectly) of Cholestane skeleton (CHEBI:35516)\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "c27d45f2-edf3-4b10-9e96-7eb950fd89cd",
    "evaluation_timestamp": "2025-05-27T20:54:42.499272",
    "question_understanding_prompt_tokens": 296,
    "question_understanding_completion_tokens": 38,
    "question_understanding_total_tokens": 334,
    "planning_prompt_tokens": 9922,
    "planning_completion_tokens": 136,
    "planning_total_tokens": 10058,
    "pattern_prompt_tokens": 21935,
    "pattern_completion_tokens": 418,
    "pattern_total_tokens": 22353,
    "assembler_prompt_tokens": 7219,
    "assembler_completion_tokens": 355,
    "assembler_total_tokens": 7574,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/70_enzymes_interacting_with_molecules_similar_to_dopamine",
    "natural_language_question": "Look for enzymes catalyzing reactions with molecules similar to dopamine.",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  ?protein\n  ?rhea\n  ?chebi\nWHERE {\n  # Use the smiles of dopamine CHEBI:18243\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi>{\n    ?chebi sachem:similarCompoundSearch [\n      sachem:query \"NCCc1ccc(O)c(O)c1\" ] .\n  }\n  GRAPH<https://sparql.rhea-db.org/rhea>{\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n    ?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?chebi .\n  }\n  ?protein up:reviewed true ;\n    up:annotation ?caa .\n  ?caa up:catalyticActivity/up:catalyzedReaction ?rhea .\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://idsm.elixir-czech.cz/sparql/endpoint/chebi"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/70_enzymes_interacting_with_molecules_similar_to_dopamine.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?protein ?rhea ?chebi ?compound\nWHERE {\n  # Step 1: Find ChEBI compounds similar to dopamine using the Sachem similarity search service.\n  # The SMILES string for dopamine (CHEBI:18243) is \"NCCc1ccc(O)c(O)c1\".\n  SERVICE <https://idsm.elixir-czech.cz/sparql/endpoint/chebi> {\n    ?chebi sachem:similarCompoundSearch [\n      sachem:query \"NCCc1ccc(O)c(O)c1\"\n    ] .\n  }\n\n  # Step 2: Link the found ChEBI compounds to Rhea reactions.\n  # This service block runs on the federated endpoint https://sparql.rhea-db.org/sparql.\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n    # The compound can be linked to its ChEBI identifier through various properties.\n    ?compound (rh:chebi|rh:reactivePart/rh:chebi|rh:underlyingChebi/rh:chebi) ?chebi .\n  }\n\n  # Step 3: Find proteins (enzymes) in UniProt that catalyze these Rhea reactions.\n  # This part runs on the primary endpoint https://sparql.uniprot.org/sparql.\n  ?protein up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  ?protein a up:Protein . # Ensure the result is a protein entry.\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "ec0eeedf-f21b-4971-8572-f07752312935",
    "evaluation_timestamp": "2025-05-27T20:56:08.817263",
    "question_understanding_prompt_tokens": 250,
    "question_understanding_completion_tokens": 26,
    "question_understanding_total_tokens": 276,
    "planning_prompt_tokens": 6002,
    "planning_completion_tokens": 114,
    "planning_total_tokens": 6116,
    "pattern_prompt_tokens": 8657,
    "pattern_completion_tokens": 197,
    "pattern_total_tokens": 8854,
    "assembler_prompt_tokens": 4262,
    "assembler_completion_tokens": 474,
    "assembler_total_tokens": 4736,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.054502160684363705,
    "result_eval_precision": 0.02801450589301904,
    "result_eval_recall": 1.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/38",
    "natural_language_question": "For the human entry P05067 (Amyloid-beta precursor protein) find the gene start ends in WikiData",
    "ground_truth_query": "PREFIX p: <http://www.wikidata.org/prop/>\nPREFIX pq: <http://www.wikidata.org/prop/qualifier/>\nPREFIX ps: <http://www.wikidata.org/prop/statement/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n\n\nSELECT \n\t?protein \n\t?begin\n\t?end\n\t?chromosome\n\t?assembly\nWHERE {\n    {\n        BIND(uniprotkb:P05067 AS ?proteinIRI)\n        BIND (SUBSTR(STR(?proteinIRI), STRLEN(STR(uniprotkb:))+1) AS ?protein)\n    }\n    SERVICE <https://query.wikidata.org/sparql> {\n        ?wp wdt:P352 ?protein ;\n            wdt:P702 ?wg . \n        ?wg p:P644   ?wgss .\n        ?wgss ps:P644        ?begin ;\n          pq:P1057/wdt:P1813 ?chromosome ;\n          pq:P659/rdfs:label ?assembly .\n        ?wg p:P645 ?wgse .\n        ?wgse ps:P645        ?end ;\n          pq:P1057/wdt:P1813 ?chromosome ;\n          pq:P659/rdfs:label ?assembly .\n        FILTER(lang(?assembly) = \"en\")\n  } \n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://query.wikidata.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/38_find_gene_region_in_wikidata_for_known_entry.ttl",
    "predicted_query": "# https://query.wikidata.org/sparql\nPREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n\nSELECT ?gene ?geneLabel ?geneStart ?geneEnd ?uniprotGeneName\nWHERE {\n  # Part 1: Retrieve gene start and end positions from Wikidata\n  # Find the Wikidata item for the protein using its UniProt ID (P05067)\n  ?wikidataProtein wdt:P351 \"P05067\" .\n\n  # Find the gene that encodes this protein in Wikidata\n  # (wdt:P688 is 'encodes', used from gene to protein)\n  ?gene wdt:P688 ?wikidataProtein .\n\n  # Get the gene start and end positions from Wikidata\n  # (wdt:P644 is 'start position', wdt:P645 is 'end position')\n  ?gene wdt:P644 ?geneStart .\n  ?gene wdt:P645 ?geneEnd .\n\n  # Optional: Get the English label for the gene for better readability\n  OPTIONAL {\n    ?gene rdfs:label ?geneLabel .\n    FILTER (LANG(?geneLabel) = \"en\")\n  }\n\n  # Part 2: Federate with UniProt to get additional information\n  # This block demonstrates federation and integrates the UniProt-related building blocks.\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    # Identify the UniProt protein entry P05067\n    uniprotkb:P05067 a up:Protein .\n\n    # Get the preferred gene name associated with this UniProt protein\n    # This uses the pattern from the examples: ?protein up:encodedBy/skos:prefLabel ?prefferedGeneName\n    # The previously failed pattern 'uniprotkb:P05067 up:encodedBy ?gene .' is incorporated here\n    # by extending it to get the preferred label of the gene encoded by the protein.\n    uniprotkb:P05067 up:encodedBy/skos:prefLabel ?uniprotGeneName .\n  }\n}",
    "predicted_endpoint": "https://query.wikidata.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": true,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "39d8c370-c0d1-4108-abd0-1577cfd4c503",
    "evaluation_timestamp": "2025-05-27T20:58:02.171884",
    "question_understanding_prompt_tokens": 261,
    "question_understanding_completion_tokens": 50,
    "question_understanding_total_tokens": 311,
    "planning_prompt_tokens": 5338,
    "planning_completion_tokens": 186,
    "planning_total_tokens": 5524,
    "pattern_prompt_tokens": 14967,
    "pattern_completion_tokens": 298,
    "pattern_total_tokens": 15265,
    "assembler_prompt_tokens": 3835,
    "assembler_completion_tokens": 604,
    "assembler_total_tokens": 4439,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/117_biosodafrontend_glioblastoma_orthologs_rat",
    "natural_language_question": "Which are the proteins associated with glioblastoma and the orthologs expressed in the rat brain?",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX obo: <http://purl.obolibrary.org/obo/>\nPREFIX orth: <http://purl.org/net/orth#>\nPREFIX sio: <http://semanticscience.org/resource/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX lscr: <http://purl.org/lscr#>\nPREFIX genex: <http://purl.org/genex#>\nSELECT DISTINCT ?protein ?orthologous_protein ?gene ?annotation_text WHERE {\n  {\n  \tSELECT ?protein ?annotation_text WHERE {\n      ?protein a up:Protein ;\n          up:organism taxon:9606 ;\n          up:annotation ?annotation .\n      ?annotation rdfs:comment ?annotation_text .\n      ?annotation a up:Disease_Annotation .\n      FILTER CONTAINS (?annotation_text, \"glioblastoma\")\n    }\n  }\n  SERVICE <https://sparql.omabrowser.org/sparql/> {\n    SELECT ?orthologous_protein ?protein ?gene WHERE {\n    ?protein_OMA a orth:Protein .\n    ?orthologous_protein a orth:Protein .\n    ?cluster a orth:OrthologsCluster .\n    ?cluster orth:hasHomologousMember ?node1 .\n    ?cluster\n    orth:hasHomologousMember ?node2 .\n    ?node2 orth:hasHomologousMember* ?protein_OMA .\n    ?node1 orth:hasHomologousMember* ?orthologous_protein .\n    ?orthologous_protein orth:organism/obo:RO_0002162 taxon:10116 . # rattus norvegicus\n    ?orthologous_protein sio:SIO_010079 ?gene .\n    ?protein_OMA lscr:xrefUniprot ?protein .\n    FILTER(?node1 != ?node2)\n\t\t}\n\t}\n  SERVICE <https://www.bgee.org/sparql/> {\n    ?gene genex:isExpressedIn ?a .\n    ?a rdfs:label \"brain\" .\n    ?gene orth:organism ?s . \n    ?s obo:RO_0002162 taxon:10116.\n\t}\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql",
    "federates_with": [
      "https://sparql.omabrowser.org/sparql/",
      "https://www.bgee.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/117_biosodafrontend_glioblastoma_orthologs_rat.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql/\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX orthodb: <http://purl.orthodb.org/>\n\nSELECT DISTINCT ?protein ?proteinName ?ratOrtholog ?ratOrthologName ?ratGeneName\nWHERE {\n  # 1. Find proteins associated with glioblastoma\n  ?protein up:annotation ?diseaseAnnotation .\n  ?diseaseAnnotation up:disease ?glioblastomaDisease .\n  ?glioblastomaDisease skos:prefLabel \"Glioblastoma\" .\n  OPTIONAL { ?protein up:recommendedName/up:fullName ?proteinName . } # Get name of the human protein\n\n  # 2. Find orthologous groups for these proteins\n  ?protein rdfs:seeAlso ?orthoGroup . # Link UniProt protein to OrthoDB group\n\n  # 3. Find members of the orthologous group that are from Rattus norvegicus (rat)\n  SERVICE <https://sparql.orthodb.org/sparql> {\n    ?orthoGroup orthodb:hasMember ?orthoMember .\n    ?orthoMember orthodb:xref/orthodb:xrefResource ?ratOrtholog . # This links back to UniProt URI for the ortholog\n  }\n\n  # 4. Filter the orthologs to be from \"Rattus norvegicus\" (rat)\n  ?ratOrtholog up:organism ?ratOrganism .\n  ?ratOrganism up:scientificName \"Rattus norvegicus\" .\n\n  # 5. Filter for expression in brain tissue\n  ?ratOrtholog up:annotation ?expressionAnnotation .\n  ?expressionAnnotation a up:Expression_Annotation .\n  ?expressionAnnotation up:tissue ?tissue .\n  ?tissue skos:prefLabel \"Brain\" . # Assuming \"Brain\" is the exact label for brain tissue in UniProt\n\n  # 6. Get additional details for the rat ortholog\n  OPTIONAL { ?ratOrtholog up:recommendedName/up:fullName ?ratOrthologName . }\n  OPTIONAL { ?ratOrtholog up:encodedBy/skos:prefLabel ?ratGeneName . }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "3b210cb4-6fdd-4538-9bbe-c5ae299f67fb",
    "evaluation_timestamp": "2025-05-27T20:58:49.124140",
    "question_understanding_prompt_tokens": 257,
    "question_understanding_completion_tokens": 34,
    "question_understanding_total_tokens": 291,
    "planning_prompt_tokens": 6025,
    "planning_completion_tokens": 148,
    "planning_total_tokens": 6173,
    "pattern_prompt_tokens": 0,
    "pattern_completion_tokens": 0,
    "pattern_total_tokens": 0,
    "assembler_prompt_tokens": 3881,
    "assembler_completion_tokens": 546,
    "assembler_total_tokens": 4427,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/116_biosodafrontend_rabit_mouse_orthologs",
    "natural_language_question": "Rabbit's proteins encoded by genes that are orthologous to Mouse's HBB-Y gene and their cross reference links to Uniprot",
    "ground_truth_query": "PREFIX lscr: <http://purl.org/lscr#>\nPREFIX orth: <http://purl.org/net/orth#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX obo: <http://purl.obolibrary.org/obo/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?PROTEIN_1 ?PROTEIN_2 ?UNIPROT_XREF_1 ?UNIPROT_XREF_2 WHERE {\n\t?taxon_1 up:commonName 'Mouse' .\n\t?taxon_2 up:commonName 'Rabbit' .\n\tSERVICE <https://sparql.omabrowser.org/sparql/> {\n\t\t?cluster a orth:OrthologsCluster .\n\t\t?cluster orth:hasHomologousMember ?node1 .\n\t\t?cluster orth:hasHomologousMember ?node2 .\n\t\t?node2 orth:hasHomologousMember* ?PROTEIN_2 .\n\t\t?node1 orth:hasHomologousMember* ?PROTEIN_1 .\n\t\t?PROTEIN_1 a orth:Protein .\n\t\t?PROTEIN_1 orth:organism/obo:RO_0002162 ?taxon_1 ;\n\t\t\trdfs:label 'HBB-Y' ;\n\t\t\tlscr:xrefUniprot ?UNIPROT_XREF_1 .\n\t\t?PROTEIN_2 a orth:Protein .\n\t\t?PROTEIN_2 orth:organism/obo:RO_0002162 ?taxon_2 .\n\t\t?PROTEIN_2 lscr:xrefUniprot ?UNIPROT_XREF_2 .\n\t\tFILTER ( ?node1 != ?node2 )\n\t}\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql",
    "federates_with": [
      "https://sparql.omabrowser.org/sparql/"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/116_biosodafrontend_rabit_mouse_orthologs.ttl",
    "predicted_query": "# Primary endpoint: https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX orthodb: <http://purl.orthodb.org/>\n\nSELECT DISTINCT ?rabbitProtein ?rabbitGene ?mouseProtein ?mouseGene ?orthoGroup\nWHERE {\n  # Part 1: Find Rabbit proteins and their associated genes and orthogroups in UniProt\n  ?rabbitProtein a up:Protein .\n  ?rabbitProtein up:organism taxon:9986 . # Rabbit taxonomy ID (Oryctolagus cuniculus)\n  ?rabbitProtein up:encodedBy ?rabbitGene .\n  ?rabbitProtein rdfs:seeAlso ?orthoGroup . # Link to the OrthoDB orthogroup\n\n  # Part 2: Find Mouse proteins encoded by the \"HBB-Y\" gene and their associated orthogroups in UniProt\n  ?mouseProtein a up:Protein .\n  ?mouseProtein up:organism taxon:10090 . # Mouse taxonomy ID (Mus musculus)\n  ?mouseProtein up:encodedBy ?mouseGene .\n  ?mouseGene skos:prefLabel \"HBB-Y\" . # Filter for the specific gene name \"HBB-Y\"\n  ?mouseProtein rdfs:seeAlso ?orthoGroup . # Crucially, ensure it's the SAME orthogroup as the rabbit protein\n\n  # Part 3: Federate with OrthoDB to confirm that the identified orthogroup\n  # indeed contains both the rabbit and mouse proteins as members.\n  SERVICE <https://sparql.orthodb.org/sparql> {\n    # The ?orthoGroup variable is the common join point between UniProt and OrthoDB.\n    # We verify that this orthogroup contains a member that cross-references back to ?rabbitProtein\n    ?orthoGroup orthodb:hasMember ?rabbitMember .\n    ?rabbitMember orthodb:xref/orthodb:xrefResource ?rabbitProtein .\n\n    # And that the same orthogroup contains a member that cross-references back to ?mouseProtein\n    ?orthoGroup orthodb:hasMember ?mouseMember .\n    ?mouseMember orthodb:xref/orthodb:xrefResource ?mouseProtein .\n  }\n}",
    "predicted_endpoint": "Primary",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "4046f0d6-e16e-43c4-b9f7-104771c4be27",
    "evaluation_timestamp": "2025-05-27T21:09:36.867517",
    "question_understanding_prompt_tokens": 264,
    "question_understanding_completion_tokens": 49,
    "question_understanding_total_tokens": 313,
    "planning_prompt_tokens": 6017,
    "planning_completion_tokens": 164,
    "planning_total_tokens": 6181,
    "pattern_prompt_tokens": 10147,
    "pattern_completion_tokens": 221,
    "pattern_total_tokens": 10368,
    "assembler_prompt_tokens": 3324,
    "assembler_completion_tokens": 583,
    "assembler_total_tokens": 3907,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "unknown url type: 'Primary?query=%23+Primary+endpoint%3A+https%3A//sparql.uniprot.org/sparql%0APREFIX+up%3A+%3Chttp%3A//purl.uniprot.org/core/%3E%0APREFIX+taxon%3A+%3Chttp%3A//purl.uniprot.org/taxonomy/%3E%0APREFIX+rdfs%3A+%3Chttp%3A//www.w3.org/2000/01/rdf-schema%23%3E%0APREFIX+skos%3A+%3Chttp%3A//www.w3.org/2004/02/skos/core%23%3E%0APREFIX+orthodb%3A+%3Chttp%3A//purl.orthodb.org/%3E%0A%0ASELECT+DISTINCT+%3FrabbitProtein+%3FrabbitGene+%3FmouseProtein+%3FmouseGene+%3ForthoGroup%0AWHERE+%7B%0A++%23+Part+1%3A+Find+Rabbit+proteins+and+their+associated+genes+and+orthogroups+in+UniProt%0A++%3FrabbitProtein+a+up%3AProtein+.%0A++%3FrabbitProtein+up%3Aorganism+taxon%3A9986+.+%23+Rabbit+taxonomy+ID+%28Oryctolagus+cuniculus%29%0A++%3FrabbitProtein+up%3AencodedBy+%3FrabbitGene+.%0A++%3FrabbitProtein+rdfs%3AseeAlso+%3ForthoGroup+.+%23+Link+to+the+OrthoDB+orthogroup%0A%0A++%23+Part+2%3A+Find+Mouse+proteins+encoded+by+the+%22HBB-Y%22+gene+and+their+associated+orthogroups+in+UniProt%0A++%3FmouseProtein+a+up%3AProtein+.%0A++%3FmouseProtein+up%3Aorganism+taxon%3A10090+.+%23+Mouse+taxonomy+ID+%28Mus+musculus%29%0A++%3FmouseProtein+up%3AencodedBy+%3FmouseGene+.%0A++%3FmouseGene+skos%3AprefLabel+%22HBB-Y%22+.+%23+Filter+for+the+specific+gene+name+%22HBB-Y%22%0A++%3FmouseProtein+rdfs%3AseeAlso+%3ForthoGroup+.+%23+Crucially%2C+ensure+it%27s+the+SAME+orthogroup+as+the+rabbit+protein%0A%0A++%23+Part+3%3A+Federate+with+OrthoDB+to+confirm+that+the+identified+orthogroup%0A++%23+indeed+contains+both+the+rabbit+and+mouse+proteins+as+members.%0A++SERVICE+%3Chttps%3A//sparql.orthodb.org/sparql%3E+%7B%0A++++%23+The+%3ForthoGroup+variable+is+the+common+join+point+between+UniProt+and+OrthoDB.%0A++++%23+We+verify+that+this+orthogroup+contains+a+member+that+cross-references+back+to+%3FrabbitProtein%0A++++%3ForthoGroup+orthodb%3AhasMember+%3FrabbitMember+.%0A++++%3FrabbitMember+orthodb%3Axref/orthodb%3AxrefResource+%3FrabbitProtein+.%0A%0A++++%23+And+that+the+same+orthogroup+contains+a+member+that+cross-references+back+to+%3FmouseProtein%0A++++%3ForthoGroup+orthodb%3AhasMember+%3FmouseMember+.%0A++++%3FmouseMember+orthodb%3Axref/orthodb%3AxrefResource+%3FmouseProtein+.%0A++%7D%0A%7D&format=json&output=json&results=json'"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/29",
    "natural_language_question": "Use <a href=\"http://allie.dbcls.jp/\">ALLIE</a> a service for Abbreviation / Long Form in Japanese and English to search in UniProt using Japanese.",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?protein ?englishLabelStr\nWHERE {\n    SERVICE <https://data.allie.dbcls.jp/sparql>{\n        ?x rdfs:label \"アミロイド前駆体タンパク質\"@ja ;\n            rdfs:label ?englishLabel .\n        FILTER(lang(?englishLabel) = \"en\")\n    }\n    BIND (STR(?englishLabel) AS ?englishLabelStr)\n    ?protein a up:Protein .\n    {\n        ?protein (up:recommendedName|up:alternativeName) ?structuredName .\n    }\n    UNION\n    {\n        VALUES(?partType){(up:domain) (up:component)}\n            ?protein ?partType ?part .\n        ?part (up:recommendedName|up:alternativeName) ?structuredName .\n    }\n    ?structuredName ?anyKindOfName  ?englishLabelStr .\n    ?anyKindOfName rdfs:subPropertyOf up:structuredNameType .\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://data.allie.dbcls.jp/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/29_search_uniprot_in_japanese_with_allie.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?protein ?japaneseLabel ?englishLabel ?uniprotFullName\nWHERE {\n  # Step 1: Query ALLIE to get the English translation of a Japanese term.\n  SERVICE <https://data.allie.dbcls.jp/sparql> {\n    ?allie_entity rdfs:label ?japaneseLabel ;\n                  rdfs:label ?englishLabel_with_lang .\n    FILTER(lang(?japaneseLabel) = \"ja\")\n    FILTER(lang(?englishLabel_with_lang) = \"en\")\n\n    # As the user question implies searching *using* Japanese,\n    # we include a specific Japanese term for demonstration.\n    # This example term is taken from the provided context.\n    FILTER(?japaneseLabel = \"1,2,4-トリクロロベンゼン\"@ja)\n\n    # Bind the English label as a plain string (without language tag)\n    # to facilitate matching with UniProt's protein names, which are often plain literals.\n    BIND(STR(?englishLabel_with_lang) AS ?englishLabel)\n  }\n\n  # Step 2: Use the obtained English label to search for proteins in UniProt.\n  ?protein a up:Protein .\n  ?protein up:recommendedName ?recommendedName .\n  ?recommendedName up:fullName ?uniprotFullName .\n\n  # Join condition: The English label from ALLIE must match the full name of the protein in UniProt.\n  FILTER(STR(?uniprotFullName) = ?englishLabel)\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "b2703610-d39a-4a78-be36-b424beff4c38",
    "evaluation_timestamp": "2025-05-27T21:12:01.149828",
    "question_understanding_prompt_tokens": 280,
    "question_understanding_completion_tokens": 22,
    "question_understanding_total_tokens": 302,
    "planning_prompt_tokens": 4639,
    "planning_completion_tokens": 82,
    "planning_total_tokens": 4721,
    "pattern_prompt_tokens": 10562,
    "pattern_completion_tokens": 326,
    "pattern_total_tokens": 10888,
    "assembler_prompt_tokens": 3413,
    "assembler_completion_tokens": 397,
    "assembler_total_tokens": 3810,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/94_Select_all_approved_reactions_with_CHEBI_or_one_of_its_descendant_optional_UniProtKB_reviewed_EC",
    "natural_language_question": "Select all approved reactions with CHEBI:17815 (a 1,2-diacyl-sn-glycerol) or one of its descendant. Display links to UniProtKB/Swiss-Prot entries via EC numbers if the link rhea-ec exists.",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX CHEBI:<http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX up:<http://purl.uniprot.org/core/>\n\nSELECT\n  distinct\n    ?reaction\n    ?enzyme\n    (count(distinct ?protein) as ?proteinCount)\nWHERE {\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:side ?reactionSide .\n\n  OPTIONAL {?reaction rh:ec ?enzyme .\n    SERVICE <https://sparql.uniprot.org/sparql> {\n      ?protein up:reviewed true .\n      ?protein up:enzyme ?enzyme.\n    }\n  } .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi .\n  ?chebi rdfs:subClassOf* CHEBI:17815 .\n}\nGROUP BY ?reaction ?enzyme\nORDER BY ?reaction\nLIMIT 985915",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/94_Select_all_approved_reactions_with_CHEBI_or_one_of_its_descendant_optional_UniProtKB_reviewed_EC.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT DISTINCT ?reaction ?reactionEquation ?ecNumber ?uniprotEntry ?uniprotLabel\nWHERE {\n  # Find approved reactions involving CHEBI:17815 or its descendants in Rhea\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:equation ?reactionEquation .\n  ?reaction rh:side ?reactionSide .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi .\n  ?chebi rdfs:subClassOf* CHEBI:17815 .\n\n  # Optionally get the EC number from Rhea and then query UniProt\n  OPTIONAL {\n    ?reaction rh:ec ?ecNumber .\n\n    # Federate with UniProt to find proteins associated with the EC number\n    SERVICE <https://sparql.uniprot.org/sparql> {\n      ?uniprotEntry a up:Protein .\n      ?uniprotEntry up:ec ?ecNumber .\n      OPTIONAL { ?uniprotEntry rdfs:label ?uniprotLabel . } # Get the label for the UniProt entry\n    }\n  }\n}\nORDER BY ?reaction",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "c65f7f41-1b6e-4262-82a3-738ed3b781a2",
    "evaluation_timestamp": "2025-05-27T21:13:10.523440",
    "question_understanding_prompt_tokens": 294,
    "question_understanding_completion_tokens": 80,
    "question_understanding_total_tokens": 374,
    "planning_prompt_tokens": 5359,
    "planning_completion_tokens": 371,
    "planning_total_tokens": 5730,
    "pattern_prompt_tokens": 11781,
    "pattern_completion_tokens": 310,
    "pattern_total_tokens": 12091,
    "assembler_prompt_tokens": 3912,
    "assembler_completion_tokens": 385,
    "assembler_total_tokens": 4297,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 1.0,
    "result_eval_precision": 1.0,
    "result_eval_recall": 1.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/11",
    "natural_language_question": "Distribution of reactions according to the first class of the enzyme classification (federated query)",
    "ground_truth_query": "PREFIX ec: <http://purl.uniprot.org/enzyme/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n\n# Query 11\n# Retrieve the count of reactions mapped to each level (main class) of the enzyme classification\n#\n# This query mimics the Filter section of the Rhea website (Browse all reactions)\n# https://www.rhea-db.org/rhea?query=\nSELECT ?ecClass (STR(?ecName) AS ?ecClassName) (COUNT(?rhea) AS ?rheaCount)\nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    VALUES (?ecClass) { (ec:1.-.-.-)(ec:2.-.-.-)(ec:3.-.-.-)(ec:4.-.-.-)(ec:5.-.-.-) (ec:6.-.-.-) (ec:7.-.-.-)}\n    ?ecNumber rdfs:subClassOf ?ecClass .\n    ?ecClass skos:prefLabel ?ecName .\n  }\n  ?rhea rdfs:subClassOf rh:Reaction .\n  ?rhea rh:ec ?ecNumber .\n} GROUP BY ?ecClass ?ecName",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/11.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX ec: <http://purl.uniprot.org/enzyme/>\n\nSELECT\n  ?ecClass\n  (str(?ecName) as ?ecClassName)\n  (count(?reaction) as ?reactionCount)\nWHERE\n{\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    VALUES (?ecClass) { (ec:1.-.-.-)(ec:2.-.-.-)(ec:3.-.-.-)(ec:4.-.-.-)(ec:5.-.-.-) (ec:6.-.-.-) (ec:7.-.-.-) }\n    ?ecNumber rdfs:subClassOf ?ecClass .\n    ?ecClass skos:prefLabel ?ecName .\n  }\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:ec ?ecNumber .\n}\nGROUP BY ?ecClass ?ecName\nORDER BY ?ecClass",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "a662f9c7-d792-441f-9ca8-2acf7c19be9f",
    "evaluation_timestamp": "2025-05-27T21:14:02.148470",
    "question_understanding_prompt_tokens": 254,
    "question_understanding_completion_tokens": 25,
    "question_understanding_total_tokens": 279,
    "planning_prompt_tokens": 5156,
    "planning_completion_tokens": 123,
    "planning_total_tokens": 5279,
    "pattern_prompt_tokens": 8804,
    "pattern_completion_tokens": 315,
    "pattern_total_tokens": 9119,
    "assembler_prompt_tokens": 4031,
    "assembler_completion_tokens": 0,
    "assembler_total_tokens": 4031,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 1.0,
    "result_eval_precision": 1.0,
    "result_eval_recall": 1.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/109_Distribution_of_reactions_according_to_the_first_level_of_enzyme_classification",
    "natural_language_question": "Distribution of reactions according to the first level of enzyme classification",
    "ground_truth_query": "\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>\nPREFIX skos:<http://www.w3.org/2004/02/skos/core#>\n\nSELECT\n  ?ecClass\n  (str(?ecName) as ?ecClassName)\n  (count(?reaction) as ?reactionCount)\nWHERE\n{\n  SERVICE <http://sparql.uniprot.org/sparql> {\n    VALUES (?ecClass) { (ec:1.-.-.-)(ec:2.-.-.-)(ec:3.-.-.-)(ec:4.-.-.-)(ec:5.-.-.-) (ec:6.-.-.-) (ec:7.-.-.-) }\n    ?ecNumber rdfs:subClassOf ?ecClass .\n    ?ecClass skos:prefLabel ?ecName .\n  }\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:ec ?ecNumber .\n}\nGROUP BY ?ecClass ?ecName\n",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "http://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/109_Distribution_of_reactions_according_to_the_first_level_of_enzyme_classification.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX ec: <http://purl.uniprot.org/enzyme/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n\nSELECT ?ecClass (STR(?ecName) AS ?ecClassName) (COUNT(?rhea) AS ?rheaCount)\nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    VALUES (?ecClass) { (ec:1.-.-.-)(ec:2.-.-.-)(ec:3.-.-.-)(ec:4.-.-.-)(ec:5.-.-.-) (ec:6.-.-.-) (ec:7.-.-.-)}\n    ?ecNumber rdfs:subClassOf ?ecClass .\n    ?ecClass skos:prefLabel ?ecName .\n  }\n  ?rhea rdfs:subClassOf rh:Reaction .\n  ?rhea rh:ec ?ecNumber .\n}\nGROUP BY ?ecClass ?ecName\nORDER BY ?ecClass",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "6a69580d-0610-4aae-919c-392ab2f427cc",
    "evaluation_timestamp": "2025-05-27T21:15:15.504602",
    "question_understanding_prompt_tokens": 252,
    "question_understanding_completion_tokens": 27,
    "question_understanding_total_tokens": 279,
    "planning_prompt_tokens": 5123,
    "planning_completion_tokens": 125,
    "planning_total_tokens": 5248,
    "pattern_prompt_tokens": 7864,
    "pattern_completion_tokens": 297,
    "pattern_total_tokens": 8161,
    "assembler_prompt_tokens": 3960,
    "assembler_completion_tokens": 296,
    "assembler_total_tokens": 4256,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 1.0,
    "result_eval_precision": 1.0,
    "result_eval_recall": 1.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/12",
    "natural_language_question": "Select all Rhea reactions linked to protein sequences (enzymes and transporters) in UniProtKB",
    "ground_truth_query": "PREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n# Query 12\n# Select all Rhea reactions used to annotate enzyme sequences in UniProtKB\n# return the number of UniProtKB entries\n# Federated query using a service to UniProt SPARQL endpoint\n#\n# This query corresponds to the Rhea website query:\n# https://www.rhea-db.org/rhea?query=uniprot:*\n#\nSELECT ?uniprotCount ?rhea ?accession ?equation \nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> { \n  \tSELECT ?rhea (count(?uniprot) as ?uniprotCount) {\n      ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea . \n  \t}\n  \tGROUP BY ?rhea\n  }\n  ?rhea rh:accession ?accession .\n  ?rhea rh:equation ?equation .\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/12.ttl",
    "predicted_query": "# Primary endpoint: https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT DISTINCT ?protein ?rhea\nWHERE {\n  # Patterns for the host endpoint (UniProt)\n  ?protein up:annotation ?annotation .\n  ?annotation up:catalyticActivity ?catalyticActivity .\n  ?catalyticActivity up:catalyzedReaction ?rhea . # ?rhea is the join variable\n\n  # Patterns for the remote endpoint (Rhea)\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rdfs:subClassOf rh:Reaction . # Ensure ?rhea is a Rhea reaction\n    {\n      ?rhea rh:ec ?ec . # Link to EC number for enzymes\n    }\n    UNION\n    {\n      ?rhea rh:isTransport true . # Identify transport reactions\n    }\n  }\n}",
    "predicted_endpoint": "Primary",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "c8d362bb-3df0-45f0-b1f9-ad42219fe0e0",
    "evaluation_timestamp": "2025-05-27T21:16:21.717282",
    "question_understanding_prompt_tokens": 255,
    "question_understanding_completion_tokens": 30,
    "question_understanding_total_tokens": 285,
    "planning_prompt_tokens": 5303,
    "planning_completion_tokens": 123,
    "planning_total_tokens": 5426,
    "pattern_prompt_tokens": 8129,
    "pattern_completion_tokens": 234,
    "pattern_total_tokens": 8363,
    "assembler_prompt_tokens": 4032,
    "assembler_completion_tokens": 262,
    "assembler_total_tokens": 4294,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "unknown url type: 'Primary?query=%23+Primary+endpoint%3A+https%3A//sparql.uniprot.org/sparql%0APREFIX+up%3A+%3Chttp%3A//purl.uniprot.org/core/%3E%0APREFIX+rh%3A+%3Chttp%3A//rdf.rhea-db.org/%3E%0APREFIX+rdfs%3A+%3Chttp%3A//www.w3.org/2000/01/rdf-schema%23%3E%0A%0ASELECT+DISTINCT+%3Fprotein+%3Frhea%0AWHERE+%7B%0A++%23+Patterns+for+the+host+endpoint+%28UniProt%29%0A++%3Fprotein+up%3Aannotation+%3Fannotation+.%0A++%3Fannotation+up%3AcatalyticActivity+%3FcatalyticActivity+.%0A++%3FcatalyticActivity+up%3AcatalyzedReaction+%3Frhea+.+%23+%3Frhea+is+the+join+variable%0A%0A++%23+Patterns+for+the+remote+endpoint+%28Rhea%29%0A++SERVICE+%3Chttps%3A//sparql.rhea-db.org/sparql%3E+%7B%0A++++%3Frhea+rdfs%3AsubClassOf+rh%3AReaction+.+%23+Ensure+%3Frhea+is+a+Rhea+reaction%0A++++%7B%0A++++++%3Frhea+rh%3Aec+%3Fec+.+%23+Link+to+EC+number+for+enzymes%0A++++%7D%0A++++UNION%0A++++%7B%0A++++++%3Frhea+rh%3AisTransport+true+.+%23+Identify+transport+reactions%0A++++%7D%0A++%7D%0A%7D&format=json&output=json&results=json'"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/112_Total_number_of_reaction_ec_protein_links",
    "natural_language_question": "Total number of <reaction> <ec> <protein> links",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX up:<http://purl.uniprot.org/core/>\n\nSELECT\n  (count(?reaction) as ?reactionEcProteinLinkCount)\nWHERE {\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:ec ?enzyme\n  SERVICE <http://sparql.uniprot.org/sparql> {\n    ?protein up:reviewed true .\n    ?protein up:enzyme ?enzyme.\n  }\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "http://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/112_Total_number_of_reaction_ec_protein_links.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX ec: <http://purl.uniprot.org/enzyme/>\n\nSELECT\n  (count(?reaction) as ?reactionEcProteinLinkCount)\nWHERE {\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:ec ?enzyme .\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein up:reviewed true .\n    ?protein up:enzyme ?enzyme .\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "edc8c56e-7932-4bd6-9394-d9f147a5056d",
    "evaluation_timestamp": "2025-05-27T21:17:19.915330",
    "question_understanding_prompt_tokens": 251,
    "question_understanding_completion_tokens": 21,
    "question_understanding_total_tokens": 272,
    "planning_prompt_tokens": 5209,
    "planning_completion_tokens": 137,
    "planning_total_tokens": 5346,
    "pattern_prompt_tokens": 15526,
    "pattern_completion_tokens": 100,
    "pattern_total_tokens": 15626,
    "assembler_prompt_tokens": 3752,
    "assembler_completion_tokens": 187,
    "assembler_total_tokens": 3939,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/19_draft_human_metabolome",
    "natural_language_question": "Generate a draft human metabolome",
    "ground_truth_query": "PREFIX chebislash: <http://purl.obolibrary.org/obo/chebi/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT\n  ?uniprot ?mnemonic ?rhea ?chebi ?smiles ?inchiKey\nWHERE\n{\n  ?rhea rh:side/rh:contains/rh:compound ?compound .\n  ?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?chebi .\n  ?chebi chebislash:smiles ?smiles ;\n          chebislash:inchikey ?inchiKey .\n  SERVICE <https://sparql.uniprot.org/sparql> {\n     ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea ;\n                                             up:organism taxon:9606 ;\n                                             up:mnemonic ?mnemonic .\n\n   }\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/19_draft_human_metabolome.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX keywords: <http://purl.uniprot.org/keywords/>\nPREFIX ec: <http://purl.uniprot.org/enzyme/> # Although up:enzyme is used, ec: might be needed for EC URIs if they were directly used.\n\nSELECT DISTINCT ?chebi ?compoundLabel ?reaction ?ecNumber ?protein\nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein up:reviewed true .\n    ?protein up:organism taxon:9606 . # Filter for human proteins\n    ?protein up:classifiedWith keywords:1185 . # Filter for proteins involved in metabolism\n\n    # Get EC numbers associated with the protein (handling different annotation styles)\n    { ?protein up:enzyme ?ecNumber . }\n    UNION\n    { ?protein up:domain/up:enzyme ?ecNumber . }\n    UNION\n    { ?protein up:component/up:enzyme ?ecNumber . }\n  }\n\n  # In Rhea, find reactions associated with the identified EC numbers\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved . # Ensure only approved reactions are considered\n  ?reaction rh:ec ?ecNumber . # Join with UniProt via EC number\n\n  # Find compounds (metabolites) involved in these reactions\n  ?reaction rh:side ?reactionSide .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi . # Get the ChEBI identifier for the compound\n  ?compound rdfs:label ?compoundLabel . # Get the human-readable label for the compound\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "c3372bd1-4c4a-41c7-8304-79031caec0bf",
    "evaluation_timestamp": "2025-05-27T21:18:23.884038",
    "question_understanding_prompt_tokens": 246,
    "question_understanding_completion_tokens": 20,
    "question_understanding_total_tokens": 266,
    "planning_prompt_tokens": 5596,
    "planning_completion_tokens": 86,
    "planning_total_tokens": 5682,
    "pattern_prompt_tokens": 9998,
    "pattern_completion_tokens": 30,
    "pattern_total_tokens": 10028,
    "assembler_prompt_tokens": 4674,
    "assembler_completion_tokens": 486,
    "assembler_total_tokens": 5160,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/20_search_chemical_names_in_japanese",
    "natural_language_question": "Search for Chemical names starting in Japanese, translated to english using allie",
    "ground_truth_query": "PREFIX oboInOwl: <http://www.geneontology.org/formats/oboInOwl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\nSELECT\n*\nWHERE {\nSERVICE <https://data.allie.dbcls.jp/sparql>{\n        ?x rdfs:label \"1,2,4-トリクロロベンゼン\"@ja ;\n            rdfs:label ?englishLabel .\n        FILTER(lang(?englishLabel) = \"en\")\n    }\n  BIND(STR(?englishLabel) AS ?englishLabelStr)\n  ?chebi rdfs:label|oboInOwl:hasSynonym ?englishLabelStr .\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql/",
    "federates_with": [
      "https://data.allie.dbcls.jp/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/20_search_chemical_names_in_japanese.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rh: <http://rdf.rhea-db.org/>\n\nSELECT ?chemical ?japaneseLabel ?englishLabel\nWHERE {\n  # Step 1: Use ALLIE to find chemical entities with both Japanese and English labels.\n  # The 'starting in Japanese' is interpreted as having a label in the Japanese language.\n  SERVICE <https://data.allie.dbcls.jp/sparql> {\n    ?chemical rdfs:label ?japaneseLabel .\n    FILTER (lang(?japaneseLabel) = \"ja\") # Filter for Japanese labels\n\n    ?chemical rdfs:label ?englishLabel .\n    FILTER (lang(?englishLabel) = \"en\")   # Filter for English labels (the translation)\n  }\n\n  # Step 2: Ensure the found ?chemical entity is known and has a label in Rhea-DB.\n  # This also serves as the join point for the federated query, ensuring ?chemical is processed by the host.\n  # Rhea-DB typically uses CHEBI URIs for compounds and provides rdfs:label for them.\n  ?chemical rdfs:label ?rheaChemicalLabel .\n  # We don't need to select ?rheaChemicalLabel as the primary goal is the translation from ALLIE.\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "f640c226-ff2d-4b6a-987c-f0431ae0913a",
    "evaluation_timestamp": "2025-05-27T21:20:46.443595",
    "question_understanding_prompt_tokens": 252,
    "question_understanding_completion_tokens": 23,
    "question_understanding_total_tokens": 275,
    "planning_prompt_tokens": 4476,
    "planning_completion_tokens": 119,
    "planning_total_tokens": 4595,
    "pattern_prompt_tokens": 11082,
    "pattern_completion_tokens": 230,
    "pattern_total_tokens": 11312,
    "assembler_prompt_tokens": 3714,
    "assembler_completion_tokens": 344,
    "assembler_total_tokens": 4058,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/117_Retrieve_parent_reactions_and_their_catalyzing_enzymes_for_a_metabolite_that_is_not_directly_involved_in_a_reaction",
    "natural_language_question": "Retrieve parent reactions (and their catalyzing enzymes) for a metabolite that is not directly involved in a reaction (ex: CHEBI:83137).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX up:<http://purl.uniprot.org/core/>\nPREFIX taxon:<http://purl.uniprot.org/taxonomy/>\nPREFIX keywords:<http://purl.uniprot.org/keywords/>\n\nSELECT\n  ?chebi\n  ?ecNumber\n  (count(?protein) as ?proteinCount)\n  ?reaction\n  ?equation\nWHERE {\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:equation ?equation .\n  ?reaction rh:ec ?ecNumber .\n  ?reaction rh:side ?reactionSide .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi .\n  CHEBI:83137 rdfs:subClassOf+ ?chebi.\n\n  SERVICE <https://sparql.uniprot.org/sparql> {\n  ?protein a up:Protein .\n  ?protein up:reviewed true .\n    {?protein up:enzyme ?ecNumber}\n  UNION\n    {?protein up:domain/up:enzyme ?ecNumber}\n  UNION\n    {?protein up:component/up:enzyme ?ecNumber} .\n  }\n} \nGROUP BY ?chebi ?ecNumber ?reaction ?equation",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/117_Retrieve_parent_reactions_and_their_catalyzing_enzymes_for_a_metabolite_that_is_not_directly_involved_in_a_reaction.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX ec: <http://purl.uniprot.org/enzyme/>\nPREFIX keywords: <http://purl.uniprot.org/keywords/>\n\nSELECT DISTINCT ?reactionChild ?parentReaction ?ecNumber ?protein\nWHERE {\n  # Find child reactions that are approved RHEA reactions\n  ?reactionChild rdfs:subClassOf rh:Reaction .\n  ?reactionChild rh:status rh:Approved .\n\n  # Find parent reactions for the child reaction\n  ?reactionChild rdfs:subClassOf ?parentReaction .\n  ?parentReaction rdfs:subClassOf rh:Reaction .\n  ?parentReaction rh:status rh:Approved .\n\n  # Link the parent reaction to its EC number\n  ?parentReaction rh:ec ?ecNumber .\n\n  # Ensure the specified metabolite (CHEBI:83137) is NOT directly involved in the child reaction\n  FILTER NOT EXISTS {\n    ?reactionChild rh:side ?side .\n    ?side rh:contains ?participant .\n    ?participant rh:compound ?compound .\n    ?compound (rh:chebi | rh:reactivePart/rh:chebi | rh:underlyingChebi/rh:chebi) CHEBI:83137 .\n  }\n\n  # Federate with UniProt to find proteins associated with the EC number\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein up:reviewed true .\n    ?protein up:classifiedWith keywords:1185 . # Filter for proteins classified as enzymes\n    { ?protein up:enzyme ?ecNumber . }\n    UNION\n    { ?protein up:domain/up:enzyme ?ecNumber . }\n    UNION\n    { ?protein up:component/up:enzyme ?ecNumber . }\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "1a154c58-e835-417d-8fd8-bea0739c54d7",
    "evaluation_timestamp": "2025-05-27T21:24:37.260016",
    "question_understanding_prompt_tokens": 268,
    "question_understanding_completion_tokens": 37,
    "question_understanding_total_tokens": 305,
    "planning_prompt_tokens": 5871,
    "planning_completion_tokens": 117,
    "planning_total_tokens": 5988,
    "pattern_prompt_tokens": 17042,
    "pattern_completion_tokens": 809,
    "pattern_total_tokens": 17851,
    "assembler_prompt_tokens": 4560,
    "assembler_completion_tokens": 511,
    "assembler_total_tokens": 5071,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "ground_truth_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/115_Retrieve_the_set_of_metabolites_involved_in_reactions_catalyzed_by_human_genes_HUMAN_reference_proteome",
    "natural_language_question": "Retrieve the set of metabolites involved in reactions catalyzed by human genes (HUMAN reference proteome)",
    "ground_truth_query": "\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX taxon:<http://purl.uniprot.org/taxonomy/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up:<http://purl.uniprot.org/core/>\nPREFIX keywords:<http://purl.uniprot.org/keywords/>\n\nSELECT\n  ?chebi\n  ?reaction\n  ?ecNumber\n  ?protein\n  ?ensemblTranscript\n  ?ensemblGene\nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein up:reviewed true .\n    ?protein up:organism taxon:9606 .\n    ?protein up:classifiedWith keywords:1185 .\n\n    ?protein rdfs:seeAlso ?ensemblTranscript .\n    ?ensemblTranscript a up:Transcript_Resource .\n    ?ensemblTranscript up:database <http://purl.uniprot.org/database/Ensembl> .\n    ?ensemblTranscript up:transcribedFrom ?ensemblGene .\n\n      {?protein up:enzyme ?ecNumber .}\n    UNION\n      {?protein up:domain/up:enzyme ?ecNumber .}\n    UNION\n      {?protein up:component/up:enzyme ?ecNumber .}\n  }\n\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:ec ?ecNumber .\n  ?reaction rh:side ?reactionSide .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi . # only considering small molecules participants\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/115_Retrieve_the_set_of_metabolites_involved_in_reactions_catalyzed_by_human_genes_HUMAN_reference_proteome.ttl",
    "predicted_query": "# Primary endpoint: https://sparql.uniprot.org/sparql\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?metabolite\nWHERE {\n  # Find human proteins (from UniProt)\n  ?protein up:organism taxon:9606 .\n\n  # Find Rhea reactions catalyzed by these human proteins\n  ?protein up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    # For each Rhea reaction, find the associated compounds/metabolites\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n    ?compound (rh:chebi | rh:reactivePart/rh:chebi | rh:underlyingChebi/rh:chebi) ?metabolite .\n  }\n}",
    "predicted_endpoint": "Primary",
    "predicted_endpoint_equal_to_target_endpoint": false,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": false,
    "run_id_langsmith": "cc50c11d-8446-4dc3-b539-f7a406a8c921",
    "evaluation_timestamp": "2025-05-27T21:28:26.226731",
    "question_understanding_prompt_tokens": 254,
    "question_understanding_completion_tokens": 26,
    "question_understanding_total_tokens": 280,
    "planning_prompt_tokens": 6743,
    "planning_completion_tokens": 102,
    "planning_total_tokens": 6845,
    "pattern_prompt_tokens": 10189,
    "pattern_completion_tokens": 209,
    "pattern_total_tokens": 10398,
    "assembler_prompt_tokens": 5039,
    "assembler_completion_tokens": 264,
    "assembler_total_tokens": 5303,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "ground_truth_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "unknown url type: 'Primary?query=%23+Primary+endpoint%3A+https%3A//sparql.uniprot.org/sparql%0APREFIX+up%3A+%3Chttp%3A//purl.uniprot.org/core/%3E%0APREFIX+taxon%3A+%3Chttp%3A//purl.uniprot.org/taxonomy/%3E%0APREFIX+rh%3A+%3Chttp%3A//rdf.rhea-db.org/%3E%0APREFIX+CHEBI%3A+%3Chttp%3A//purl.obolibrary.org/obo/CHEBI_%3E%0A%0ASELECT+DISTINCT+%3Fmetabolite%0AWHERE+%7B%0A++%23+Find+human+proteins+%28from+UniProt%29%0A++%3Fprotein+up%3Aorganism+taxon%3A9606+.%0A%0A++%23+Find+Rhea+reactions+catalyzed+by+these+human+proteins%0A++%3Fprotein+up%3Aannotation/up%3AcatalyticActivity/up%3AcatalyzedReaction+%3Frhea+.%0A%0A++SERVICE+%3Chttps%3A//sparql.rhea-db.org/sparql%3E+%7B%0A++++%23+For+each+Rhea+reaction%2C+find+the+associated+compounds/metabolites%0A++++%3Frhea+rh%3Aside/rh%3Acontains/rh%3Acompound+%3Fcompound+.%0A++++%3Fcompound+%28rh%3Achebi+%7C+rh%3AreactivePart/rh%3Achebi+%7C+rh%3AunderlyingChebi/rh%3Achebi%29+%3Fmetabolite+.%0A++%7D%0A%7D&format=json&output=json&results=json'"
  }
]