
# Natural Language Question
# =======================
Find the orthologous proteins for UniProtKB entry P05067 using the <a href="http://www.orthod.org">OrthoDB database</a>

# Target Endpoint
# ===============
https://sparql.uniprot.org/sparql/

# Ground Truth Query
# =================
PREFIX orthodb: <http://purl.orthodb.org/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT
  ?protein
  ?orthoGroup
  ?scientificName
  ?functionComment
  ?prefferedGeneName
  ((STRLEN(?value) - ?medianLength) as ?deviationFromMedianLength)
WHERE
{
  uniprotkb:P05067 a up:Protein ;
        up:organism/up:scientificName ?scientificName ;
        rdfs:seeAlso ?orthoGroup ;
        up:encodedBy/skos:prefLabel ?prefferedGeneName ;
          up:sequence/rdf:value ?value .
  OPTIONAL {
    ?protein up:annotation ?functionAnnotation .
    ?functionAnnotation a up:Function_Annotation ;
      rdfs:comment ?functionComment .
  }
  SERVICE <https://sparql.orthodb.org/sparql>{
    ?orthoGroup orthodb:ogMedianProteinLength ?medianLength .
    ?orthoGroup orthodb:hasMember ?xref .
    ?xref orthodb:xref/orthodb:xrefResource uniprotkb:P05067 .
  }
}
LIMIT 985915

# Predicted Query
# ==============
# https://sparql.uniprot.org/sparql/
# Find orthologous proteins for UniProtKB entry P05067 using OrthoDB.
# Since there is no direct link to OrthoDB in UniProt SPARQL endpoint, this query will search for similar proteins in UniProt and then attempt to find corresponding OrthoDB entries.
PREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT DISTINCT ?similarProtein ?orthoDBEntry
WHERE {
  # Bind the UniProtKB entry of interest.
  BIND (uniprotkb:P05067 AS ?protein)

  # Find similar proteins in UniProt.  This assumes that similar proteins might have orthologs in OrthoDB.
  ?cluster up:member ?member ;
           up:member/up:sequenceFor ?protein ;
           up:identity ?identity .
  ?member up:sequenceFor ?similarProtein .
  FILTER(!sameTerm(?similarProtein, ?protein))

  # Attempt to link to OrthoDB using a potential identifier.  This part is speculative as there's no direct link.
  # SERVICE <OrthoDB_SPARQL_Endpoint> {  # Replace with the actual OrthoDB SPARQL endpoint if available
  #   ?orthoDBEntry orthodb:member ?similarProtein .  # Replace with the correct properties
  # }
  # Placeholder:  Since there's no accessible OrthoDB SPARQL endpoint in the context, this part is commented out.
  # You would need to replace <OrthoDB_SPARQL_Endpoint> with the actual endpoint and adjust the properties (orthodb:member)
  # to match the OrthoDB schema.
  BIND("No OrthoDB endpoint available" AS ?orthoDBEntry) # Placeholder since we don't have access to OrthoDB.
}
ORDER BY DESC(?identity)
