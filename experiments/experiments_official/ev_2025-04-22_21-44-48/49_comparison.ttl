
# Natural Language Question
# =======================
Retrieve the UniProtKB proteins, their catalyzed Rhea reactions, their encoding genes (Ensembl) and the anatomic entities where the genes are expressed (UBERON anatomic entites from Bgee expression data resource).

# Target Endpoint
# ===============
https://sparql.uniprot.org/sparql/

# Ground Truth Query
# =================
PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>
PREFIX genex: <http://purl.org/genex#>
PREFIX lscr: <http://purl.org/lscr#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rh: <http://rdf.rhea-db.org/>
PREFIX taxon: <http://purl.uniprot.org/taxonomy/>
PREFIX up: <http://purl.uniprot.org/core/>

SELECT DISTINCT ?protein ?ensemblGene ?reaction ?anatomicEntityLabel ?anatomicEntity
WHERE {
  # federated query to Rhea enadpoint
  {
    SELECT DISTINCT ?reaction WHERE {
      SERVICE <https://sparql.rhea-db.org/sparql> {
        ?reaction rdfs:subClassOf rh:Reaction ;
          rh:equation ?reactionEquation ;
          rh:side ?reactionSide .
        ?reactionSide rh:contains ?participant .
        ?participant rh:compound ?compound .
        # compound constraint (CHEBI:16113 == cholesterol)
        ?compound rh:chebi CHEBI:16113 .
      }
    }
  }
  # taxonomy constraint (taxon:9606 == Homo sapiens)
  ?protein up:organism taxon:9606 ;
    up:annotation ?a ;
    rdfs:seeAlso / up:transcribedFrom ?ensemblGene .
  ?a a up:Catalytic_Activity_Annotation ;
    up:catalyticActivity ?ca .
  ?ca up:catalyzedReaction ?reaction .
  # federated query to Bgee (expression data)
  BIND(IRI(REPLACE(STR(?ensemblGene), "\\.[0-9]+$", "")) AS ?ensemblGeneNoVersion)
  SERVICE <https://www.bgee.org/sparql/> {
    ?gene lscr:xrefEnsemblGene ?ensemblGeneNoVersion ;
      genex:isExpressedIn ?anatomicEntity .
    ?anatomicEntity rdfs:label ?anatomicEntityLabel .
  }
}

# Predicted Query
# ==============
# https://sparql.uniprot.org/sparql
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX up: <http://purl.uniprot.org/core/>
PREFIX rhea: <http://rdf.rhea-db.org/>
PREFIX bp: <http://purl.uniprot.org/bestprot/>
PREFIX taxon: <http://purl.uniprot.org/taxonomy/>

SELECT DISTINCT ?protein ?proteinName ?reaction ?gene ?anatomicalEntity
WHERE {
  # From UniProt get the protein names and link to Rhea
  SERVICE <https://sparql.uniprot.org/sparql> {
    ?protein a up:Protein .
    ?protein rdfs:label ?proteinName .
    ?protein bp:links ?rheaReaction .
  }
  
  # Get Rhea reactions
  SERVICE <https://sparql.rhea-db.org/sparql> {
    ?rheaReaction rdfs:seeAlso ?reaction .
  }

  #Optional: Link to Ensembl gene identifiers (This part is tricky without direct links, requires more info)
  #SERVICE <https://sparql.uniprot.org/sparql> {
  #  ?protein up:encodedBy ?gene . #Assumed property. Needs validation
  #}

  #Assuming some Bgee endpoint exists that we can query with Ensembl IDs and UBERON IDs

  #SERVICE <BGEE_SPARQL_ENDPOINT> {  #Replace with actual BGEE endpoint.
  #  ?gene bgee:expressedIn ?anatomicalEntity .  #Again, placeholder property.
  #  ?anatomicalEntity a <http://purl.obolibrary.org/obo/UBERON_0001062> . #Anatomical entity class from UBERON
  #}


  # Placeholder:  Since a direct link between UniProt and Ensembl/Bgee isn't clear,  the gene and anatomicalEntity are currently not populated
  # Further investigation into the specific properties needed for the Ensembl and Bgee links is required.
  BIND("No gene data available due to missing link properties" AS ?gene)
  BIND("No anatomical entity data available due to missing link properties" AS ?anatomicalEntity)
}
LIMIT 10
