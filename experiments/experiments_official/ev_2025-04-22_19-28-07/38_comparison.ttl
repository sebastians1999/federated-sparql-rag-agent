
# Natural Language Question
# =======================
For the human entry P05067 (Amyloid-beta precursor protein) find the gene start ends in WikiData

# Target Endpoint
# ===============
https://sparql.uniprot.org/sparql/

# Ground Truth Query
# =================
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX uniprotkb: <http://purl.uniprot.org/uniprot/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>


SELECT 
	?protein 
	?begin
	?end
	?chromosome
	?assembly
WHERE {
    {
        BIND(uniprotkb:P05067 AS ?proteinIRI)
        BIND (SUBSTR(STR(?proteinIRI), STRLEN(STR(uniprotkb:))+1) AS ?protein)
    }
    SERVICE <https://query.wikidata.org/sparql> {
        ?wp wdt:P352 ?protein ;
            wdt:P702 ?wg . 
        ?wg p:P644   ?wgss .
        ?wgss ps:P644        ?begin ;
          pq:P1057/wdt:P1813 ?chromosome ;
          pq:P659/rdfs:label ?assembly .
        ?wg p:P645 ?wgse .
        ?wgse ps:P645        ?end ;
          pq:P1057/wdt:P1813 ?chromosome ;
          pq:P659/rdfs:label ?assembly .
        FILTER(lang(?assembly) = "en")
  } 
}

# Predicted Query
# ==============
# https://sparql.uniprot.org/sparql
# Find the gene start and end positions for the human protein P05067 (Amyloid-beta precursor protein)
PREFIX up: <http://purl.uniprot.org/core/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?protein ?gene ?geneStart ?geneEnd
WHERE {
  # Filter for the specific UniProt protein entry
  VALUES ?protein { <http://purl.uniprot.org/uniprot/P05067> }

  # Find the corresponding gene
  ?protein a up:Protein ;
           up:encodedBy ?gene .

  # Attempt to retrieve gene start and end positions.
  # This part might require further refinement based on the actual data structure in UniProt.
  # If UniProt doesn't directly expose gene start/end, we might need to explore cross-references
  # to other databases (e.g., via up:database or similar properties) and federate with them.

  OPTIONAL {
    ?gene up:geneLocationStart ?geneStart ;
          up:geneLocationEnd ?geneEnd .
  }
  # Placeholder for potential federation with other databases if the above fails.
  # Example:
  # SERVICE <https://query.wikidata.org/sparql> {
  #   ?wikidataGene wdt:P352 ?gene . # Example property, adjust if needed
  #   ?wikidataGene wdt:PXXX ?geneStart . # Example property, adjust if needed
  #   ?wikidataGene wdt:PYYY ?geneEnd . # Example property, adjust if needed
  #   FILTER(STR(?gene) = "some_gene_identifier") # Replace with actual gene identifier from UniProt
  # }
}
