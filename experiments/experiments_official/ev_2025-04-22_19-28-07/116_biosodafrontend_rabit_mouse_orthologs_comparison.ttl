
# Natural Language Question
# =======================
Rabbit's proteins encoded by genes that are orthologous to Mouse's HBB-Y gene and their cross reference links to Uniprot

# Target Endpoint
# ===============
https://sparql.uniprot.org/sparql

# Ground Truth Query
# =================
PREFIX lscr: <http://purl.org/lscr#>
PREFIX orth: <http://purl.org/net/orth#>
PREFIX up: <http://purl.uniprot.org/core/>
PREFIX obo: <http://purl.obolibrary.org/obo/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?PROTEIN_1 ?PROTEIN_2 ?UNIPROT_XREF_1 ?UNIPROT_XREF_2 WHERE {
	?taxon_1 up:commonName 'Mouse' .
	?taxon_2 up:commonName 'Rabbit' .
	SERVICE <https://sparql.omabrowser.org/sparql/> {
		?cluster a orth:OrthologsCluster .
		?cluster orth:hasHomologousMember ?node1 .
		?cluster orth:hasHomologousMember ?node2 .
		?node2 orth:hasHomologousMember* ?PROTEIN_2 .
		?node1 orth:hasHomologousMember* ?PROTEIN_1 .
		?PROTEIN_1 a orth:Protein .
		?PROTEIN_1 orth:organism/obo:RO_0002162 ?taxon_1 ;
			rdfs:label 'HBB-Y' ;
			lscr:xrefUniprot ?UNIPROT_XREF_1 .
		?PROTEIN_2 a orth:Protein .
		?PROTEIN_2 orth:organism/obo:RO_0002162 ?taxon_2 .
		?PROTEIN_2 lscr:xrefUniprot ?UNIPROT_XREF_2 .
		FILTER ( ?node1 != ?node2 )
	}
}

# Predicted Query
# ==============
# https://sparql.uniprot.org/sparql
# Find Rabbit proteins that are encoded by genes orthologous to Mouse HBB-Y gene and retrieve their UniProt cross-references.
PREFIX up: <http://purl.uniprot.org/core/>
PREFIX taxon: <http://purl.uniprot.org/taxonomy/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT DISTINCT ?rabbitProtein ?geneName ?crossRefDb ?crossRefId
WHERE {
  # Find Rabbit proteins
  ?rabbitProtein a up:Protein .
  ?rabbitProtein up:organism taxon:2697570 . # Rabbit Taxonomy ID

  # Get the gene name associated with the protein
  ?rabbitProtein up:encodedBy ?gene .
  ?gene rdfs:label ?geneName .

  # Attempt to find a direct orthology link (This assumes UniProt might have some orthology data, which is unlikely but we check)
  #OPTIONAL {
  #  ?gene up:orthologousTo ?mouseGene .
  #  ?mouseGene rdfs:label "HBB-Y" .  # Assuming "HBB-Y" is the gene symbol
  #}

  # Find cross-references
  ?rabbitProtein up:database ?crossRef .
  ?crossRef rdfs:label ?crossRefDb .
  ?crossRef up:identifier ?crossRefId .

  # SERVICE <external_orthology_db_endpoint> {  # If an external orthology DB is available
  #   # Query the external DB to link Rabbit genes to Mouse HBB-Y gene
  #   ?rabbitGene equivalentTo ?mouseGene .
  #   ?mouseGene rdfs:label "HBB-Y" .
  #   ?rabbitGene rdfs:label ?geneName .
  # }

  #FILTER EXISTS {  # This is a placeholder; replace with actual orthology query if possible
  #  # Logic to check for genes orthologous to Mouse HBB-Y
  #  # Requires a service call to an external orthology database (e.g., eggNOG, OrthoDB)
  #  # For example (hypothetical):
  #  # SERVICE <orthology_db_endpoint> {
  #  #   ?rabbitGene orthologousTo ?mouseHBBYGene .
  #  #   ?mouseHBBYGene rdfs:label "HBB-Y" .
  #  #   ?rabbitGeneEquivalent uniprot:gene .  # Assuming a link to UniProt gene
  #  #   FILTER (?rabbitGeneEquivalent = ?gene)
  #  # }
  #}

  FILTER (CONTAINS(lcase(?geneName), "hbb")) # Very broad filter as a placeholder.
}
