[
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/5",
    "natural_language_question": "For a given lipid (SWISSLIPID:000399814, Ceramide), return a list of all corresponding reactions (Rhea IDs and equation).\nThis query does consider the hierarchy: it looks for reactions involving the specified lipid and/or its more specific forms.",
    "ground_truth_query": "PREFIX SWISSLIPID: <https://swisslipids.org/rdf/SLM_>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh: <http://rdf.rhea-db.org/>\n\n# Example 5\nSELECT ?startId ?startName ?id ?name ?chebi ?rhea ?rheaEquation \nWHERE\n{\n  # SwissLipids query (list of) identifier(s)\n  VALUES ?startId { SWISSLIPID:000399814 }\n  # name\n  ?startId rdfs:label ?startName .\n  # Retrieve children lipids \n  ?id rdfs:subClassOf* ?startId .\n  ?id rdfs:label ?name .\n  # ChEBI x-ref\n  ?id owl:equivalentClass ?chebi .\n  # federated query to Rhea\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n  \t?rhea rh:equation ?rheaEquation .\n  \t?rhea rh:side/rh:contains/rh:compound/rh:chebi ?chebi .\n  }    \n} \nORDER BY  ?startId ?id",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/5.ttl",
    "predicted_query": "# https://sparql.swisslipids.org/sparql/\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX sl: <http://www.swisslipids.org/rdf#>\n\nSELECT DISTINCT ?rheaId ?equation\nWHERE {\n  {\n    # Query SwissLipids for the specific lipid and its more specific children\n    SERVICE <https://sparql.swisslipids.org/sparql/> {\n      VALUES ?lipid { <http://identifiers.org/swisslipids:SWISSLIPID:000399814> } #SWISSLIPID:000399814\n      ?child sl:is_a* ?lipid .\n    }\n    \n    # Query Rhea for reactions involving the lipid or its children\n    SERVICE <https://sparql.rhea-db.org/sparql> {\n      ?rheaId rdfs:label ?equation .\n      ?rheaId rhea:i参与者 ?participant .  # Changed rhea:hasParticipant to rhea:i参与者\n      \n      # Filter to ensure participant is the lipid or its children\n      FILTER (?participant = ?child)\n    }\n  }\n  UNION\n  {\n    # Query SwissLipids for the specific lipid and its more specific children but using CHEBI\n    SERVICE <https://sparql.swisslipids.org/sparql/> {\n      BIND(<http://purl.obolibrary.org/obo/CHEBI_17761> AS ?lipid) #Ceramide\n      ?child sl:is_a* ?lipid .\n    }\n    \n    # Query Rhea for reactions involving the lipid or its children\n    SERVICE <https://sparql.rhea-db.org/sparql> {\n      ?rheaId rdfs:label ?equation .\n      ?rheaId rhea:i参与者 ?participant . # Changed rhea:hasParticipant to rhea:i参与者\n      \n      # Filter to ensure participant is the lipid or its children\n      FILTER (?participant = ?child)\n    }\n  }\n}",
    "predicted_endpoint": "https://sparql.swisslipids.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "5285f1a6-9b1f-4d7e-a4b5-3f0e56f0aeeb",
    "evaluation_timestamp": "2025-04-21T23:29:27.677555",
    "question_understanding_tokens": 290,
    "question_understanding_completion_tokens": 52,
    "question_understanding_total_tokens": 342,
    "sparql_construction_prompt_tokens": 2143,
    "sparql_construction_completion_tokens": 0,
    "sparql_construction_total_tokens": 2143,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Line 18, column 15: Unresolved prefixed name: rhea:i参与者",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "Line 18, column 15: Unresolved prefixed name: rhea:i参与者"
  },
  {
    "resource": "https://sparql.swisslipids.org/.well-known/sparql-examples/34",
    "natural_language_question": "Lipids affected by human enzymes",
    "ground_truth_query": "PREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX taxon: <http://purl.uniprot.org/taxonomy/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\nSELECT ?swisslipid  {\n  ?swisslipid owl:equivalentClass ?chebi .\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rhea rh:side/rh:contains/rh:compound ?compound .\n\t?compound (rh:chebi|(rh:reactivePart/rh:chebi)|(rh:underlyingChebi/rh:chebi)) ?metabolite . \n  }\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?catalyticActivityAnnotation up:catalyticActivity/up:catalyzedReaction ?rhea .\n    ?protein up:annotation ?catalyticActivityAnnotation ;\n             up:organism taxon:9606 .\n  }\n}\nLIMIT 1",
    "target_endpoint": "https://sparql.swisslipids.org/sparql/",
    "federates_with": [
      "https://sparql.uniprot.org/sparql",
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "SwissLipids",
    "file_path": "SwissLipids/34.ttl",
    "predicted_query": "# https://sparql.swisslipids.org/sparql/\n# Federated query to find lipids affected by human enzymes, using SwissLipids and UniProt.\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX sl: <http://swisslipids.org/rdf#>\n\nSELECT DISTINCT ?lipidName ?enzymeName\nWHERE {\n  # Query SwissLipids for lipids and their associated enzymes\n  SERVICE <https://sparql.swisslipids.org/sparql/> {\n    ?lipid a sl:Lipid .\n    ?lipid rdfs:label ?lipidName .\n    ?enzyme sl:catalyzes ?lipid .\n    ?enzyme rdfs:label ?enzymeName .\n  }\n  # Filter for human enzymes using UniProt\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein rdfs:label ?enzymeName .\n    ?protein <http://purl.uniprot.org/core/organism> ?organism .\n    ?organism rdfs:label \"Homo sapiens\" . # Filter for human proteins\n  }\n}",
    "predicted_endpoint": "https://sparql.swisslipids.org/sparql/",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "4df554ee-f650-4cc7-b5aa-6a0f5959decb",
    "evaluation_timestamp": "2025-04-21T23:29:36.028034",
    "question_understanding_tokens": 240,
    "question_understanding_completion_tokens": 25,
    "question_understanding_total_tokens": 265,
    "sparql_construction_prompt_tokens": 1911,
    "sparql_construction_completion_tokens": 286,
    "sparql_construction_total_tokens": 2197,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "no error, but empty result"
  },
  {
    "resource": "https://sparql.uniprot.org/.well-known/sparql-examples/51",
    "natural_language_question": "Find all proteins linked to arachidonate (CHEBI:32395)",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n\nSELECT \n    DISTINCT\n        ?uniprot\n        ?uniprotID\n        ?recname\n        ?gene\n        ?chebi\n        ?uniprotName\nWHERE {\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n     VALUES (?chebi) { (CHEBI:32395) }\n     ?rhea rh:side/rh:contains/rh:compound ?compound .\n     ?compound rh:chebi ?chebi .\n     ?chebi up:name ?uniprotName .\n  }\n  ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea .\n  ?uniprot up:mnemonic ?uniprotID .\n  ?uniprot up:recommendedName/up:fullName ?recname .\n  OPTIONAL {?uniprot up:encodedBy/skos:prefLabel ?gene .}\n}",
    "target_endpoint": "https://sparql.uniprot.org/sparql/",
    "federates_with": [
      "https://sparql.rhea-db.org/sparql"
    ],
    "endpoint_set": "Uniprot",
    "file_path": "UniProt/51_all_proteins_linked_to_arachidonate.ttl",
    "predicted_query": "# https://sparql.uniprot.org/sparql\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX up: <http://purl.uniprot.org/core/>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?protein ?proteinName\nWHERE {\n  # Use UniProt as the primary endpoint to find proteins\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a up:Protein .\n    ?protein rdfs:label ?proteinName .\n    # Assuming a link to ChEBI through a related entity (e.g., involved in a pathway or binding)\n    # Replace up:reference with the appropriate predicate if available, for example:\n    # up:interaction or similar property indicating association with a chemical entity\n    ?protein up:sequence ?sequence . # Added to ensure it's a protein and not another entity\n  }\n  \n  # Use Rhea DB to find reactions involving arachidonate\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    # Find reactions that involve arachidonate (CHEBI:32395) as a participant\n    ?reaction rdfs:label ?reactionName .\n    VALUES ?arachidonate { chebi:32395 }  # Using the provided CHEBI ID\n    ?reaction ?participant ?arachidonate . # Assuming ?participant links to reaction participants\n    \n    # Optionally, filter for reactions that also involve proteins (this part is speculative and may need adjustment)\n    ?reaction ?proteinParticipant ?protein . # Link to UniProt protein\n  }\n}",
    "predicted_endpoint": "https://sparql.uniprot.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "ad8fe526-89b9-45ac-bc9e-5acf58a3cf95",
    "evaluation_timestamp": "2025-04-21T23:29:49.629882",
    "question_understanding_tokens": 249,
    "question_understanding_completion_tokens": 43,
    "question_understanding_total_tokens": 292,
    "sparql_construction_prompt_tokens": 1625,
    "sparql_construction_completion_tokens": 0,
    "sparql_construction_total_tokens": 1625,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "The read operation timed out"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/12",
    "natural_language_question": "Select all Rhea reactions linked to protein sequences (enzymes and transporters) in UniProtKB",
    "ground_truth_query": "PREFIX rh: <http://rdf.rhea-db.org/>\nPREFIX up: <http://purl.uniprot.org/core/>\n\n# Query 12\n# Select all Rhea reactions used to annotate enzyme sequences in UniProtKB\n# return the number of UniProtKB entries\n# Federated query using a service to UniProt SPARQL endpoint\n#\n# This query corresponds to the Rhea website query:\n# https://www.rhea-db.org/rhea?query=uniprot:*\n#\nSELECT ?uniprotCount ?rhea ?accession ?equation \nWHERE {\n  SERVICE <https://sparql.uniprot.org/sparql> { \n  \tSELECT ?rhea (count(?uniprot) as ?uniprotCount) {\n      ?uniprot up:annotation/up:catalyticActivity/up:catalyzedReaction ?rhea . \n  \t}\n  \tGROUP BY ?rhea\n  }\n  ?rhea rh:accession ?accession .\n  ?rhea rh:equation ?equation .\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/12.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\n# Prefix declarations for commonly used namespaces\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX uniprot: <http://purl.uniprot.org/core/>\n\n# Select the Rhea reaction identifiers\nSELECT DISTINCT ?rheaReaction\n\nWHERE {\n  # Subquery to retrieve UniProtKB protein identifiers for enzymes and transporters\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    SELECT DISTINCT ?protein\n    WHERE {\n      {\n        # Find proteins annotated as enzymes\n        ?protein a uniprot:Protein .\n        ?protein rdfs:label ?enzymeLabel . #Get the label\n        FILTER (CONTAINS(LCASE(?enzymeLabel), \"enzyme\")) #Filter by the label\n      }\n      UNION\n      {\n        # Find proteins annotated as transporters\n        ?protein a uniprot:Protein .\n        ?protein rdfs:label ?transporterLabel . #Get the label\n        FILTER (CONTAINS(LCASE(?transporterLabel), \"transporter\")) #Filter by the label\n      }\n    }\n  }\n\n  # Use the retrieved UniProtKB protein identifiers to find corresponding Rhea reactions\n  SERVICE <https://sparql.rhea-db.org/sparql> {\n    ?rheaReaction rhea:equation ?equation . #Get the reaction equation\n    ?rheaReaction rdfs:label ?rheaLabel . #Get the label\n    ?proteinLink rhea:rheaId ?rheaReaction . #Link the protein to the reaction\n\n    # Filter by the UniProtKB protein identifiers retrieved from the UniProt SPARQL endpoint\n    FILTER (?proteinLink IN (SELECT ?protein WHERE {\n      SERVICE <https://sparql.uniprot.org/sparql> {\n        {\n          SELECT DISTINCT ?protein\n          WHERE {\n                ?protein a uniprot:Protein .\n                ?protein rdfs:label ?enzymeLabel . #Get the label\n        \t\tFILTER (CONTAINS(LCASE(?enzymeLabel), \"enzyme\")) #Filter by the label\n          }\n        }\n        UNION\n        {\n          SELECT DISTINCT ?protein\n          WHERE {\n                ?protein a uniprot:Protein .\n                ?protein rdfs:label ?transporterLabel . #Get the label\n        \t\tFILTER (CONTAINS(LCASE(?transporterLabel), \"transporter\")) #Filter by the label\n          }\n        }\n      }\n    }))\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "59773ff0-4cac-4c24-af78-8b00054e2eef",
    "evaluation_timestamp": "2025-04-21T23:35:02.579665",
    "question_understanding_tokens": 250,
    "question_understanding_completion_tokens": 38,
    "question_understanding_total_tokens": 288,
    "sparql_construction_prompt_tokens": 2131,
    "sparql_construction_completion_tokens": 0,
    "sparql_construction_total_tokens": 2131,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Line 18, column 18: Unresolved prefixed name: rdfs:label",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "Line 18, column 18: Unresolved prefixed name: rdfs:label"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/112_Total_number_of_reaction_ec_protein_links",
    "natural_language_question": "Total number of <reaction> <ec> <protein> links",
    "ground_truth_query": "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX up:<http://purl.uniprot.org/core/>\n\nSELECT\n  (count(?reaction) as ?reactionEcProteinLinkCount)\nWHERE {\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:ec ?enzyme\n  SERVICE <http://sparql.uniprot.org/sparql> {\n    ?protein up:reviewed true .\n    ?protein up:enzyme ?enzyme.\n  }\n}",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "http://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/112_Total_number_of_reaction_ec_protein_links.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX uniprot: <http://purl.uniprot.org/core/>\n\nSELECT (COUNT(DISTINCT ?rheaId) AS ?totalLinks)\nWHERE {\n  # Find reactions in RheaDB\n  ?rheaId a rhea:Reaction .\n\n  # Use SERVICE to query UniProt for proteins associated with EC numbers that are involved in the Rhea reaction\n  SERVICE <https://sparql.uniprot.org/sparql> {\n    ?protein a uniprot:Protein .\n    ?protein uniprot:ecNumber ?ecNumber .\n    #Assuming some link to Rhea based on the EC number\n    FILTER EXISTS {\n      ?rheaReaction rhea:ec ?ecNumber .\n    }\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "62db2edd-7f4c-4709-8fc0-33e0e1efcb96",
    "evaluation_timestamp": "2025-04-21T23:35:10.314285",
    "question_understanding_tokens": 245,
    "question_understanding_completion_tokens": 23,
    "question_understanding_total_tokens": 268,
    "sparql_construction_prompt_tokens": 1930,
    "sparql_construction_completion_tokens": 0,
    "sparql_construction_total_tokens": 1930,
    "is_valid_sparql": true,
    "sparql_syntax_error": "syntactically correct",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": false,
    "predicted_query_result_is_empty": false,
    "error_occured_at_endpoint_message": "no error"
  },
  {
    "resource": "https://sparql.rhea-db.org/.well-known/sparql-examples/117_Retrieve_parent_reactions_and_their_catalyzing_enzymes_for_a_metabolite_that_is_not_directly_involved_in_a_reaction",
    "natural_language_question": "Retrieve parent reactions (and their catalyzing enzymes) for a metabolite that is not directly involved in a reaction (ex: CHEBI:83137).",
    "ground_truth_query": "PREFIX CHEBI: <http://purl.obolibrary.org/obo/CHEBI_>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rh:<http://rdf.rhea-db.org/>\nPREFIX ec:<http://purl.uniprot.org/enzyme/>\nPREFIX up:<http://purl.uniprot.org/core/>\nPREFIX taxon:<http://purl.uniprot.org/taxonomy/>\nPREFIX keywords:<http://purl.uniprot.org/keywords/>\n\nSELECT\n  ?chebi\n  ?ecNumber\n  (count(?protein) as ?proteinCount)\n  ?reaction\n  ?equation\nWHERE {\n  ?reaction rdfs:subClassOf rh:Reaction .\n  ?reaction rh:status rh:Approved .\n  ?reaction rh:equation ?equation .\n  ?reaction rh:ec ?ecNumber .\n  ?reaction rh:side ?reactionSide .\n  ?reactionSide rh:contains ?participant .\n  ?participant rh:compound ?compound .\n  ?compound rh:chebi ?chebi .\n  CHEBI:83137 rdfs:subClassOf+ ?chebi.\n\n  SERVICE <https://sparql.uniprot.org/sparql> {\n  ?protein a up:Protein .\n  ?protein up:reviewed true .\n    {?protein up:enzyme ?ecNumber}\n  UNION\n    {?protein up:domain/up:enzyme ?ecNumber}\n  UNION\n    {?protein up:component/up:enzyme ?ecNumber} .\n  }\n} \nGROUP BY ?chebi ?ecNumber ?reaction ?equation",
    "target_endpoint": "https://sparql.rhea-db.org/sparql",
    "federates_with": [
      "https://sparql.uniprot.org/sparql"
    ],
    "endpoint_set": "Rhea",
    "file_path": "Rhea/117_Retrieve_parent_reactions_and_their_catalyzing_enzymes_for_a_metabolite_that_is_not_directly_involved_in_a_reaction.ttl",
    "predicted_query": "# https://sparql.rhea-db.org/sparql\n# Federated query to find parent reactions and catalyzing enzymes for a given metabolite (CHEBI:83137)\nPREFIX rhea: <http://rdf.rhea-db.org/>\nPREFIX chebi: <http://purl.obolibrary.org/obo/CHEBI_>\n\nSELECT DISTINCT ?reaction ?reactionId ?enzyme\nWHERE {\n  # Define the metabolite of interest\n  BIND (chebi:83137 AS ?metabolite)\n\n  # Find reactions where the metabolite is a reactant or product\n  {\n    ?reaction rhea: Rhea_has_reactant ?metabolite .\n  } UNION {\n    ?reaction rhea: Rhea_has_product ?metabolite .\n  }\n\n  # Get the Rhea ID for the reaction\n  ?reaction rhea: Rhea_ID ?reactionId .\n\n  #Optional find catalyzing enzymes for the reaction. Adding SERVICE to query UniProt for enzyme information related to these reactions\n  OPTIONAL {\n      SERVICE <https://sparql.uniprot.org/sparql> {\n         # Assuming UniProt contains information about enzymes catalyzing Rhea reactions, try to link reactions to enzymes\n         ?enzyme uniprot:catalyzes ?reactionId . # This property might need adjustment based on UniProt's actual schema\n      }\n  }\n}",
    "predicted_endpoint": "https://sparql.rhea-db.org/sparql",
    "predicted_endpoint_equal_to_target_endpoint": true,
    "predicted_endpoint_in_federates_with": false,
    "predicted_endpoint_or_federated_endpoint": true,
    "run_id_langsmith": "4054b904-eab1-4828-935f-1a876d104e3a",
    "evaluation_timestamp": "2025-04-21T23:40:40.608047",
    "question_understanding_tokens": 266,
    "question_understanding_completion_tokens": 36,
    "question_understanding_total_tokens": 302,
    "sparql_construction_prompt_tokens": 2157,
    "sparql_construction_completion_tokens": 0,
    "sparql_construction_total_tokens": 2157,
    "is_valid_sparql": false,
    "sparql_syntax_error": "Lexical error at line 13, column 38.  Encountered: '32' (32), after prefix \"Rhea_has_reactant\"",
    "result_eval_f1_score": 0.0,
    "result_eval_precision": 0.0,
    "result_eval_recall": 0.0,
    "error_occured_at_endpoint": true,
    "predicted_query_result_is_empty": true,
    "error_occured_at_endpoint_message": "Lexical error at line 13, column 38.  Encountered: '32' (32), after prefix \"Rhea_has_reactant\""
  }
]